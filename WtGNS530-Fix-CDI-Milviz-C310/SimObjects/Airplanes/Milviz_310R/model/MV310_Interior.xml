<?xml version="1.0" encoding="utf-8" ?>
<ModelInfo>
	<LODS>
		<!-- Highest LOD -->
		<!-- minimum display size in % (should be bounding sphere vertical screen size, sphere will often be slightly larger than you expect) -->
		<!-- default minSize is 0 -->
		<LOD minSize="100" ModelFile="MV310_Interior_LOD0.gltf"/>
		<LOD minSize="0" ModelFile="MV310_Interior_LOD1.gltf"/>
	</LODS>

	<Behaviors>

	<!-- INCLUDES ################################### -->

		<Include ModelBehaviorFile="Asobo\Common.xml"/>
		<Include ModelBehaviorFile="Asobo\GPS\AS530.xml"/>
		<Include ModelBehaviorFile="Asobo\GPS\AS430.xml"/>
		<Include ModelBehaviorFile="Asobo\Transponder\AS330.xml"/>
		<Include ModelBehaviorFile="Asobo\NAVCOM\ADF.xml"/>
		<Include ModelBehaviorFile="Asobo\NAVCOM\KAP140.xml"/>
		<Include ModelBehaviorFile="Asobo\NAVCOM\NavComSystem.xml"/>
		<Include ModelBehaviorFile="Asobo\GlassCockpit\AS5.xml"/>
		<Include ModelBehaviorFile="Asobo\GlassCockpit\AS1000.xml"/>
		<Include ModelBehaviorFile="Asobo\Exterior.xml"/>

	<!-- INPUT EVENTS ############################### -->
		
		<InputEvent ID="MV_IE_TOOLTIP">
			<Presets>
				<Preset ID="MV_#TT_BASIC_ONLY#">

					<Parameters Type="Default">
						<Condition Valid="NO_TT_VALUE">
							<True>
								<TT_VALUE>'N/A'</TT_VALUE>
							</True>
						</Condition>
						<Condition Valid="TT_DESCR_NOT_DYNAMIC">
							<True>
								<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
							</True>
							<False>
								<TT_DESCRIPTION_IS_DYNAMIC>True</TT_DESCRIPTION_IS_DYNAMIC>
							</False>
						</Condition>
						<Condition Valid="TT_VALUE_NOT_DYNAMIC">
							<True>
								<TT_VALUE_IS_DYNAMIC>False</TT_VALUE_IS_DYNAMIC>
							</True>
							<False>
								<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
							</False>
						</Condition>
					</Parameters>

					<Tooltip>
						<Icon>#TT_ICON#</Icon>
						<Interaction>#TT_INTERACTION_FLAGS#</Interaction>
						<InteractionLockable>#TT_INTERACTION_LOCKABLE_FLAGS#</InteractionLockable>
						<TTDescription RPN="#TT_DESCRIPTION_IS_DYNAMIC#">#TT_DESCRIPTION#</TTDescription>
						<TTValue RPN="#TT_VALUE_IS_DYNAMIC#">#TT_VALUE#</TTValue>
					</Tooltip>
					<Value>
						<Units></Units>
						<Code></Code>
						<Init></Init>
					</Value>
					<Inc>
						<Code>quit</Code>
						<Parameters>
							<Param RPN="True">p0</Param>
						</Parameters>
					</Inc>
					<Dec>
						<Code>quit</Code>
						<Parameters>
							<Param RPN="True">p0</Param>
						</Parameters>
					</Dec>
					<Set>
						<Code>quit</Code>
						<Parameters>
							<Param RPN="True">p0</Param>
						</Parameters>
					</Set>
				</Preset>
			</Presets>
		</InputEvent>

	<!-- MACROS ##################################### -->

		<Macro Name="XMLRandom">
			(L:RandomSeed1,number) 0 == (L:RandomSeed2,number) 0 == or if{ (P:Absolute Time,seconds) abs d 2147483563 % (&gt;L:RandomSeed1,number) sqrt d d * * abs 2147483599 % (&gt;L:RandomSeed2,number) } (&gt;:RandomSeed1,number) 40014 * 2147483563 % (&gt;L:RandomSeed1,number) (L:RandomSeed2,number) 40692 * 2147483399 % (&gt;L:RandomSeed2,number) (L:RandomSeed1,number) (L:RandomSeed2,number) - 2147483563 / s1	l1 0 &lt; if{ l1 ++ s1 } l1
		</Macro>

		<Macro Name="APButtonEmissiveCode">
			(A:LIGHT POTENTIOMETER:#EMISSIVE_POTENTIOMETER#, percent over 100)
		</Macro>

	<!-- HANDLING ################################### -->

		<Component ID="Control_Lock" Node="C310_Control_Lock">
			<PART_ID>C310_Control_Lock</PART_ID>
			<UseTemplate Name="ASOBO_GT_Interaction_LeftSingle_Code">
				<LEFT_SINGLE_CODE>
					-1 (>L:C310_Control_Lock,bool)
				</LEFT_SINGLE_CODE>
				<TOOLTIPID>Control Lock Visibility</TOOLTIPID>
			</UseTemplate>
		</Component>

		<Component ID="CONTROL_LOCK_vis" Node="C310_Control_Lock">
			<PART_ID>C310_Control_Lock</PART_ID>
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_Control_Lock,bool)</VISIBILITY_CODE>
			</UseTemplate> 
		</Component>

		<Component ID="HANDLING_TRIMS">
			<UseTemplate Name="ASOBO_HANDLING_Wheel_ElevatorTrim_Template">
				<HIGHLIGHT_NODE_ID>HANDLING_Wheel_ElevatorTrim_Pitch</HIGHLIGHT_NODE_ID>
				<ANIM_NAME>HANDLING_Wheel_ElevatorTrim_Pitch</ANIM_NAME>
				<PART_ID>HANDLING_Wheel_ElevatorTrim_Pitch</PART_ID>
				<NODE_ID>HANDLING_Wheel_ElevatorTrim_Pitch</NODE_ID>
				<TOOLTIPID>Elevator Trim (%((A:ELEVATOR TRIM, percent))%!d!% %%)</TOOLTIPID>
				<IE_ELEVATOR_TRIM>Wheel</IE_ELEVATOR_TRIM>
			</UseTemplate>
			<UseTemplate Name="ASOBO_HANDLING_Indicator_ElevatorTrim_Template">
				<ANIM_NAME>HANDLING_Indicator_ElevatorTrim</ANIM_NAME>
			</UseTemplate>
			<UseTemplate Name="ASOBO_HANDLING_Switch_ElevatorTrim_Template">
				<NODE_ID>HANDLING_Switch_ElevatorTrim_1</NODE_ID>
				<ANIM_NAME>HANDLING_Switch_ElevatorTrim_1</ANIM_NAME>	
				<PART_ID>HANDLING_Switch_ElevatorTrim_1</PART_ID>
				<ANIMREF_ID>-1</ANIMREF_ID>
				<ANIMTIP_0_ON_CURSOR>UpArrow</ANIMTIP_0_ON_CURSOR>
				<ANIMTIP_1_ON_CURSOR>DownArrow</ANIMTIP_1_ON_CURSOR>
				<ANIMTIP_0>TT:COCKPIT.TOOLTIPS.MET_PITCH_TRIM_DN</ANIMTIP_0>
				<ANIMTIP_1>TT:COCKPIT.TOOLTIPS.MET_PITCH_TRIM_UP</ANIMTIP_1>
				<TRIM_LIMIT>10</TRIM_LIMIT>
				<IE_ELEVATOR_TRIM>Yoke</IE_ELEVATOR_TRIM>
			</UseTemplate>
			<UseTemplate Name="ASOBO_HANDLING_Knob_AileronTrim_Template">		
			</UseTemplate>
			<UseTemplate Name="ASOBO_HANDLING_Knob_RudderTrim_Template">
			</UseTemplate>
			<UseTemplate Name="ASOBO_HANDLING_Push_AP_Trim_Disc_Template">
				<NODE_ID>HANDLING_Push_AP_Trim_Disc_1</NODE_ID>
				<ANIM_NAME>HANDLING_Push_AP_Trim_Disc_1</ANIM_NAME>			
				<SET_TRIM_RUDDER>l0 (&gt;K:RUDDER_TRIM_DISABLED_SET)</SET_TRIM_RUDDER>
				<SET_TRIM_AILERON>l0 (&gt;K:AILERON_TRIM_DISABLED_SET)</SET_TRIM_AILERON>
				<SET_TRIM_ELEVATOR>l0 (&gt;K:ELEVATOR_TRIM_DISABLED_SET)</SET_TRIM_ELEVATOR>
				<GET_TRIM>(A:AILERON TRIM DISABLED, Bool) (A:RUDDER TRIM DISABLED, Bool) (A:ELEVATOR TRIM DISABLED, Bool) and and</GET_TRIM>
			</UseTemplate>
		</Component>

		<Component ID="UPDATE_Elevator_Trim">
			<!-- <UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>9</FREQUENCY>
				<UPDATE_CODE>
				(A:ELECTRICAL MAIN BUS VOLTAGE,volts) 10 &lt; if{
					1 (&gt;K:ELEVATOR_TRIM_DISABLED_SET)
				} els{
					0 (&gt;K:ELEVATOR_TRIM_DISABLED_SET)
				}
				(A:ELEVATOR TRIM DISABLED, Bool) (>L:C310_AP_TRIM_DISB,bool)
				</UPDATE_CODE>
			</UseTemplate> -->
		</Component>

		<Component ID="HANDLING_Flaps">
			<UseTemplate Name="ASOBO_HANDLING_Lever_Flaps_Template">
				<ANIMREF_ID>0</ANIMREF_ID>
				<ANIMTIP_0>TT:COCKPIT.TOOLTIPS.FLAPS_LEVER_UP</ANIMTIP_0>
				<ANIMTIP_0_ON_PERCENT>0</ANIMTIP_0_ON_PERCENT>
				<ANIMTIP_1>TT:COCKPIT.TOOLTIPS.FLAPS_LEVER_TO</ANIMTIP_1>
				<ANIMTIP_1_ON_PERCENT>0.5</ANIMTIP_1_ON_PERCENT>
				<ANIMTIP_2>TT:COCKPIT.TOOLTIPS.FLAPS_LEVER_LDG</ANIMTIP_2>
				<ANIMTIP_2_ON_PERCENT>1</ANIMTIP_2_ON_PERCENT>
				<USE_TRAJECTORY_DRAG_MODE>True</USE_TRAJECTORY_DRAG_MODE>
			</UseTemplate>
			<CameraTitle>Upper_Control_Pedestal</CameraTitle>
		</Component>

		<Component ID="Flap_Indicator">
			<DefaultTemplateParameters>
				<NODE_ID>HANDLING_Indicator_Flaps</NODE_ID>
				<ANIM_NAME>HANDLING_Indicator_Flaps</ANIM_NAME>
			</DefaultTemplateParameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseTemplate Name = "ASOBO_GT_Anim_Code">
					<ANIM_CODE>
						(A:TRAILING EDGE FLAPS LEFT ANGLE,degrees) 1.65 *
					</ANIM_CODE>
					<ANIM_LENGTH>50</ANIM_LENGTH>
					<ANIM_LAG>40</ANIM_LAG>
				</UseTemplate>
			</Component>
		</Component>

		<Component ID="Rudder_Trim_Indicator">
			<DefaultTemplateParameters>
				<NODE_ID>HANDLING_Knob_RudderTrim_Needle</NODE_ID>
				<ANIM_NAME>HANDLING_Knob_RudderTrim_Needle</ANIM_NAME>
			</DefaultTemplateParameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseTemplate Name = "ASOBO_GT_Anim_Code">
					<ANIM_CODE>
						(A:RUDDER TRIM PCT,percent) 2 / 50 +
					</ANIM_CODE>
					<ANIM_LENGTH>100</ANIM_LENGTH>
				</UseTemplate>
			</Component>
		</Component>

		<Component ID="Aileron_Trim_Indicator">
			<DefaultTemplateParameters>
				<NODE_ID>HANDLING_Knob_AileronTrim_Needle</NODE_ID>
				<ANIM_NAME>HANDLING_Knob_AileronTrim_Needle</ANIM_NAME>
			</DefaultTemplateParameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseTemplate Name = "ASOBO_GT_Anim_Code">
					<ANIM_CODE>
						(A:Aileron TRIM PCT,percent) 2 / 50 +
					</ANIM_CODE>
					<ANIM_LENGTH>100</ANIM_LENGTH>
				</UseTemplate>
			</Component>
		</Component>

		<Component ID="HANDLING_RudderPedals">
			<UseTemplate Name="ASOBO_HANDLING_RudderPedals_Template">
				<RUDDERPEDALS_TYPE>MERGED</RUDDERPEDALS_TYPE>
				<DIFFERENTIATE_BRAKE_ANIM_L_R>True</DIFFERENTIATE_BRAKE_ANIM_L_R>
				<NODE_ID>HANDLING_RudderPedals_1_Rudder</NODE_ID>
			</UseTemplate>
			<UseTemplate Name="ASOBO_HANDLING_Knob_RudderTrim_Template">
				<ANIM_NAME>RUDDER_TRIM_control_wheel</ANIM_NAME>
				<NODE_ID>knob_rudder_trim</NODE_ID>
				<PART_ID>knob_rudder_trim</PART_ID>
				<NEEDLE_NODE_ID>knob_rudder_trim_decal</NEEDLE_NODE_ID>
				<NEEDLE_ANIM_NAME>RUDDER_TRIM_NEEDLE</NEEDLE_ANIM_NAME>
				<USE_DEFAULT_VARIABLE_SPEED_TRIM>True</USE_DEFAULT_VARIABLE_SPEED_TRIM>
			</UseTemplate>
			<CameraTitle>Lower_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="HANDLING_Yokes">

			<Component ID="HANDLING_Yoke">
				<UseTemplate Name="ASOBO_GT_Anim_Code">
					<ANIM_NAME>HANDLING_YOKE_Lever_StickLR</ANIM_NAME>
					<ANIM_CODE>
						(L:C310_Control_Lock,bool) 0 == if{
							(E:IS IN VR, Bool) if{
								(A:YOKE X POSITION WITH AP LINEAR, percent over 100)
							} els{
								(A:YOKE X POSITION WITH AP, percent over 100)
							} 200 0.5 * * 50 +
						} els{
							50
						}
					</ANIM_CODE>
				</UseTemplate>
				<UseTemplate Name="ASOBO_GT_Anim_Code">
					<ANIM_NAME>HANDLING_YOKE_Lever_StickForeAft</ANIM_NAME>
					<ANIM_CODE>
						(L:C310_Control_Lock,bool) 0 == if{
							(A:YOKE Y POSITION WITH AP,percent) 2 / 50 +
						} els{
							50
						}
					</ANIM_CODE>
				</UseTemplate>
			</Component>

			<Component ID="Yoke_1_Visibility" Node="HANDLING_Yoke_1_Shaft">
				<PART_ID>HANDLING_Yoke_1_Shaft</PART_ID>
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_YokeHidden1,bool) !</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>
			<Component ID="Yoke_2_Visibility" Node="HANDLING_Yoke_2_Shaft">
				<PART_ID>HANDLING_Yoke_2_Shaft</PART_ID>
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_YokeHidden2,bool) !</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>
			<UseTemplate Name="ASOBO_HANDLING_Push_AP_Trim_Disc_Template">
				<DISABLE_TRIM>1 (&gt;K:ELEVATOR_TRIM_DISABLED_SET)</DISABLE_TRIM>
				<ENABLE_TRIM>0 (&gt;K:ELEVATOR_TRIM_DISABLED_SET)</ENABLE_TRIM>
				<NODE_ID>yoke_left_push</NODE_ID>
				<ANIM_NAME>yoke_left_push</ANIM_NAME>
			</UseTemplate>
			<UseTemplate Name="ASOBO_HANDLING_Switch_ElevatorTrim_Template">
				<NODE_ID>yoke_left_switch_trim</NODE_ID>
				<ANIM_NAME>yoke_left_switch_trim</ANIM_NAME>
				<MOMENTARY_MIN_DURATION>0.1</MOMENTARY_MIN_DURATION>
			</UseTemplate>
		</Component>

	<!-- LANDING GEAR ############################### -->
			
		<Component ID="LANDING_GEAR_Lever_Gear">
			<UseTemplate Name="ASOBO_LANDING_GEAR_Lever_Gear_Template">
				<WWISE_EVENT_1>lever_gear_up</WWISE_EVENT_1>
				<WWISE_EVENT_2>lever_gear_down</WWISE_EVENT_2>
			</UseTemplate>
			<UseTemplate Name="ASOBO_LANDING_GEAR_Light_Center_Template">
				<NODE_ID>light_landingGear_nose</NODE_ID>
			</UseTemplate>
			<UseTemplate Name="ASOBO_LANDING_GEAR_Light_Left_Template">
				<NODE_ID></NODE_ID>
			</UseTemplate>
			<UseTemplate Name="ASOBO_LANDING_GEAR_Light_Right_Template">
				<NODE_ID>light_landingGear_R</NODE_ID>
			</UseTemplate>
			<UseTemplate Name="ASOBO_LANDING_GEAR_Light_Unsafe_Template">
				<NODE_ID>light_landingGear_unsafe</NODE_ID>
				<CHECK_GEAR_CENTER_POSITION/>
				<CHECK_GEAR_LEFT_POSITION/>
				<CHECK_GEAR_RIGHT_POSITION/>
			</UseTemplate>
			<CameraTitle>Upper_Control_Pedestal</CameraTitle>
		</Component>

		<Component ID="LANDING_GEAR_ParkingBrake">
			<UseTemplate Name="ASOBO_LANDING_GEAR_Switch_ParkingBrake_Template">
				<ANIM_DELAY>0.25</ANIM_DELAY>
				<TOOLTIPID>TT:COCKPIT.TOOLTIPS.PARKBRAKE_DRAG_UP_INFO</TOOLTIPID>
			</UseTemplate>
			<CameraTitle>Lower_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="LANDING_GEAR_EmergGearHandle">
			<Parameters Type="Default">
				<NODE_ID>LANDING_GEAR_EmergGearHandle_Helper</NODE_ID>
				<ANIM_NAME>LANDING_GEAR_EmergGearHandle</ANIM_NAME>
				<PART_ID>LANDING_GEAR_EmergGearHandle</PART_ID>
				<WWISE_EVENT_1></WWISE_EVENT_1>
				<WWISE_EVENT_2></WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Emergency Gear Crank'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Engage handle and crank to lower landing gear'</TT_DESCRIPTION>
				<TT_VALUE>(A:GEAR EMERGENCY HANDLE POSITION, Bool) if{ 'Gear Lowered' } els{ 'Stowed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(A:GEAR EMERGENCY HANDLE POSITION, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(A:GEAR EMERGENCY HANDLE POSITION, Bool) ! if{
							(&gt;K:GEAR_EMERGENCY_HANDLE_TOGGLE)
						}
					</LEFT_SINGLE_CODE>
					<ANIM_LAG>40</ANIM_LAG>
				</UseTemplate>
				<CameraTitle>Lower_Control_Pedestal</CameraTitle>
			</Component>
		</Component>


	<!-- ENGINE ##################################### -->

		<Component ID="ENGINE_Prop_Strike">
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>3</FREQUENCY>
				<UPDATE_CODE>
					(L:C310_FAIL_LEFT_ENGINE, bool) ! if{
						(A:GEAR CENTER POSITION, percent over 100) 1 &lt; (A:GEAR LEFT POSITION, percent over 100) 1 &lt; or (A:CONTACT POINT IS ON GROUND:10, bool) and if{
							1 (&gt;L:C310_FAIL_LEFT_ENGINE, bool)
						}
					}
					(L:C310_FAIL_RIGHT_ENGINE, bool) ! if{
						(A:GEAR CENTER POSITION, percent over 100) 1 &lt; (A:GEAR RIGHT POSITION, percent over 100) 1 &lt; or (A:CONTACT POINT IS ON GROUND:11, bool) and if{
							1 (&gt;L:C310_FAIL_RIGHT_ENGINE, bool)
						}
					}
				</UPDATE_CODE>
			</UseTemplate>	
		</Component>

		<Component ID="ENGINE_Controls">
			<Component ID="ENGINE_Throttle_Levers">
				<UseTemplate Name="ASOBO_ENGINE_Lever_Throttle_Template">
					<ID>1</ID>
					<NODE_NAME>ENGINE_Lever_Throttle_1</NODE_NAME>
					<PART_ID>ENGINE_Lever_Throttle_1</PART_ID>
				</UseTemplate>
				<UseTemplate Name="ASOBO_ENGINE_Lever_Throttle_Template">
					<ID>2</ID>
					<NODE_NAME>ENGINE_Lever_Throttle_2</NODE_NAME>
					<PART_ID>ENGINE_Lever_Throttle_2</PART_ID>
				</UseTemplate>
				<CameraTitle>Upper_Control_Pedestal</CameraTitle>
			</Component>

			<Component ID="ENGINE_Propeller_Levers">
				<DefaultTemplateParameters>
					<DRAG_MIN_VALUE_OVERRIDE>(A:THROTTLE LOWER LIMIT, position 16k)</DRAG_MIN_VALUE_OVERRIDE>
					<LEVER_TYPE>REVERSE_IDLE_FULL</LEVER_TYPE>
					<DELTA_MIN>0.00075</DELTA_MIN>
				</DefaultTemplateParameters>
				<UseTemplate Name="ASOBO_ENGINE_Lever_Propeller_Template">
					<ID>1</ID>
					<NODE_NAME>ENGINE_Lever_Propeller_1</NODE_NAME>
					<PART_ID>ENGINE_Lever_Propeller_1</PART_ID>
				</UseTemplate>
				<UseTemplate Name="ASOBO_ENGINE_Lever_Propeller_Template">
					<ID>2</ID>
					<NODE_NAME>ENGINE_Lever_Propeller_2</NODE_NAME>
					<PART_ID>ENGINE_Lever_Propeller_2</PART_ID>
				</UseTemplate>
				<CameraTitle>Upper_Control_Pedestal</CameraTitle>
			</Component>

			<Component ID="SW_COWL_LEFT">
				<Parameters Type="Default">
					<NODE_ID>ENGINE_Lever_Cowlflaps_1</NODE_ID>
					<PART_ID>ENGINE_Lever_Cowlflaps_1</PART_ID>
					<ANIM_NAME>ENGINE_Lever_Cowlflaps_1</ANIM_NAME>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR>C310_SW_COWL_LEFT</KNOB_POSITION_VAR>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Left Cowl Flaps'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_AXIS_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Adjust Left Internal Cowl Flaps'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_COWL_LEFT) '%.0f%%' @sprintf</TT_VALUE>
				</Parameters>			
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Lever_DraggingWheelLeftDrag_Axis">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<CURSOR>Grab</CURSOR>
						<NO_ARROWS/>
						<DRAG_ANIM_NAME>#ANIM_NAME#</DRAG_ANIM_NAME>
						<USE_TRAJECTORY_DRAG_MODE>True</USE_TRAJECTORY_DRAG_MODE>
						<DRAG_CODE>(M:DragPercent) 100 * (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</DRAG_CODE>
						<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
						<POSITIVE_AXIS_CODE>
							(L:C310_SW_COWL_LEFT, enum) 10 - 0 max (>L:C310_SW_COWL_LEFT, enum) 
							16383 (L:C310_SW_COWL_LEFT_PCT, number) * (>K:COWLFLAP1_SET)
						</POSITIVE_AXIS_CODE>
						<NEGATIVE_AXIS_CODE>
							(L:C310_SW_COWL_LEFT, enum) 10 + 100 min (>L:C310_SW_COWL_LEFT, enum) 
							16383 (L:C310_SW_COWL_LEFT_PCT, number) * (>K:COWLFLAP1_SET)
						</NEGATIVE_AXIS_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Lower_Control_Pedestal</CameraTitle>
			</Component>

			<Component ID="SW_COWL_RIGHT">
				<Parameters Type="Default">
					<NODE_ID>ENGINE_Lever_Cowlflaps_2</NODE_ID>
					<PART_ID>ENGINE_Lever_Cowlflaps_2</PART_ID>
					<ANIM_NAME>ENGINE_Lever_Cowlflaps_2</ANIM_NAME>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR>C310_SW_COWL_RIGHT</KNOB_POSITION_VAR>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Right Cowl Flaps'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_AXIS_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Adjust Right Internal Cowl Flaps'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_COWL_RIGHT) '%.0f%%' @sprintf</TT_VALUE>
				</Parameters>			
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Lever_DraggingWheelLeftDrag_Axis">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<CURSOR>Grab</CURSOR>
						<NO_ARROWS/>
						<DRAG_ANIM_NAME>#ANIM_NAME#</DRAG_ANIM_NAME>
						<USE_TRAJECTORY_DRAG_MODE>True</USE_TRAJECTORY_DRAG_MODE>
						<DRAG_CODE>(M:DragPercent) 100 * (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</DRAG_CODE>
						<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
						<POSITIVE_AXIS_CODE>
							(L:C310_SW_COWL_RIGHT, enum) 10 - 0 max (>L:C310_SW_COWL_RIGHT, enum) 
							16383 (L:C310_SW_COWL_RIGHT_PCT, number) * (>K:COWLFLAP2_SET)
						</POSITIVE_AXIS_CODE>
						<NEGATIVE_AXIS_CODE>
							(L:C310_SW_COWL_RIGHT, enum) 10 + 100 min (>L:C310_SW_COWL_RIGHT, enum) 
							16383 (L:C310_SW_COWL_RIGHT_PCT, number) * (>K:COWLFLAP2_SET)
						</NEGATIVE_AXIS_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Lower_Control_Pedestal</CameraTitle>
			</Component>

			<Component ID="Alternate_Air_Left">
				<Parameters Type="Default">
					<NODE_ID>C310_Alternate_Air_1</NODE_ID>
					<PART_ID>C310_Alternate_Air_1</PART_ID>
					<ANIM_NAME>C310_Alternate_Air_1</ANIM_NAME>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR>C310_SW_ALTERNATE_AIR_LEFT</KNOB_POSITION_VAR>
					<KNOB_SPEED>10</KNOB_SPEED>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Left Alternate Air'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>ROTATE</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+ROTATE</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>ROTATE</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Left Alternate Air'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_ALTERNATE_AIR_LEFT, enum)</TT_VALUE>
				</Parameters>			
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_LENGTH>100</ANIM_LENGTH>
						<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
						<CLOCKWISE_CODE>
							(L:C310_SW_ALTERNATE_AIR_LEFT, enum) 10 - 0 max (>L:C310_SW_ALTERNATE_AIR_LEFT, enum) 
						</CLOCKWISE_CODE>
						<ANTICLOCKWISE_CODE>
							(L:C310_SW_ALTERNATE_AIR_LEFT, enum) 10 + 100 min (>L:C310_SW_ALTERNATE_AIR_LEFT, enum) 
						</ANTICLOCKWISE_CODE>
					</UseTemplate>	
				</Component>
				<CameraTitle>Lower_Control_Pedestal</CameraTitle>
			</Component>

			<Component ID="Alternate_Air_Right">
				<Parameters Type="Default">
					<NODE_ID>C310_Alternate_Air_2</NODE_ID>
					<PART_ID>C310_Alternate_Air_2</PART_ID>
					<ANIM_NAME>C310_Alternate_Air_2</ANIM_NAME>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR>C310_SW_ALTERNATE_AIR_RIGHT</KNOB_POSITION_VAR>
					<KNOB_SPEED>10</KNOB_SPEED>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Right Alternate Air'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>ROTATE</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+ROTATE</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>ROTATE</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Right Alternate Air'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_ALTERNATE_AIR_RIGHT, enum)</TT_VALUE>
				</Parameters>			
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_LENGTH>100</ANIM_LENGTH>
						<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
						<CLOCKWISE_CODE>
							(L:C310_SW_ALTERNATE_AIR_RIGHT, enum) 10 - 0 max (>L:C310_SW_ALTERNATE_AIR_RIGHT, enum) 
						</CLOCKWISE_CODE>
						<ANTICLOCKWISE_CODE>
							(L:C310_SW_ALTERNATE_AIR_RIGHT, enum) 10 + 100 min (>L:C310_SW_ALTERNATE_AIR_RIGHT, enum) 
						</ANTICLOCKWISE_CODE>
					</UseTemplate>	
				</Component>
				<CameraTitle>Lower_Control_Pedestal</CameraTitle>
			</Component>

		</Component>

	<!-- FUEL ####################################### -->

		<Component ID="SW_FUEL_PUMP_LEFT">
			<Parameters Type="Default">
				<NODE_ID>FUEL_Switch_Auxpump_1_Helper</NODE_ID>
				<ANIM_NAME>FUEL_Switch_Auxpump_1</ANIM_NAME>
				<PART_ID>FUEL_Switch_Auxpump_1</PART_ID>
				<INVERT_ANIM>True</INVERT_ANIM>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Aux Fuel Pump Left'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Select Left Aux Fuel Pump Function'</TT_DESCRIPTION>
				<TT_VALUE>
					(L:C310_SW_FUEL_PUMP_LEFT,enum) 0 == if{
							'High' 
					}
					(L:C310_SW_FUEL_PUMP_LEFT,enum) 1 == if{
							'Off' 
					}
					(L:C310_SW_FUEL_PUMP_LEFT,enum) 2 == if{
							'Low' 
					}
				</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Update Once="True">
					1 (>L:C310_SW_FUEL_PUMP_LEFT,enum)	
				</Update>
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name = "ASOBO_GT_Switch_3States">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<CODE_POS_0>
						0 (>L:C310_SW_FUEL_PUMP_LEFT,enum)
						(A:GENERAL ENG FUEL PUMP ON:1,bool) 0 == if{
							(>K:TOGGLE_ELECT_FUEL_PUMP1)
						}
					</CODE_POS_0>
					<CODE_POS_1>
						1 (>L:C310_SW_FUEL_PUMP_LEFT,enum)
						(A:GENERAL ENG FUEL PUMP ON:1,bool) 1 == if{
							(>K:TOGGLE_ELECT_FUEL_PUMP1)
						}
					</CODE_POS_1>
					<CODE_POS_2>
						2 (>L:C310_SW_FUEL_PUMP_LEFT,enum)
						(A:GENERAL ENG FUEL PUMP ON:1,bool) 0 == if{
							(>K:TOGGLE_ELECT_FUEL_PUMP1)
						}
					</CODE_POS_2>
					<STATE0_TEST>(L:C310_SW_FUEL_PUMP_LEFT,enum) 0 ==</STATE0_TEST>
					<STATE1_TEST>(L:C310_SW_FUEL_PUMP_LEFT,enum) 1 ==</STATE1_TEST>
					<STATE2_TEST>(L:C310_SW_FUEL_PUMP_LEFT,enum) 2 ==</STATE2_TEST>
				</UseTemplate>
			</Component>
			<CameraTitle>Lower_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="SW_FUEL_PUMP_RIGHT">
			<Parameters Type="Default">
				<NODE_ID>FUEL_Switch_Auxpump_2_Helper</NODE_ID>
				<ANIM_NAME>FUEL_Switch_Auxpump_2</ANIM_NAME>
				<PART_ID>FUEL_Switch_Auxpump_2</PART_ID>
				<INVERT_ANIM>True</INVERT_ANIM>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Aux Fuel Pump Right'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Select Right Aux Fuel Pump Function'</TT_DESCRIPTION>
				<TT_VALUE>
					(L:C310_SW_FUEL_PUMP_RIGHT,enum) 0 == if{
							'High' 
					}
					(L:C310_SW_FUEL_PUMP_RIGHT,enum) 1 == if{
							'Off' 
					}
					(L:C310_SW_FUEL_PUMP_RIGHT,enum) 2 == if{
							'Low' 
					}
				</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Update Once="True">
					1 (>L:C310_SW_FUEL_PUMP_RIGHT,enum)	
				</Update>
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name = "ASOBO_GT_Switch_3States">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<CODE_POS_0>
						0 (>L:C310_SW_FUEL_PUMP_RIGHT,enum)
					</CODE_POS_0>
					<CODE_POS_1>
						1 (>L:C310_SW_FUEL_PUMP_RIGHT,enum)
					</CODE_POS_1>
					<CODE_POS_2>
						2 (>L:C310_SW_FUEL_PUMP_RIGHT,enum)
					</CODE_POS_2>
					<STATE0_TEST>(L:C310_SW_FUEL_PUMP_RIGHT,enum) 0 ==</STATE0_TEST>
					<STATE1_TEST>(L:C310_SW_FUEL_PUMP_RIGHT,enum) 1 ==</STATE1_TEST>
					<STATE2_TEST>(L:C310_SW_FUEL_PUMP_RIGHT,enum) 2 ==</STATE2_TEST>
				</UseTemplate>
			</Component>
			<CameraTitle>Lower_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="SW_PRIMER">
			<Parameters Type="Default">
				<NODE_ID>C310_switch_primer_Helper</NODE_ID>
				<ANIM_NAME>C310_switch_primer</ANIM_NAME>
				<PART_ID>C310_switch_primer</PART_ID>
				<INVERT_ANIM>True</INVERT_ANIM>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Primer'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_AXIS_X</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+X_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>X_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Hold left / right to prime respective engine'</TT_DESCRIPTION>
				<TT_VALUE>
					(L:C310_SW_PRIMER,enum) 0 == if{
							'Left' 
					}
					(L:C310_SW_PRIMER,enum) 1 == if{
							'Off' 
					}
					(L:C310_SW_PRIMER,enum) 2 == if{
							'Right' 
					}
				</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Update Once="True">
					1 (>L:C310_SW_PRIMER,enum)	
				</Update>
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name = "ASOBO_GT_Switch_3States">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<CODE_POS_0>
						0 (>L:C310_SW_PRIMER,enum)
					</CODE_POS_0>
					<CODE_POS_1>
						1 (>L:C310_SW_PRIMER,enum)
					</CODE_POS_1>
					<CODE_POS_2>
						2 (>L:C310_SW_PRIMER,enum)
					</CODE_POS_2>
					<STATE0_TEST>(L:C310_SW_PRIMER,enum) 0 ==</STATE0_TEST>
					<STATE1_TEST>(L:C310_SW_PRIMER,enum) 1 ==</STATE1_TEST>
					<STATE2_TEST>(L:C310_SW_PRIMER,enum) 2 ==</STATE2_TEST>
					<SWITCH_DIRECTION>Horizontal</SWITCH_DIRECTION>
				</UseTemplate>
			</Component>
			<CameraTitle>Lower_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="SW_MIXTURE1">
			<UseTemplate Name="ASOBO_FUEL_Lever_Mixture_Template">
				<ANIM_NAME>FUEL_Lever_Mixture_1</ANIM_NAME>
				<NODE_ID>FUEL_Lever_Mixture_1</NODE_ID>
				<PART_ID>FUEL_Lever_Mixture_1</PART_ID>
				<ID>1</ID>
			</UseTemplate>
		</Component>
		<Component ID="SW_MIXTURE2">
			<UseTemplate Name="ASOBO_FUEL_Lever_Mixture_Template">
				<ANIM_NAME>FUEL_Lever_Mixture_2</ANIM_NAME>
				<NODE_ID>FUEL_Lever_Mixture_2</NODE_ID>
				<PART_ID>FUEL_Lever_Mixture_2</PART_ID>
				<ID>2</ID>
			</UseTemplate>
		</Component>

		<Component ID="SW_FUEL_SEL_LEFT">
			<Parameters Type="Default">
				<NODE_ID>FUEL_Switch_Cutoff_1</NODE_ID>
				<ANIM_NAME>FUEL_Switch_Cutoff_1</ANIM_NAME>
				<PART_ID>FUEL_Switch_Cutoff_1</PART_ID>
				<INVERT_ANIM>True</INVERT_ANIM>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Left Fuel Selector'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>ROTATE</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Select Active Fuel Tank'</TT_DESCRIPTION>
				<TT_VALUE>
					(L:C310_SW_FUEL_SEL_LEFT,enum) 0 == if{
							'Right Main' 
					}
					(L:C310_SW_FUEL_SEL_LEFT,enum) 1 == if{
							'Left Aux' 
					}
					(L:C310_SW_FUEL_SEL_LEFT,enum) 2 == if{
							'Left Main' 
					}
					(L:C310_SW_FUEL_SEL_LEFT,enum) 3 == if{
							'OFF' 
					}
				</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Update Once="True">
					2 (>L:C310_SW_FUEL_SEL_LEFT,enum)
				</Update>
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_4States">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_LENGTH>50</ANIM_LENGTH>
					<SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
					<SWITCH_POSITION_VAR>C310_SW_FUEL_SEL_LEFT</SWITCH_POSITION_VAR>
					<CODE_POS_0> 
						0 (>L:C310_SW_FUEL_SEL_LEFT,enum)
					</CODE_POS_0>
					<CODE_POS_1> 
						1 (>L:C310_SW_FUEL_SEL_LEFT,enum)
					</CODE_POS_1>
					<CODE_POS_2> 
						2 (>L:C310_SW_FUEL_SEL_LEFT,enum)
					</CODE_POS_2> 
					<CODE_POS_3> 
						3 (>L:C310_SW_FUEL_SEL_LEFT,enum)
					</CODE_POS_3>
					<STATE0_TEST>(L:C310_SW_FUEL_SEL_LEFT, enum) 0 ==</STATE0_TEST>
					<STATE1_TEST>(L:C310_SW_FUEL_SEL_LEFT, enum) 1 ==</STATE1_TEST>
					<STATE2_TEST>(L:C310_SW_FUEL_SEL_LEFT, enum) 2 ==</STATE2_TEST>
					<STATE3_TEST>(L:C310_SW_FUEL_SEL_LEFT, enum) 3 ==</STATE3_TEST>
				</UseTemplate>
			</Component>
			<CameraTitle>Lower_Control_Pedestal</CameraTitle>
		</Component>

		<Component ID="SW_FUEL_SEL_RIGHT">
			<Parameters Type="Default">
				<NODE_ID>FUEL_Switch_Cutoff_2</NODE_ID>
				<ANIM_NAME>FUEL_Switch_Cutoff_2</ANIM_NAME>
				<PART_ID>FUEL_Switch_Cutoff_2</PART_ID>
				<INVERT_ANIM>True</INVERT_ANIM>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Right Fuel Selector'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>ROTATE</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Select Active Fuel Tank'</TT_DESCRIPTION>
				<TT_VALUE>
					(L:C310_SW_FUEL_SEL_RIGHT,enum) 0 == if{
							'Left Main' 
					}
					(L:C310_SW_FUEL_SEL_RIGHT,enum) 1 == if{
							'Right Aux' 
					}
					(L:C310_SW_FUEL_SEL_RIGHT,enum) 2 == if{
							'Right Main' 
					}
					(L:C310_SW_FUEL_SEL_RIGHT,enum) 3 == if{
							'OFF' 
					}
				</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Update Once="True">
					2 (>L:C310_SW_FUEL_SEL_RIGHT,enum)
				</Update>
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_4States">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_LENGTH>50</ANIM_LENGTH>
					<SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
					<SWITCH_POSITION_VAR>C310_SW_FUEL_SEL_RIGHT</SWITCH_POSITION_VAR>
					<CODE_POS_0> 
						0 (>L:C310_SW_FUEL_SEL_RIGHT, enum)
					</CODE_POS_0>
					<CODE_POS_1> 
						1 (>L:C310_SW_FUEL_SEL_RIGHT, enum)
					</CODE_POS_1>
					<CODE_POS_2> 
						2 (>L:C310_SW_FUEL_SEL_RIGHT, enum)
					</CODE_POS_2> 
					<CODE_POS_3> 
						3 (>L:C310_SW_FUEL_SEL_RIGHT, enum)
					</CODE_POS_3>
					<STATE0_TEST>(L:C310_SW_FUEL_SEL_RIGHT, enum) 0 ==</STATE0_TEST>
					<STATE1_TEST>(L:C310_SW_FUEL_SEL_RIGHT, enum) 1 ==</STATE1_TEST>
					<STATE2_TEST>(L:C310_SW_FUEL_SEL_RIGHT, enum) 2 ==</STATE2_TEST>
					<STATE3_TEST>(L:C310_SW_FUEL_SEL_RIGHT, enum) 3 ==</STATE3_TEST>
				</UseTemplate>
			</Component>
			<CameraTitle>Lower_Control_Pedestal</CameraTitle>
		</Component>

		<Component ID="SW_FUEL_IND">
			<Parameters Type="Default">
				<NODE_ID>C310_FuelSwitchLevel001</NODE_ID>
				<ANIM_NAME>C310_FuelSwitchLevel0</ANIM_NAME>
				<PART_ID>C310_FuelSwitchLevel001</PART_ID>
				<INVERT_ANIM>False</INVERT_ANIM>
				<WWISE_EVENT_1>switch_toggle_metal_small_momentary_2pos_up</WWISE_EVENT_1>
				<WWISE_EVENT_2>switch_toggle_metal_small_momentary_2pos_down</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Fuel Gauge Selector'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_AXIS_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Select Fuel Indication'</TT_DESCRIPTION>
				<TT_VALUE>
					(L:C310_SW_FUEL_IND,enum) 0 == if{
							'Main Tanks' 
					}
					(L:C310_SW_FUEL_IND,enum) 1 == if{
							'Selected Tanks' 
					}
					(L:C310_SW_FUEL_IND,enum) 2 == if{
							'Aux Tanks' 
					}
				</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Update Once="True">
					1 (>L:C310_SW_FUEL_IND,enum)	
				</Update>
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name = "ASOBO_GT_Switch_3States">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<CODE_POS_0>
						0 (>L:C310_SW_FUEL_IND,enum)
					</CODE_POS_0>
					<CODE_POS_1>
						1 (>L:C310_SW_FUEL_IND,enum)
					</CODE_POS_1>
					<CODE_POS_2>
						2 (>L:C310_SW_FUEL_IND,enum)
					</CODE_POS_2>
					<MOMENTARY_SWITCH/>
				</UseTemplate>
			</Component>
			<CameraTitle>Right_Instrument_Panel</CameraTitle>
		</Component>

		<Component ID="fuel_level_Left_tip_anim">  
			<UseTemplate Name="ASOBO_GT_Anim_Sim">
				<ANIM_NAME>fuel_level_Left_tip</ANIM_NAME>
				<ANIM_SIMVAR>FUEL TANK LEFT TIP QUANTITY</ANIM_SIMVAR>
				<ANIM_SIMVAR_UNITS>gallons</ANIM_SIMVAR_UNITS>
				<ANIM_SIMVAR_BIAS>0</ANIM_SIMVAR_BIAS>
				<ANIM_LENGTH>50</ANIM_LENGTH>
			</UseTemplate>
			<CameraTitle>Right_Instrument_Panel</CameraTitle>
		</Component>

		<Component ID="fuel_level_Right_tip_anim">  
			<UseTemplate Name="ASOBO_GT_Anim_Sim">
				<ANIM_NAME>fuel_level_Right_tip</ANIM_NAME>
				<ANIM_SIMVAR>FUEL TANK RIGHT TIP QUANTITY</ANIM_SIMVAR>
				<ANIM_SIMVAR_UNITS>gallons</ANIM_SIMVAR_UNITS>
				<ANIM_SIMVAR_BIAS>0</ANIM_SIMVAR_BIAS>
				<ANIM_LENGTH>50</ANIM_LENGTH>
			</UseTemplate>
			<CameraTitle>Right_Instrument_Panel</CameraTitle>
		</Component>

		<Component ID="fuelSwitchlevel_anim_helper">  
			<UseTemplate Name="ASOBO_GT_Anim_Code">
				<ANIM_NAME>fuel_Switch_helper</ANIM_NAME>
				<ANIM_CODE>					
					(L:FuelTankSwitch, number) 50 *
				</ANIM_CODE> 
				<ANIM_LENGTH>50</ANIM_LENGTH>
			</UseTemplate>
			<CameraTitle>Right_Instrument_Panel</CameraTitle>
		</Component>

		<Component ID="fuelSwitchlevel_anim_helper_two">  
			<UseTemplate Name="ASOBO_GT_Anim_Code">
				<ANIM_NAME>fuel_Switch_helper_two</ANIM_NAME>
				<ANIM_CODE>					
					(L:FuelTankSwitch, number) 50 *
				</ANIM_CODE> 
			<ANIM_LENGTH>50</ANIM_LENGTH>
			</UseTemplate>
			<CameraTitle>Right_Instrument_Panel</CameraTitle>
		</Component>

	<!-- ELECTRICAL ################################# -->
	
		<!-- Switches: Front Row -->

		<Component ID="ELECTRICAL">
			<Component ID="SW_BATTERY">
				<Parameters Type="Default">
					<NODE_ID>ELECTRICAL_Switch_Battery_Master</NODE_ID>
					<ANIM_NAME>ELECTRICAL_Switch_Battery_Master</ANIM_NAME>
					<PART_ID>ELECTRICAL_Switch_Battery_Master</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_medium_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_medium_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Battery Switch'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Battery Switch'</TT_DESCRIPTION>
					<TT_VALUE>(A:ELECTRICAL MASTER BATTERY,bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(A:ELECTRICAL MASTER BATTERY,bool) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(A:ELECTRICAL MASTER BATTERY,bool) 0 == if{
								0 (>L:C310_Electrical_Crash_Bar,bool)
							}
							(>K:TOGGLE_MASTER_BATTERY)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Lower_Switch_Panel</CameraTitle>
			</Component>

			<Component ID="Left_Crash_Bar">
				<Parameters Type="Default">
					<NODE_ID>C310_Electrical_Bar</NODE_ID>
					<ANIM_NAME>C310_Electrical_Bar</ANIM_NAME>
					<PART_ID>C310_Electrical_Bar</PART_ID>
					<WWISE_EVENT_1>switch_bar_down</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_bar_up</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Electrical Crash Bar'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_AXIS_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Crash Bar'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<Update Once="True">
						0 (>L:C310_Electrical_Crash_Bar,bool) 	
					</Update>
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(L:C310_Electrical_Crash_Bar,enum) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(L:C310_Electrical_Crash_Bar,bool) ! (>L:C310_Electrical_Crash_Bar,bool) 
							(L:C310_Electrical_Crash_Bar,bool) 1 == if{
								(A:ELECTRICAL MASTER BATTERY,bool) 1 == if{
									(>K:TOGGLE_MASTER_BATTERY)
								}
								(A:GENERAL ENG MASTER ALTERNATOR:1, bool) 1 == if{
									(>K:TOGGLE_ALTERNATOR1)
								}
								(A:GENERAL ENG MASTER ALTERNATOR:2, bool) 1 == if{
									(>K:TOGGLE_ALTERNATOR2)
								}
							}
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Lower_Switch_Panel</CameraTitle>
			</Component>

			<Component ID="Right_Crash_Bar">
				<Parameters Type="Default">
					<NODE_ID>C310_Engine_Bar</NODE_ID>
					<ANIM_NAME>C310_Engine_Bar</ANIM_NAME>
					<PART_ID>C310_Engine_Bar</PART_ID>
					<WWISE_EVENT_1>switch_bar_down</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_bar_up</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Engine Crash Bar'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_AXIS_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Crash Bar'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<Update Once="True">
						0 (>L:C310_Engine_Crash_Bar,bool) 	
					</Update>
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(L:C310_Engine_Crash_Bar,enum) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(L:C310_Engine_Crash_Bar,bool) ! (>L:C310_Engine_Crash_Bar,bool) 
							(L:C310_Engine_Crash_Bar,bool) 1 == if{
								(A:RECIP ENG LEFT MAGNETO:1, Bool) 1 == if{
									(>K:MAGNETO1_LEFT)
								}
								(A:RECIP ENG RIGHT MAGNETO:1, Bool) 1 == if{
									(>K:MAGNETO1_RIGHT)
								}
								(A:RECIP ENG LEFT MAGNETO:2, Bool) 1 == if{
									(>K:MAGNETO2_LEFT)
								}
								(A:RECIP ENG RIGHT MAGNETO:2, Bool) 1 == if{
									(>K:MAGNETO2_RIGHT)
								}
							}
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Lower_Switch_Panel</CameraTitle>
			</Component>
			
			<Component ID="SW_ALTERNATOR_LEFT">
				<Parameters Type="Default">
					<NODE_ID>ELECTRICAL_Switch_Alternator_1</NODE_ID>
					<ANIM_NAME>ELECTRICAL_Switch_Alternator_1</ANIM_NAME>
					<PART_ID>ELECTRICAL_Switch_Alternator_1</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_medium_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_medium_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Left Alternator'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Left Alternator Switch'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_ALTERNATOR_LEFT, bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(L:C310_SW_ALTERNATOR_LEFT, bool) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(L:C310_SW_ALTERNATOR_LEFT, bool) 0 == if{
								0 (>L:C310_Electrical_Crash_Bar,bool)
							}
							(>K:TOGGLE_ALTERNATOR1)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Lower_Switch_Panel</CameraTitle>
			</Component>
			
			<Component ID="SW_ALTERNATOR_RIGHT">
				<Parameters Type="Default">
					<NODE_ID>ELECTRICAL_Switch_Alternator_2</NODE_ID>
					<ANIM_NAME>ELECTRICAL_Switch_Alternator_2</ANIM_NAME>
					<PART_ID>ELECTRICAL_Switch_Alternator_2</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_medium_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_medium_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Right Alternator'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Right Alternator Switch'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_ALTERNATOR_RIGHT, bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(L:C310_SW_ALTERNATOR_RIGHT, bool) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(L:C310_SW_ALTERNATOR_RIGHT, bool) 0 == if{
								0 (>L:C310_Electrical_Crash_Bar,bool)
							}
							(>K:TOGGLE_ALTERNATOR2)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Lower_Switch_Panel</CameraTitle>
			</Component>
			
			<Component ID="SW_MAG_L1">
				<Parameters Type="Default">
					<NODE_ID>SW_MAG_L1</NODE_ID>
					<ANIM_NAME>SW_MAG_L1</ANIM_NAME>
					<PART_ID>SW_MAG_L1</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_medium_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_medium_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Left Mag 1 Switch'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Left Mag 1 Switch'</TT_DESCRIPTION>
					<TT_VALUE>(A:RECIP ENG LEFT MAGNETO:1, Bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(A:RECIP ENG LEFT MAGNETO:1, Bool) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(A:RECIP ENG LEFT MAGNETO:1, Bool) 0 == if{
								0 (>L:C310_Engine_Crash_Bar,bool)
							}
							(>K:MAGNETO1_LEFT)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Lower_Switch_Panel</CameraTitle>
			</Component>
			
			<Component ID="SW_MAG_L2">
				<Parameters Type="Default">
					<NODE_ID>SW_MAG_L2</NODE_ID>
					<ANIM_NAME>SW_MAG_L2</ANIM_NAME>
					<PART_ID>SW_MAG_L2</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_medium_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_medium_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Left Mag 2 Switch'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Left Mag 2 Switch'</TT_DESCRIPTION>
					<TT_VALUE>(A:RECIP ENG RIGHT MAGNETO:1, Bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(A:RECIP ENG RIGHT MAGNETO:1, Bool) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(A:RECIP ENG RIGHT MAGNETO:1, Bool) 0 == if{
								0 (>L:C310_Engine_Crash_Bar,bool)
							}
							(>K:MAGNETO1_RIGHT)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Lower_Switch_Panel</CameraTitle>
			</Component>
			
			<Component ID="SW_MAG_R1">
				<Parameters Type="Default">
					<NODE_ID>SW_MAG_R1</NODE_ID>
					<ANIM_NAME>SW_MAG_R1</ANIM_NAME>
					<PART_ID>SW_MAG_R1</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_medium_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_medium_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Right Mag 1 Switch'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Right Mag 1 Switch'</TT_DESCRIPTION>
					<TT_VALUE>(A:RECIP ENG LEFT MAGNETO:2, Bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(A:RECIP ENG LEFT MAGNETO:2, Bool) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(A:RECIP ENG LEFT MAGNETO:2, Bool) 0 == if{
								0 (>L:C310_Engine_Crash_Bar,bool)
							}
							(>K:MAGNETO2_LEFT)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Lower_Switch_Panel</CameraTitle>
			</Component>
			
			<Component ID="SW_MAG_R2">
				<Parameters Type="Default">
					<NODE_ID>SW_MAG_R2</NODE_ID>
					<ANIM_NAME>SW_MAG_R2</ANIM_NAME>
					<PART_ID>SW_MAG_R2</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_medium_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_medium_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Right Mag 2 Switch'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Right Mag 2 Switch'</TT_DESCRIPTION>
					<TT_VALUE>(A:RECIP ENG RIGHT MAGNETO:2, Bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(A:RECIP ENG RIGHT MAGNETO:2, Bool) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(A:RECIP ENG RIGHT MAGNETO:2, Bool) 0 == if{
								0 (>L:C310_Engine_Crash_Bar,bool)
							}
							(>K:MAGNETO2_RIGHT)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Lower_Switch_Panel</CameraTitle>
			</Component>

			<Component ID="STARTER_BUTTONS">			
				<UseTemplate Name="ASOBO_ELECTRICAL_Push_Starter_Template">
					<ID>1</ID>
					<PART_ID>ELECTRICAL_Push_Starter_1</PART_ID>
					<NODE_ID>ELECTRICAL_Push_Starter_1</NODE_ID>
					<TOOLTIPID>TT:COCKPIT.TOOLTIPS.BTN_PUSH_STARTER_LH</TOOLTIPID>
					<WWISE_EVENT_1>button_starter_press</WWISE_EVENT_1>
					<WWISE_EVENT_2>button_starter_release</WWISE_EVENT_2>
				</UseTemplate>
				<UseTemplate Name="ASOBO_ELECTRICAL_Push_Starter_Template">
					<ID>2</ID>
					<PART_ID>ELECTRICAL_Push_Starter_2</PART_ID>
					<NODE_ID>ELECTRICAL_Push_Starter_2</NODE_ID>
					<TOOLTIPID>TT:COCKPIT.TOOLTIPS.BTN_PUSH_STARTER_RH</TOOLTIPID>
					<WWISE_EVENT_1>button_starter_press</WWISE_EVENT_1>
					<WWISE_EVENT_2>button_starter_release</WWISE_EVENT_2>
				</UseTemplate>
				<CameraTitle>Lower_Switch_Panel</CameraTitle>
			</Component>

			<!-- Switches: Side Row --> <!-- Lights & deice switches are in their sections -->

			<Component ID="SW_AVIONICS">
				<Parameters Type="Default">
					<NODE_ID>ELECTRICAL_Switch_Avionics_Master</NODE_ID>
					<ANIM_NAME>ELECTRICAL_Switch_Avionics_Master</ANIM_NAME>
					<PART_ID>ELECTRICAL_Switch_Avionics_Master</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Avionics Master'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Avionics Master'</TT_DESCRIPTION>
					<TT_VALUE>(A:AVIONICS MASTER SWITCH,bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(A:AVIONICS MASTER SWITCH,bool) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(>K:TOGGLE_AVIONICS_MASTER)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

		</Component>	

	<!-- INSTRUMENTS LEFT PANEL ##################### -->

		<Component ID="INSTRUMENTS_LEFT_PANEL">
			<Component ID="INSTRUMENTS_LEFT_With_Lag">
				<DefaultTemplateParameters>
					<ANIM_LAG>100</ANIM_LAG>
				</DefaultTemplateParameters>

				<Component ID="INSTRUMENTS_LEFT_Electrical_Lag">
					<DefaultTemplateParameters>
					<FAILURE>(A:CIRCUIT GENERAL PANEL ON, Bool)</FAILURE>
					</DefaultTemplateParameters>

					<!-- ADF -->

					<Component ID="IN_ADF" Node="C310_ADF">
						<UseTemplate Name="ASOBO_GT_Anim_Code">
							<ANIM_NAME>C310_ADF</ANIM_NAME>
							<ANIM_CODE>
							(A:CIRCUIT ON:35,bool) 1 == if{
								(A:ADF RADIAL:1,degrees)
							} els{
								0
							}
							</ANIM_CODE> 
							<ANIM_LAG>50</ANIM_LAG>
							<ANIM_LENGTH>360</ANIM_LENGTH>
							<ANIM_WRAP>TRUE</ANIM_WRAP>
							<ANIM_SIMVAR_BIAS>180</ANIM_SIMVAR_BIAS>
						</UseTemplate>
					</Component>

					<Component ID="C310_ADF_ON" Node="RMIOffFlag">
						<Visibility>
						<Parameter>
							<Code>
							(A:AVIONICS MASTER SWITCH,bool) 1 == (A:CIRCUIT ON:35) 1 == and 
							if{ 0 } els{ 1 }
							</Code>
						</Parameter>
						</Visibility>
					</Component>
				</Component>

				<Component ID="INSTRUMENTS_LEFT_NonElectric_Lag">
				
				<!-- Airspeed -->
					<Component ID="C310_Airspeed_Needle">  
						<UseTemplate Name="ASOBO_GT_Anim_Code">
							<ANIM_NAME>INSTRUMENT_Needle_Airspeed</ANIM_NAME>
							<ANIM_CODE>
								(L:C310_Airspeed_Indicated,knots) 10 /
							</ANIM_CODE> 
							<ANIM_LAG>40</ANIM_LAG>
							<ANIM_LENGTH>30</ANIM_LENGTH>
						</UseTemplate>
					</Component>

					<Component ID="ADF_KNOB">
						<Parameters Type="Default">
							<NODE_ID>C310_ADF_Adjust</NODE_ID>
							<PART_ID>C310_ADF_Adjust</PART_ID>
							<ANIM_NAME>C310_ADF_Adjust</ANIM_NAME>
						</Parameters>
						<Parameters Type="Default">
							<TOOLTIP_TITLE>'ADF Heading Adjust'</TOOLTIP_TITLE>
							<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
							<TT_ICON>ROTATE</TT_ICON>
							<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
							<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
							<TT_DESCRIPTION>'ADF Heading Adjust'</TT_DESCRIPTION>
							<TT_VALUE>(A:ADF CARD,degrees) '%.0f°' @sprintf</TT_VALUE>
						</Parameters>			
						<Component ID="#NODE_ID#" Node="#NODE_ID#">
							<UseInputEvent ID="MV_IE_TOOLTIP">
								<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
							</UseInputEvent>
							<UseTemplate Name="ASOBO_GT_Knob_Infinite">
								<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
								<CLOCKWISE_CODE_DEFAULT_IM>
									1 (>K:ADF_CARD_INC)
								</CLOCKWISE_CODE_DEFAULT_IM>
								<ANTICLOCKWISE_CODE_DEFAULT_IM>
									1 (>K:ADF_CARD_DEC)
								</ANTICLOCKWISE_CODE_DEFAULT_IM>
								<CLOCKWISE_CODE_DRAG_IM>
									1 (>K:ADF_CARD_INC)
								</CLOCKWISE_CODE_DRAG_IM>
								<ANTICLOCKWISE_CODE_DRAG_IM>
									1 (>K:ADF_CARD_DEC)
								</ANTICLOCKWISE_CODE_DRAG_IM>
							</UseTemplate>	
						</Component>
					</Component>


					<Component ID="ADF_CARD" Node="C310_ADF_Compass">
						<UseTemplate Name="ASOBO_GT_Anim_Code">
							<ANIM_NAME>C310_ADF_Compass</ANIM_NAME>
							<ANIM_CODE>
								(A:ADF CARD,degrees)	
							</ANIM_CODE> 
							<ANIM_LAG>300</ANIM_LAG>
							<ANIM_LENGTH>360</ANIM_LENGTH>
							<ANIM_WRAP>TRUE</ANIM_WRAP>
						</UseTemplate>
					</Component>

				<!-- Vertical Speed -->

					<UseTemplate Name="ASOBO_INSTRUMENT_Needle_VerticalSpeed_Template">
						<DONT_APPEND_ID>True</DONT_APPEND_ID>
						<ANIM_LAG>240</ANIM_LAG>
					</UseTemplate>

					<Component ID="C310_needle_vsi_anim">  
						<UseTemplate Name="ASOBO_GT_Anim_Code">
							<ANIM_NAME>needle_vsi_anim</ANIM_NAME>
							<ANIM_CODE>					
								(A:VERTICAL SPEED, ft/min) 100 / 30 + 
							</ANIM_CODE> 
							<ANIM_LENGTH>60</ANIM_LENGTH>
						</UseTemplate>
					</Component>

				</Component>
			</Component>

			<Component ID="INSTRUMENTS_LEFT_Without_Lag">

				<Component ID="INSTRUMENTS_LEFT_Electrical_Nolag">
					<DefaultTemplateParameters>
					<FAILURE>(A:CIRCUIT GENERAL PANEL ON, Bool)</FAILURE>
					</DefaultTemplateParameters>

					<!-- Attitude Indicator (ADI) -->
				
						<UseTemplate Name="ASOBO_INSTRUMENT_AttitudeIndicator_Template">
							<NO_CAGE>True</NO_CAGE>
							<USE_FLAG>True</USE_FLAG>
							<DONT_FAIL_ATTITUDE_INDICATOR_ANIMATION>True</DONT_FAIL_ATTITUDE_INDICATOR_ANIMATION>
							<FAILURE>(A:CIRCUIT ON:43,Bool)</FAILURE>
							<USE_LINEAR_VALUES>False</USE_LINEAR_VALUES>
						</UseTemplate>

					<!-- EDM-700 Left -->

						<Component ID="SW_EDML_BUTTON_L">
							<Parameters Type="Default">
								<NODE_ID>EDM700_LeftEngine_LeftButton_Helper</NODE_ID>
								<ANIM_NAME>EDM700_LeftEngine_LeftButton</ANIM_NAME>
								<PART_ID>EDM700_LeftEngine_LeftButton</PART_ID>
								<WWISE_EVENT_1>button_edm_press</WWISE_EVENT_1>
								<WWISE_EVENT_2>button_edm_release</WWISE_EVENT_2>
							</Parameters>
							<Parameters Type="Default">
								<TOOLTIP_TITLE>'Step Button'</TOOLTIP_TITLE>
								<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
								<TT_ICON>PRIMARY_DOWN</TT_ICON>
								<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
								<TT_DESCRIPTION>
									(L:C310_EDML_MODE,enum) 0 == if{
										'Press to enter manual mode'
									} els{
										'Press to step through readouts'
									}
								</TT_DESCRIPTION>
								<TT_VALUE>
									(L:C310_EDML_MODE,enum) 0 == if{
										'Auto Mode'
									} els{
										(L:C310_EDML_STEP,enum) 1 == if{
											'Cyl 1' 
										}
										(L:C310_EDML_STEP,enum) 2 == if{
											'Cyl 2' 
										}
										(L:C310_EDML_STEP,enum) 3 == if{
											'Cyl 3' 
										}
										(L:C310_EDML_STEP,enum) 4 == if{
											'Cyl 4' 
										}
										(L:C310_EDML_STEP,enum) 5 == if{
											'Cyl 5' 
										}
										(L:C310_EDML_STEP,enum) 6 == if{
											'Cyl 6' 
										}
										(L:C310_EDML_STEP,enum) 7 == if{
											'Battery' 
										}
										(L:C310_EDML_STEP,enum) 8 == if{
											'OAT' 
										}
										(L:C310_EDML_STEP,enum) 9 == if{
											'OIL' 
										}
										(L:C310_EDML_STEP,enum) 10 == if{
											'DIF' 
										}
										(L:C310_EDML_STEP,enum) 11 == if{
											'CLD' 
										}
									}							
								</TT_VALUE>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseInputEvent ID="MV_IE_TOOLTIP">
									<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
								</UseInputEvent>
								<UseTemplate Name="ASOBO_GT_Push_Button_Timed">
									<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
									<ANIM_CODE>(L:C310_SW_EDML_L,bool) 10 *</ANIM_CODE>
									<LEFT_SINGLE_CODE>
										1 (>L:C310_SW_EDML_L,bool)
									</LEFT_SINGLE_CODE>
									<ANIM_LENGTH>10</ANIM_LENGTH>
									<ANIM_LAG>200</ANIM_LAG>
								</UseTemplate>
							</Component>
						</Component>

						<Component ID="SW_EDML_BUTTON_R">
							<Parameters Type="Default">
								<NODE_ID>EDM700_LeftEngine_RightButton_Helper</NODE_ID>
								<ANIM_NAME>EDM700_LeftEngine_RightButton</ANIM_NAME>
								<PART_ID>EDM700_LeftEngine_RightButton</PART_ID>
								<WWISE_EVENT_1>button_edm_press</WWISE_EVENT_1>
								<WWISE_EVENT_2>button_edm_release</WWISE_EVENT_2>
							</Parameters>
							<Parameters Type="Default">
								<TOOLTIP_TITLE>'LF Button'</TOOLTIP_TITLE>
								<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
								<TT_ICON>PRIMARY_DOWN</TT_ICON>
								<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
								<TT_DESCRIPTION>
									(L:C310_EDML_MODE,enum) 0 == if{
										'Press to toggle temp values between °F and °C'
									} els{
										'Press to return readout to auto mode'
									}
								</TT_DESCRIPTION>
								<TT_VALUE>
									(L:C310_EDML_FORC,enum) 0 == if{
										'°F'
									} els{
										'°C'
									}
								</TT_VALUE>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseInputEvent ID="MV_IE_TOOLTIP">
									<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
								</UseInputEvent>
								<UseTemplate Name="ASOBO_GT_Push_Button_Timed">
									<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
									<ANIM_CODE>(L:C310_SW_EDML_R,bool) 10 *</ANIM_CODE>
									<LEFT_SINGLE_CODE>
										1 (>L:C310_SW_EDML_R,bool) 
									</LEFT_SINGLE_CODE>
									<ANIM_LENGTH>10</ANIM_LENGTH>
									<ANIM_LAG>200</ANIM_LAG>
								</UseTemplate>
							</Component>
						</Component>

					<!-- EDM-700 Right -->

						<Component ID="SW_EDMR_BUTTON_L">
							<Parameters Type="Default">
								<NODE_ID>EDM700_RightEngine_LeftButton_Helper</NODE_ID>
								<ANIM_NAME>EDM700_RightEngine_LeftButton</ANIM_NAME>
								<PART_ID>EDM700_RightEngine_LeftButton</PART_ID>
								<WWISE_EVENT_1>button_edm_press</WWISE_EVENT_1>
								<WWISE_EVENT_2>button_edm_release</WWISE_EVENT_2>
							</Parameters>
							<Parameters Type="Default">
								<TOOLTIP_TITLE>'Step Button'</TOOLTIP_TITLE>
								<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
								<TT_ICON>PRIMARY_DOWN</TT_ICON>
								<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
								<TT_DESCRIPTION>
									(L:C310_EDMR_MODE,enum) 0 == if{
										'Press to enter manual mode'
									} els{
										'Press to step through readouts'
									}
								</TT_DESCRIPTION>
								<TT_VALUE>
									(L:C310_EDMR_MODE,enum) 0 == if{
										'Auto'
									} els{
										(L:C310_EDMR_STEP,enum) 1 == if{
											'Cyl 1' 
										}
										(L:C310_EDMR_STEP,enum) 2 == if{
											'Cyl 2' 
										}
										(L:C310_EDMR_STEP,enum) 3 == if{
											'Cyl 3' 
										}
										(L:C310_EDMR_STEP,enum) 4 == if{
											'Cyl 4' 
										}
										(L:C310_EDMR_STEP,enum) 5 == if{
											'Cyl 5' 
										}
										(L:C310_EDMR_STEP,enum) 6 == if{
											'Cyl 6' 
										}
										(L:C310_EDMR_STEP,enum) 7 == if{
											'Battery' 
										}
										(L:C310_EDMR_STEP,enum) 8 == if{
											'OAT' 
										}
										(L:C310_EDMR_STEP,enum) 9 == if{
											'OIL' 
										}
										(L:C310_EDMR_STEP,enum) 10 == if{
											'DIF' 
										}
										(L:C310_EDMR_STEP,enum) 11 == if{
											'CLD' 
										}
									}							
								</TT_VALUE>>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseInputEvent ID="MV_IE_TOOLTIP">
									<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
								</UseInputEvent>
								<UseTemplate Name="ASOBO_GT_Push_Button_Timed">
									<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
									<ANIM_CODE>(L:C310_SW_EDMR_L,bool) 10 *</ANIM_CODE>
									<LEFT_SINGLE_CODE>
										1 (>L:C310_SW_EDMR_L,bool) 
									</LEFT_SINGLE_CODE>
									<ANIM_LENGTH>10</ANIM_LENGTH>
									<ANIM_LAG>200</ANIM_LAG>
								</UseTemplate>
							</Component>
						</Component>

						<Component ID="SW_EDMR_BUTTON_R">
							<Parameters Type="Default">
								<NODE_ID>EDM700_RightEngine_RightButton_Helper</NODE_ID>
								<ANIM_NAME>EDM700_RightEngine_RightButton</ANIM_NAME>
								<PART_ID>EDM700_RightEngine_RightButton</PART_ID>
								<WWISE_EVENT_1>button_edm_press</WWISE_EVENT_1>
								<WWISE_EVENT_2>button_edm_release</WWISE_EVENT_2>
							</Parameters>
							<Parameters Type="Default">
								<TOOLTIP_TITLE>'LF Button'</TOOLTIP_TITLE>
								<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
								<TT_ICON>PRIMARY_DOWN</TT_ICON>
								<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
								<TT_DESCRIPTION>
									(L:C310_EDML_MODE,enum) 0 == if{
										'Press to toggle temp values between °F and °C'
									} els{
										'Press to return readout to auto mode'
									}
								</TT_DESCRIPTION>
								<TT_VALUE>
									(L:C310_EDML_FORC,enum) 0 == if{
										'°F'
									} els{
										'°C'
									}
								</TT_VALUE>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseInputEvent ID="MV_IE_TOOLTIP">
									<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
								</UseInputEvent>
								<UseTemplate Name="ASOBO_GT_Push_Button_Timed">
									<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
									<ANIM_CODE>(L:C310_SW_EDMR_R,bool) 10 *</ANIM_CODE>
									<LEFT_SINGLE_CODE>
										1 (>L:C310_SW_EDMR_R,bool) 
									</LEFT_SINGLE_CODE>
									<ANIM_LENGTH>10</ANIM_LENGTH>
									<ANIM_LAG>200</ANIM_LAG>
								</UseTemplate>
							</Component>
						</Component>
					
				</Component>

				<Component ID="INSTRUMENTS_LEFT_NonElectric_Nolag">

					<!-- Nav 2 Course Deviation Indicator (CDI) -->

						<UseTemplate Name="ASOBO_INSTRUMENT_CDI_Template">
							<ID>2</ID>
							<ANIM_NAME_FLAG_TO>INSTRUMENT_CDI_Flag_From_2</ANIM_NAME_FLAG_TO>
							<ANIM_NAME_FLAG_FROM>INSTRUMENT_CDI_Flag_To_2</ANIM_NAME_FLAG_FROM>
							<GPS_DRIVES_NAV_SIMVAR>(L:C310_TAB_RADIO, bool) if{ 0 } els{ (L:AS430_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ? }</GPS_DRIVES_NAV_SIMVAR>
							<FLAG_GLIDE_CODE> 
								(L:C310_TAB_RADIO, bool) if{ (A:NAV HAS GLIDE SLOPE:2, Bool) } 
								els{ (L:C310_TAB_530, bool) 
							    if{ (A:GPS HAS GLIDEPATH, bool) (A:NAV HAS GLIDE SLOPE:2, Bool) (L:AS430_CDI_Source_1, Bool) ? } 
								els{ (A:NAV HAS GLIDE SLOPE:2, Bool) } } 
							</FLAG_GLIDE_CODE>
							<FLAG_TO_CODE>
								0 sp0
								(A:AVIONICS MASTER SWITCH,bool) if{   
									(A:NAV TOFROM:2, Enum) 1 == if{ 1 sp0 }
									(L:C310_TAB_RADIO, bool) 1 != if{
										(L:AS530_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ? if{
											0 sp0
											(A:GPS IS ACTIVE FLIGHT PLAN, Bool) if{
												(A:GPS WP TRUE BEARING, Degrees) (A:GPS WP TRUE REQ HDG, Degrees) - abs
												s1 180 &gt; if{ 360 l1 - abs sp1 }
												l1 90 &lt; if{ 1 sp0 }
											}
										}
									}
								}
								l0
							</FLAG_TO_CODE>
							<FLAG_FROM_CODE>
								0 sp0
								(A:AVIONICS MASTER SWITCH,bool) if{   
									(A:NAV TOFROM:2, Enum) 2 == if{ 1 sp0 }
									(L:C310_TAB_RADIO, bool) 1 != if{
										(L:AS530_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ? if{
											0 sp0
											(A:GPS IS ACTIVE FLIGHT PLAN, Bool) if{
												(A:GPS WP TRUE BEARING, Degrees) (A:GPS WP TRUE REQ HDG, Degrees) - abs
												s1 180 &gt; if{ 360 l1 - abs sp1 }
												l1 90 &gt;= if{ 1 sp0 }
											}
										}
									}
								}
								l0
							</FLAG_FROM_CODE>
						</UseTemplate>

						<UseTemplate Name="ASOBO_INSTRUMENT_CDI_Loc_Glide_Needles_Template">
							<ID>2</ID>
							<GPS_DRIVES_NAV_SIMVAR>(L:C310_TAB_RADIO, bool) if{ 0 } els{ (L:AS430_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ? }</GPS_DRIVES_NAV_SIMVAR>
						</UseTemplate>

					<!-- Turn Coordinator -->

						<Component ID="C310_needle_turn_coordinator_anim">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>needle_turn_coordinator</ANIM_NAME>
								<ANIM_CODE>					
									(A:Delta heading rate,rpm) 1 + 0 max 2 min 20 * 
								</ANIM_CODE> 
								<ANIM_LENGTH>40</ANIM_LENGTH>
							</UseTemplate>
						</Component>

						<Component ID="C310_Turn_ball">  
							<UseTemplate Name="ASOBO_GT_Anim_Sim">
								<ANIM_NAME>C310_Turn_coordinator_ball</ANIM_NAME>
								<ANIM_SIMVAR>TURN COORDINATOR BALL</ANIM_SIMVAR>
								<ANIM_SIMVAR_UNITS>position</ANIM_SIMVAR_UNITS>
								<ANIM_SIMVAR_BIAS>50</ANIM_SIMVAR_BIAS>
								<ANIM_SIMVAR_SCALE>50</ANIM_SIMVAR_SCALE>
								<ANIM_LENGTH>100</ANIM_LENGTH>
							</UseTemplate>
						</Component>

					<!-- Clock -->

						<UseTemplate Name="ASOBO_INSTRUMENT_Needle_Current_Time_Clock_Template">
						<FAILURE>(L:C310_CB_CLOCK,bool) !</FAILURE>
						</UseTemplate>
				
					<!-- Altimeter -->

						<UseTemplate Name="ASOBO_INSTRUMENT_Altimeter_Template">
							<ID>1</ID>
							<MIN_VALUE_STRIP>29.0</MIN_VALUE_STRIP>
							<MAX_VALUE_STRIP>32.0</MAX_VALUE_STRIP>
							<MIN_VALUE_KNOB>29.0</MIN_VALUE_KNOB>
							<MAX_VALUE_KNOB>32.0</MAX_VALUE_KNOB>
							<KNOB_ROTATION_SPEED>1.0</KNOB_ROTATION_SPEED>
							<USE_AUTO_CALIBRATED_MIN_MAX>False</USE_AUTO_CALIBRATED_MIN_MAX>
							<HIGHLIGHT_NODE_ID>INSTRUMENT_Knob_Altimeter_1</HIGHLIGHT_NODE_ID>
							<KNOB_HIGHLIGHT_NODE_ID>INSTRUMENT_Knob_Altimeter_1</KNOB_HIGHLIGHT_NODE_ID>
							<ANIM_NAME_STRIP>C310_Baro_1</ANIM_NAME_STRIP>
							<NODE_ID_STRIP>C310_Baro_1</NODE_ID_STRIP>
						</UseTemplate>

						<UseTemplate Name="ASOBO_INSTRUMENT_Altimeter_Template">
							<ID>2</ID>
							<MIN_VALUE_STRIP>29.0</MIN_VALUE_STRIP>
							<MAX_VALUE_STRIP>32.0</MAX_VALUE_STRIP>
							<MIN_VALUE_KNOB>29.0</MIN_VALUE_KNOB>
							<MAX_VALUE_KNOB>32.0</MAX_VALUE_KNOB>
							<KNOB_ROTATION_SPEED>1.0</KNOB_ROTATION_SPEED>
							<USE_AUTO_CALIBRATED_MIN_MAX>False</USE_AUTO_CALIBRATED_MIN_MAX>
							<HIGHLIGHT_NODE_ID>INSTRUMENT_Knob_Altimeter_2</HIGHLIGHT_NODE_ID>
							<KNOB_HIGHLIGHT_NODE_ID>INSTRUMENT_Knob_Altimeter_2</KNOB_HIGHLIGHT_NODE_ID>
							<ANIM_NAME_STRIP>C310_Baro_2</ANIM_NAME_STRIP>
							<NODE_ID_STRIP>C310_Baro_2</NODE_ID_STRIP>
						</UseTemplate>

						<!-- <Component ID="C310_Altimeter_AltitudeFlag_1">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Altimeter_AltitudeFlag_1</ANIM_NAME>
								<ANIM_CODE>					
									(A:INDICATED ALTITUDE,Feet) 9999 &gt; 10 * 
								</ANIM_CODE> 
								<ANIM_LENGTH>10</ANIM_LENGTH>
							</UseTemplate>
						</Component>

						<Component ID="C310_Altimeter_AltitudeFlag_2">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Altimeter_AltitudeFlag_2</ANIM_NAME>
								<ANIM_CODE>					
									(A:INDICATED ALTITUDE,Feet) 9999 &gt; 10 * 
								</ANIM_CODE> 
								<ANIM_LENGTH>10</ANIM_LENGTH>
							</UseTemplate>
						</Component> -->

					<!-- Horizontal Situation Indicator (HSI) -->

						<Component ID="C310_HEADING_KNOB">
							<Component ID="Heading_Bug">
								<Parameters Type="Default">
									<NODE_ID>INSTRUMENT_Needle_Heading_1</NODE_ID>
									<HDG_ID>1</HDG_ID>
								</Parameters>
								<Component ID="#NODE_ID#" Node="#NODE_ID#">
									<UseTemplate Name="ASOBO_GT_Anim_Sim">
										<ANIM_NEVER_FAILS/>
										<ANIM_NAME>#NODE_ID#</ANIM_NAME>
										<ANIM_LENGTH>360</ANIM_LENGTH>
										<ANIM_LAG>200</ANIM_LAG>
										<ANIM_WRAP>TRUE</ANIM_WRAP>
										<ANIM_SIMVAR>AUTOPILOT HEADING LOCK DIR:#HDG_ID#</ANIM_SIMVAR>
										<ANIM_SIMVAR_UNITS>degrees</ANIM_SIMVAR_UNITS>
										<ANIM_WRAP>True</ANIM_WRAP>
									</UseTemplate>
								</Component>
							</Component>
							<Component ID="Heading_Knob">
								<Parameters Type="Default">
									<NODE_ID>INSTRUMENT_Knob_Heading_1</NODE_ID>
									<HDG_ID>1</HDG_ID>
									<WWISE_PREFIX>hdg</WWISE_PREFIX>
									<TT_DESCRIPTION_ID>@TT_Package.INSTRUMENT_KNOB_HEADING_BUG_ACTION</TT_DESCRIPTION_ID>
									<TOOLTIP_TITLE>@TT_Package.INSTRUMENT_KNOB_HEADING_BUG_TITLE</TOOLTIP_TITLE>
									<THRESHOLD_INPUT>0.00005</THRESHOLD_INPUT>
									<THRESHOLD_MOUSE>0.001</THRESHOLD_MOUSE>
								</Parameters>
								<Component ID="#NODE_ID#" Node="#NODE_ID#">
									<UseTemplate Name="ASOBO_INSTRUMENT_Base_Template">
										<ANIM_NEVER_FAILS/>
										<ANIM_NAME>#NODE_ID#</ANIM_NAME>
										<IE_NAME>Heading_Bug#HDG_ID#</IE_NAME>
										<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
										<IS_INFINITE>True</IS_INFINITE>
										<SET_STATE_EXTERNAL>#HDG_ID# p0 dnor 360 / @16k * (&gt;K:2:AP_HEADING_BUG_SET_EX1)</SET_STATE_EXTERNAL>
										<CLAMP_VALUE>dnor</CLAMP_VALUE>
										<GET_STATE_EXTERNAL>(A:AUTOPILOT HEADING LOCK DIR:#HDG_ID#, degrees)</GET_STATE_EXTERNAL>
										<SIMVAR_TO_WATCH_0>AUTOPILOT HEADING LOCK DIR:#HDG_ID#</SIMVAR_TO_WATCH_0>
										<FORMAT_VALUE>'%d°' @sprintf</FORMAT_VALUE>
										<STATE_TO_POS_EXTERNAL>3.6 /</STATE_TO_POS_EXTERNAL>
									</UseTemplate>
									<UseTemplate Name="ASOBO_GT_Visibility_Code">
										<VISIBILITY_CODE>(L:C310_TAB_G5) !</VISIBILITY_CODE>
									</UseTemplate>
								</Component>
							</Component>
						</Condition>

						<Component ID="C310_HEADING_FLAG">
							<Parameters Type="Default">
								<NODE_ID>INSTRUMENT_Flag_Heading_1</NODE_ID>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseTemplate Name="ASOBO_GT_Anim">
									<ANIM_NAME>#NODE_ID#</ANIM_NAME>
									<!-- electrical -->
										<!-- <ANIM_CODE>(A:ELECTRICAL MAIN BUS VOLTAGE, Volts) #MIN_VOLTAGE# &gt; 100 *</ANIM_CODE> -->
										<!-- <FAILURE_CODE>0</FAILURE_CODE> -->
									<!-- suction -->
										<!-- <ANIM_CODE>(A:SUCTION PRESSURE, inhg) 2.3 &gt; 100 *</ANIM_CODE> -->
										<!-- <FAILURE>1</FAILURE> -->
									<!-- via lvar -->
										<ANIM_CODE>(L:C310_FLAG_HDG,bool) 100 *</ANIM_CODE> 
									<ANIM_LAG>600</ANIM_LAG>
								</UseTemplate>
							</Component>
						</Component>

						<Component ID="C310_COMPASS_CARD">
							<Parameters Type="Default">
								<NODE_ID>INSTRUMENT_Needle_Heading_Cylinder_1</NODE_ID>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseTemplate Name="ASOBO_GT_Anim_Sim">
									<ANIM_NEVER_FAILS/>
									<ANIM_NAME>#NODE_ID#</ANIM_NAME>
									<ANIM_LENGTH>360</ANIM_LENGTH>
									<ANIM_WRAP>TRUE</ANIM_WRAP>
									<ANIM_SIMVAR>PLANE HEADING DEGREES GYRO</ANIM_SIMVAR>
									<ANIM_SIMVAR_UNITS>degrees</ANIM_SIMVAR_UNITS>
									<ANIM_SIMVAR_BIAS>0</ANIM_SIMVAR_BIAS>
									<INVERT_ANIM>True</INVERT_ANIM>
								</UseTemplate>
							</Component>
						</Component>

						<Component ID="C310_COURSE_KNOB_1">
							<Parameters Type="Default">
								<NODE_ID>INSTRUMENT_Knob_Course_1</NODE_ID>
							</Parameters>
							<Parameters Type="Default">
								<TOOLTIP_TITLE>'COURSE BUG'</TOOLTIP_TITLE>
								<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
								<TT_ICON>ROTATE</TT_ICON>
								<TT_INTERACTION_FLAGS>PRIMARY_DOWN+X_AXIS</TT_INTERACTION_FLAGS>
								<TT_INTERACTION_LOCKABLE_FLAGS>X_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
								<TT_DESCRIPTION>'Adjust Selected Course (NAV 1)'</TT_DESCRIPTION>
								<TT_VALUE>(A:NAV OBS:1, Degrees) '%.0f°' @sprintf</TT_VALUE>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseInputEvent ID="MV_IE_TOOLTIP">
									<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
								</UseInputEvent>
								<UseTemplate Name="ASOBO_GT_Knob_Infinite">
									<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
									<ANIM_NAME>#NODE_ID#</ANIM_NAME>
									<CLOCKWISE_CODE_DEFAULT_IM>
										1 (>K:VOR1_OBI_INC)
									</CLOCKWISE_CODE_DEFAULT_IM>
									<ANTICLOCKWISE_CODE_DEFAULT_IM>
										1 (>K:VOR1_OBI_DEC)
									</ANTICLOCKWISE_CODE_DEFAULT_IM>
									<CLOCKWISE_CODE_DRAG_IM>
										1 (>K:VOR1_OBI_INC)
									</CLOCKWISE_CODE_DRAG_IM>
									<ANTICLOCKWISE_CODE_DRAG_IM>
										1 (>K:VOR1_OBI_DEC)
									</ANTICLOCKWISE_CODE_DRAG_IM>
								</UseTemplate>
								<UseTemplate Name="ASOBO_GT_Visibility_Code">
									<VISIBILITY_CODE>(L:C310_SW_NAV_SOURCE,bool) (L:C310_TAB_G5) ! and</VISIBILITY_CODE>
								</UseTemplate>					
							</Component>
						</Component>

						<Component ID="C310_COURSE_KNOB_2">
							<Parameters Type="Default">
								<NODE_ID>INSTRUMENT_Knob_Course_2</NODE_ID>
							</Parameters>
							<Parameters Type="Default">
								<TOOLTIP_TITLE>'COURSE BUG'</TOOLTIP_TITLE>
								<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
								<TT_ICON>ROTATE</TT_ICON>
								<TT_INTERACTION_FLAGS>PRIMARY_DOWN+X_AXIS</TT_INTERACTION_FLAGS>
								<TT_INTERACTION_LOCKABLE_FLAGS>X_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
								<TT_DESCRIPTION>'Adjust Selected Course (NAV 2)'</TT_DESCRIPTION>
								<TT_VALUE>(A:NAV OBS:2, Degrees) '%.0f°' @sprintf</TT_VALUE>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseInputEvent ID="MV_IE_TOOLTIP">
									<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
								</UseInputEvent>
								<UseTemplate Name="ASOBO_GT_Knob_Infinite">
									<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
									<ANIM_NAME>#NODE_ID#</ANIM_NAME>
									<CLOCKWISE_CODE_DEFAULT_IM>
										1 (>K:VOR2_OBI_INC)
									</CLOCKWISE_CODE_DEFAULT_IM>
									<ANTICLOCKWISE_CODE_DEFAULT_IM>
										1 (>K:VOR2_OBI_DEC)
									</ANTICLOCKWISE_CODE_DEFAULT_IM>
									<CLOCKWISE_CODE_DRAG_IM>
										1 (>K:VOR2_OBI_INC)
									</CLOCKWISE_CODE_DRAG_IM>
									<ANTICLOCKWISE_CODE_DRAG_IM>
										1 (>K:VOR2_OBI_DEC)
									</ANTICLOCKWISE_CODE_DRAG_IM>
								</UseTemplate>
								<UseTemplate Name="ASOBO_GT_Visibility_Code">
									<VISIBILITY_CODE>(L:C310_SW_NAV_SOURCE,bool) ! (L:C310_TAB_G5) ! and</VISIBILITY_CODE>
								</UseTemplate>
							</Component>	
						</Component>

						<Component ID="C310_COURSE_POINTER">
							<Parameters Type="Default">
								<NODE_ID>INSTRUMENT_Needle_CourseSelectBase_1</NODE_ID>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseTemplate Name="ASOBO_GT_Anim_Code">
									<ANIM_NAME>#NODE_ID#</ANIM_NAME>
									<ANIM_LENGTH>360</ANIM_LENGTH>
									<ANIM_CODE>					
										(A:NAV1 OBS,degrees) dnor 
									</ANIM_CODE> 
								</UseTemplate>
							</Component>
						</Component>

						<Component ID="C310_NAV_FLAG">
							<Parameters Type="Default">
								<NODE_ID>INSTRUMENT_Flag_NAV_1</NODE_ID>
								<GPS_DRIVES_NAV_SIMVAR>(L:AS530_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ?</GPS_DRIVES_NAV_SIMVAR>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseTemplate Name="ASOBO_GT_Anim">
									<ANIM_NAME>#NODE_ID#</ANIM_NAME>
									<ANIM_CODE>
										(L:TDSGTNXI_INSTALLED, bool) 1 == if{
											(L:TDSGTNXI_InstrumentPanelSelfTest, bool) 1 == if{ 
												(A:GPS DRIVES NAV1, Bool) ! if{
													(>K:TOGGLE_GPS_DRIVES_NAV1)
												}
											}
										}
										(L:C310_TAB_RADIO, bool) if{
											(A:NAV HAS NAV:1, Bool) if{
												0 
											} els{
												100
											}
										} els{
											#GPS_DRIVES_NAV_SIMVAR# if{
												(A:GPS IS ACTIVE FLIGHT PLAN, Bool) if{
													0 
												} els{
													100
												}
											} els{
												(A:NAV HAS NAV:1, Bool) if{
													0 
												} els{
													100
												}
											}
										}
									</ANIM_CODE> 
									<ANIM_LAG>600</ANIM_LAG>
								</UseTemplate>
							</Component>
						</Component>

						<Component ID="C310_CDI_NEEDLE">
							<Parameters Type="Default">
								<NODE_ID>INSTRUMENT_Needle_CourseDeviationBar_1</NODE_ID>
								<GPS_DRIVES_NAV_SIMVAR>(L:AS530_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ?</GPS_DRIVES_NAV_SIMVAR>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseTemplate Name="ASOBO_GT_Anim_Code">
									<ANIM_NAME>#NODE_ID#</ANIM_NAME>
									<ANIM_CODE>
										(A:AVIONICS MASTER SWITCH,bool) if{   
											(L:C310_TAB_RADIO, Bool) if{
												(A:NAV HAS NAV:1,bool)  if{ 
													0 (A:NAV CDI:1, Number) - 127 +
												} els{ 127 }
											}
											els{
												#GPS_DRIVES_NAV_SIMVAR# if{
													(L:TDSGTNXI_InstrumentPanelSelfTest, bool) 1 == if{
														190
													} els{
														(A:GPS IS ACTIVE FLIGHT PLAN, Bool) if{
															0 (A:GPS CDI NEEDLE, Number) - 127 +
														} els{ 127 }
													}
												} els{
													(A:NAV HAS NAV:1,bool) if{ 
														0 (A:NAV CDI:1, Number) - 127 +
													} els{ 127 }
												}
											}
										} els{
											127
										}
									</ANIM_CODE> 
									<ANIM_LENGTH>254</ANIM_LENGTH>
								</UseTemplate>
							</Component>
						</Component>

						<Component ID="C310_NAV_GS_RETRACT">
							<Parameters Type="Default">
								<NODE_ID>GSI_Helper</NODE_ID>
								<GPS_DRIVES_NAV_SIMVAR>(L:AS530_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ?</GPS_DRIVES_NAV_SIMVAR>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseTemplate Name="ASOBO_GT_Anim">
									<ANIM_NAME>#NODE_ID#</ANIM_NAME>
									<ANIM_CODE>
									(A:AVIONICS MASTER SWITCH,bool) if{   
										(L:C310_TAB_RADIO, Bool) if{
											(A:NAV HAS GLIDE SLOPE:1, Bool) if{
													0
												} els{
													100
												}
										} els{
											#GPS_DRIVES_NAV_SIMVAR# if{
												(A:GPS HAS GLIDEPATH, Bool) if{
														0
													} els{
														100
													}
											} els{
												(A:NAV HAS GLIDE SLOPE:1, Bool) if{
														0
												} els{
														100
												}
											}
										}
									} els{
										100
									}
									</ANIM_CODE>
									<ANIM_LAG>600</ANIM_LAG>
								</UseTemplate>
							</Component>
						</Component>

						<Component ID="C310_GS_INDICATOR">
							<Parameters Type="Default">
								<NODE_ID>INSTRUMENT_Needle_GlideSlopePointer_1</NODE_ID>
								<GPS_DRIVES_NAV_SIMVAR>(L:AS530_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ?</GPS_DRIVES_NAV_SIMVAR>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseTemplate Name="ASOBO_GT_Anim_Code">
									<ANIM_NAME>#NODE_ID#</ANIM_NAME>
									<ANIM_CODE>
									0 sp0
									(L:C310_TAB_RADIO, Bool) if{
												(A:NAV HAS GLIDE SLOPE:1,bool) if{
													(A:NAV GSI:1, Number) 119 + sp0
												} 
									} els{
                    					#GPS_DRIVES_NAV_SIMVAR# if{
											(L:TDSGTNXI_INSTALLED, bool) 1 == if{
												(L:TDSGTNXI_InstrumentPanelSelfTest, bool) 1 == if{ 
													63.5 sp0
												} els{
													(L:TDSGTNXI_GlidePathValueActive, bool) 1 == if{ 
														(L:TDSGTNXI_GlidePathValueAngle, number) 127 * 127 + sp0
													} 	
												}
											} els{
													(A:GPS HAS GLIDEPATH,bool) if{
															(A:GPS GSI NEEDLE,number) 119 + sp0
											}
										} els{
											(A:NAV HAS GLIDE SLOPE:1,bool) if{
												(A:NAV GSI:1, Number) 119 + sp0
											} 
        								}
									}
									l0
									</ANIM_CODE> 
									<ANIM_LENGTH>254</ANIM_LENGTH>
								</UseTemplate>
							</Component>
						</Component>
						<Component ID="C310_NAV_TO_FLAG">
							<Parameters Type="Default">
								<NODE_ID>INSTRUMENT_Flag_To_1</NODE_ID>
								<GPS_DRIVES_NAV_SIMVAR>(L:AS530_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ?</GPS_DRIVES_NAV_SIMVAR>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseTemplate Name="ASOBO_GT_Visibility_Code">
								<VISIBILITY_CODE>
								0 sp0
								(A:AVIONICS MASTER SWITCH,bool) if{   
									(A:NAV TOFROM:1, Enum) 1 == if{ 1 sp0 }
									(L:C310_TAB_RADIO, bool) 1 !=  if{
										(L:AS530_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ? if{
											0 sp0
											(A:GPS IS ACTIVE FLIGHT PLAN, Bool) if{
												(A:GPS WP TRUE BEARING, Degrees) (A:GPS WP TRUE REQ HDG, Degrees) - abs
												s1 180 &gt; if{ 360 l1 - abs sp1 }
												l1 90 &lt; if{ 1 sp0 }
											}
										}
									}
								}
								l0 100 *
								</VISIBILITY_CODE>
								</UseTemplate>
							</Component>
						</Component>

						<Component ID="C310_NAV_FROM_FLAG">
							<Parameters Type="Default">
								<NODE_ID>INSTRUMENT_Flag_From_1</NODE_ID>
								<GPS_DRIVES_NAV_SIMVAR>(L:AS530_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ?</GPS_DRIVES_NAV_SIMVAR>
							</Parameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseTemplate Name="ASOBO_GT_Visibility_Code">
								<VISIBILITY_CODE>
								0 sp0
								(A:AVIONICS MASTER SWITCH,bool) if{   
									(A:NAV TOFROM:1, Enum) 2 == if{ 1 sp0 }
									(L:C310_TAB_RADIO, bool) 1 != if{
										(L:AS530_CDI_Source_1, Bool) (A:GPS DRIVES NAV1, Bool) (L:C310_TAB_530, bool) ? if{
											0 sp0
											(A:GPS IS ACTIVE FLIGHT PLAN, Bool) if{
												(A:GPS WP TRUE BEARING, Degrees) (A:GPS WP TRUE REQ HDG, Degrees) - abs
												s1 180 &gt; if{ 360 l1 - abs sp1 }
												l1 90 &gt;= if{ 1 sp0 }
											}
										}
									}
								}
								l0 100 *
								</VISIBILITY_CODE>
								</UseTemplate>
							</Component>
						</Component>


					
					<!-- Nav Selector Switch (on panel) -->

					<Component ID="SW_NAV_SELECTOR">
						<Parameters Type="Default">
							<NODE_ID>C310_Nav_Selector</NODE_ID>
							<ANIM_NAME>C310_Nav_Selector</ANIM_NAME>
							<WWISE_EVENT_1>switch_toggle_metal_small_2pos_up</WWISE_EVENT_1>
							<WWISE_EVENT_2>switch_toggle_metal_small_2pos_down</WWISE_EVENT_2>
						</Parameters>
						<Parameters Type="Default">
							<TOOLTIP_TITLE>'HSI NAV Selector Switch'</TOOLTIP_TITLE>
							<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
							<TT_ICON>MOVE_Y</TT_ICON>
							<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
							<TT_DESCRIPTION>'HSI NAV Selector Switch'</TT_DESCRIPTION>
							<TT_VALUE>(L:C310_SW_NAV_SELECTOR,bool) if{ 'NAV1' } els{ 'NAV2' }</TT_VALUE>
						</Parameters>
						<Component ID="#NODE_ID#" Node="#NODE_ID#">
							<Update Once="True">
								1 (>L:C310_SW_NAV_SELECTOR,bool)
								1 (>L:C310_SW_NAV_SOURCE,bool)
								19 (>L:C310_Attitude_calibration, number)
							</Update>
							<UseInputEvent ID="MV_IE_TOOLTIP">
								<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
							</UseInputEvent>
							<UseTemplate Name="ASOBO_GT_Switch_Code">
								<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
								<ANIM_CODE>(L:C310_SW_NAV_SELECTOR,bool) 100 *</ANIM_CODE>
								<LEFT_SINGLE_CODE>
									(L:C310_SW_NAV_SELECTOR,bool) ! (>L:C310_SW_NAV_SELECTOR,bool)
								</LEFT_SINGLE_CODE>
							</UseTemplate>
						</Component>
					</Component>

				</Component>
			</Component>
		</Component>

	<!-- INSTRUMENTS CENTER PANEL ################### -->

		<Component ID="INSTRUMENTS_CENTER_PANEL">
			<Component ID="INSTRUMENTS_CENTER_With_Lag">
				<DefaultTemplateParameters>
					<ANIM_LAG>100</ANIM_LAG>
				</DefaultTemplateParameters>
				<Component ID="INSTRUMENTS_CENTER_Electrical_Lag">
					<DefaultTemplateParameters>
					<FAILURE>(A:CIRCUIT GENERAL PANEL ON, Bool)</FAILURE>
					</DefaultTemplateParameters>
				</Component>
				<Component ID="INSTRUMENTS_CENTER_NonElectric_lag">										
				</Component>
			</Component>
			<Component ID="INSTRUMENTS_CENTER_Without_Lag">
				<Component ID="INSTRUMENTS_CENTER_Electrical_Nolag">
					<DefaultTemplateParameters>
					<FAILURE>(A:CIRCUIT GENERAL PANEL ON, Bool)</FAILURE>
					</DefaultTemplateParameters>
				</Component>
				<Component ID="INSTRUMENTS_CENTER_NonElectric_NoLag">				

					<!-- Magnetic Compass -->

						<Component ID="C310_Whiskey_Compass">  
							<UseTemplate Name="ASOBO_GT_Anim_Sim">
								<ANIM_NAME>C310_Mag_Compass</ANIM_NAME>
								<ANIM_SIMVAR>WISKEY COMPASS INDICATION DEGREES</ANIM_SIMVAR>
								<ANIM_SIMVAR_UNITS>degrees</ANIM_SIMVAR_UNITS>
								<ANIM_SIMVAR_BIAS>0</ANIM_SIMVAR_BIAS>
								<ANIM_LENGTH>360</ANIM_LENGTH>
							</UseTemplate>
						</Component>

					<!-- Ammeter -->

						<Component ID="C310_AMP_knob">
							<Parameters Type="Default">
								<NODE_ID>C310_AMP_knob_knob</NODE_ID>
								<PART_ID>C310_AMP_knob_knob</PART_ID>
								<ANIM_NAME>C310_AMP_knob_knob</ANIM_NAME>
								<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
								<KNOB_POSITION_VAR>C310_ELEC_AMP_knob</KNOB_POSITION_VAR>
								<KNOB_SPEED>1</KNOB_SPEED>
							</Parameters>
							<Parameters Type="Default">
								<TOOLTIP_TITLE>'Ammeter Selector'</TOOLTIP_TITLE>
								<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
								<TT_ICON>ROTATE</TT_ICON>
								<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
								<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
								<TT_DESCRIPTION>'Select Ammeter Display'</TT_DESCRIPTION>
								<TT_VALUE>
									(L:C310_ELEC_AMP_knob,enum) 0 == if{
										'L ALT AMPS' 
									}
									(L:C310_ELEC_AMP_knob,enum) 1 == if{
										'R ALT AMPS' 
									}
									(L:C310_ELEC_AMP_knob,enum) 2 == if{
										'BATT AMPS' 
									}
									(L:C310_ELEC_AMP_knob,enum) 3 == if{
										'BATT VOLTS' 
									}
								</TT_VALUE>
							</Parameters>			
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseInputEvent ID="MV_IE_TOOLTIP">
									<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
								</UseInputEvent>
								<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
									<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
									<ANIM_LENGTH>30</ANIM_LENGTH>
									<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
									<CLOCKWISE_CODE>
										(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# + 3 min (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
									</CLOCKWISE_CODE>
									<ANTICLOCKWISE_CODE>
										(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# - 0 max (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
									</ANTICLOCKWISE_CODE>
								</UseTemplate>	
								<Condition Check="WWISE_EVENT">
									<UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same"/>			
								</Condition>
							</Component>
							<CameraTitle>Upper_Control_Pedestal</CameraTitle>
						</Component>

						<Component ID="C310_AMP_Needle_anim">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>C310_AMP_Needle</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_ELEC_AMMETER_NEEDLE,number)
								</ANIM_CODE> 
								<ANIM_LENGTH>150</ANIM_LENGTH>
								<ANIM_LAG>80</ANIM_LAG>
							</UseTemplate>
						</Component>

				</Component>
			</Component>
		</Component>

	<!-- INSTRUMENTS RIGHT PANEL #################### -->

		<Component ID="INSTRUMENTS_RIGHT_PANEL">
			<Component ID="INSTRUMENTS_RIGHT_With_Lag">
				<DefaultTemplateParameters>
					<ANIM_LAG>100</ANIM_LAG>
				</DefaultTemplateParameters>
				<Component ID="INSTRUMENTS_RIGHT_Electrical_Lag">
					<DefaultTemplateParameters>
					<FAILURE>(A:CIRCUIT GENERAL PANEL ON, Bool)</FAILURE>
					</DefaultTemplateParameters>
		
						<!-- Exhaust Gas Temperature -->

						<Component ID="IN_EGT1" Node="C310_L_EGT">
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>C310_L_EGT</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_ENG_EGT1,number) 5 /
								</ANIM_CODE> 
								<ANIM_LAG>50</ANIM_LAG>
								<ANIM_LENGTH>100</ANIM_LENGTH>
							</UseTemplate>
						</Component>
						<Component ID="IN_EGT2" Node="C310_R_EGT">
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>C310_R_EGT</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_ENG_EGT2,number) 5 /
								</ANIM_CODE> 
								<ANIM_LAG>50</ANIM_LAG>
								<ANIM_LENGTH>100</ANIM_LENGTH>
							</UseTemplate>
						</Component>

				</Component>
				<Component ID="INSTRUMENTS_RIGHT_NonElectric_Lag">				
				
					<!-- Manifold Pressure -->

						<Component ID="IN_MP1">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Needle_ManifoldPressure_1</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_ENG_MANIFOLD_PRESSURE_1, number)
								</ANIM_CODE> 
								<MIN_VALUE>0</MIN_VALUE>
								<MAX_VALUE>44</MAX_VALUE>
								<ANIM_LAG>30</ANIM_LAG>
								<ANIM_LENGTH>44</ANIM_LENGTH>
							</UseTemplate>
						</Component>					
						<Component ID="IN_MP2">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Needle_ManifoldPressure_2</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_ENG_MANIFOLD_PRESSURE_2, number)
								</ANIM_CODE> 
								<MIN_VALUE>0</MIN_VALUE>
								<MAX_VALUE>44</MAX_VALUE>
								<ANIM_LAG>30</ANIM_LAG>
								<ANIM_LENGTH>44</ANIM_LENGTH>
							</UseTemplate>
						</Component>
		
						<!-- Cylinder Head Temperature -->

						<Component ID="IN_CHT1">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>C310_needle_cyl_temp_l_node</ANIM_NAME>
								<ANIM_CODE>(L:C310_ENG_CHT1,number) 10 /</ANIM_CODE> 
								<ANIM_LENGTH>50</ANIM_LENGTH>
							</UseTemplate>
						</Component>
						<Component ID="IN_CHT2">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>C310_needle_cyl_temp_r_node</ANIM_NAME>
								<ANIM_CODE>(L:C310_ENG_CHT2,number) 10 /</ANIM_CODE> 
								<ANIM_LENGTH>50</ANIM_LENGTH>
							</UseTemplate>
						</Component>

						<!-- Fuel Flow -->

						<Component ID="IN_FUELFLOW1">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Needle_FuelFlow_1</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_Fuel_Flow_Left,number)
								</ANIM_CODE> 
								<ANIM_LAG>20</ANIM_LAG>
								<ANIM_LENGTH>160</ANIM_LENGTH>
							</UseTemplate>
						</Component>

						<Component ID="IN_FUELFLOW2">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Needle_FuelFlow_2</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_Fuel_Flow_Right,number)
								</ANIM_CODE> 
								<ANIM_LAG>20</ANIM_LAG>
								<ANIM_LENGTH>160</ANIM_LENGTH>
							</UseTemplate>
						</Component>

						<!-- Fuel Quantity -->
						
						<Component ID="IN_FUELQUAN1_Scale">
							<DefaultTemplateParameters>
								<NODE_ID>IN_FUELQUAN1</NODE_ID>
								<ANIM_NAME>IN_FUELQUAN1</ANIM_NAME>
							</DefaultTemplateParameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseTemplate Name = "ASOBO_GT_Anim_Code">
									<ANIM_CODE>
										(L:C310_FUEL_DISP_L,number)
									</ANIM_CODE>
									<ANIM_LENGTH>50</ANIM_LENGTH>
								</UseTemplate>
							</Component>
						</Component>

						<Component ID="IN_FUELQUAN2_Scale">
							<DefaultTemplateParameters>
								<NODE_ID>IN_FUELQUAN2</NODE_ID>
								<ANIM_NAME>IN_FUELQUAN2</ANIM_NAME>
							</DefaultTemplateParameters>
							<Component ID="#NODE_ID#" Node="#NODE_ID#">
								<UseTemplate Name = "ASOBO_GT_Anim_Code">
									<ANIM_CODE>    
										(L:C310_FUEL_DISP_R,number)
									</ANIM_CODE>
									<ANIM_LENGTH>50</ANIM_LENGTH>
								</UseTemplate>
							</Component>
						</Component>
						
						<!-- Oil Pressure -->

						<Component ID="IN_OILPRESS1">  
							<NODE_NAME>INSTRUMENT_Needle_Oil_Pressure</NODE_NAME>
							<PART_ID>INSTRUMENT_Needle_Oil_Pressure</PART_ID>
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Needle_Oil_Pressure</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_ENG_OIL_PRESSURE_1, number)
								</ANIM_CODE> 
								<MIN_VALUE>0</MIN_VALUE>
								<MAX_VALUE>120</MAX_VALUE>
								<ANIM_LAG>30</ANIM_LAG>
								<ANIM_LENGTH>120</ANIM_LENGTH>
							</UseTemplate>
						</Component>
						<Component ID="IN_OILTEMP2">  
							<NODE_NAME>INSTRUMENT_Needle_Oil_Pressure_2</NODE_NAME>
							<PART_ID>INSTRUMENT_Needle_Oil_Pressure_2</PART_ID>
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Needle_Oil_Pressure_2</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_ENG_OIL_PRESSURE_2, number)
								</ANIM_CODE> 
								<MIN_VALUE>0</MIN_VALUE>
								<MAX_VALUE>120</MAX_VALUE>
								<ANIM_LAG>30</ANIM_LAG>
								<ANIM_LENGTH>120</ANIM_LENGTH>
							</UseTemplate>
						</Component>

					<!-- Suction -->

						<Component ID="IN_SUCTION">  
							<NODE_NAME>C310_Vacuum</NODE_NAME>
							<PART_ID>C310_Vacuum</PART_ID>
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>C310_Vacuum</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_SUCTION, number)
								</ANIM_CODE> 
								<MIN_VALUE>0</MIN_VALUE>
								<MAX_VALUE>6</MAX_VALUE>
								<ANIM_LAG>30</ANIM_LAG>
								<ANIM_LENGTH>6</ANIM_LENGTH>
							</UseTemplate>
						</Component>

				</Component>
			</Component>
			<Component ID="INSTRUMENTS_RIGHT_Without_Lag">
				<Component ID="INSTRUMENTS_RIGHT_Electrical_Nolag">
					<DefaultTemplateParameters>
					<FAILURE>(A:CIRCUIT GENERAL PANEL ON, Bool)</FAILURE>
					</DefaultTemplateParameters>
					
					<!-- RPM -->

						<Component ID="IN_RPM1">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Needle_Engine_RPM_1</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_ENG_RPM_1, number) 100 /
								</ANIM_CODE> 
								<MIN_VALUE>0</MIN_VALUE>
								<MAX_VALUE>3500</MAX_VALUE>
								<ANIM_LAG>100</ANIM_LAG>
								<ANIM_LENGTH>35</ANIM_LENGTH>
							</UseTemplate>
						</Component>					
						<Component ID="IN_RPM2">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Needle_Engine_RPM_2</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_ENG_RPM_2, number) 100 /
								</ANIM_CODE> 
								<MIN_VALUE>0</MIN_VALUE>
								<MAX_VALUE>3500</MAX_VALUE>
								<ANIM_LAG>100</ANIM_LAG>
								<ANIM_LENGTH>35</ANIM_LENGTH>
							</UseTemplate>
						</Component>

					<!-- Oil Temperature -->

						<Component ID="IN_OILTEMP1">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Needle_Oil_Temperature</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_ENG_OIL_TEMPERATURE_1, number)
								</ANIM_CODE> 
								<MIN_VALUE>0</MIN_VALUE>
								<MAX_VALUE>100</MAX_VALUE>
								<ANIM_LAG>30</ANIM_LAG>
								<ANIM_LENGTH>100</ANIM_LENGTH>
							</UseTemplate>
						</Component>
						<Component ID="IN_OILTEMP2">  
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>INSTRUMENT_Needle_Oil_Temperature_2</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_ENG_OIL_TEMPERATURE_2, number)
								</ANIM_CODE> 
								<MIN_VALUE>0</MIN_VALUE>
								<MAX_VALUE>100</MAX_VALUE>
								<ANIM_LAG>30</ANIM_LAG>
								<ANIM_LENGTH>100</ANIM_LENGTH>
							</UseTemplate>
						</Component>

					<!-- OAT -->

						<Component ID="IN_OAT" Node="C310_R_EGT">
							<UseTemplate Name="ASOBO_GT_Anim_Code">
								<ANIM_NAME>C310_OAT</ANIM_NAME>
								<ANIM_CODE>
									(L:C310_OAT,number) 2 * 83 +
								</ANIM_CODE> 
								<ANIM_LAG>30</ANIM_LAG>
								<ANIM_LENGTH>170</ANIM_LENGTH>
							</UseTemplate>
						</Component>

				</Component>
				<Component ID="INSTRUMENTS_RIGHT_NonElectric_Nolag">
				</Component>
			</Component>
		</Component>




	<!-- WARNING LIGHTS ############################# -->

		<Component ID="Fuel_Warn_Lamps">
			<Component ID="WL_FUEL_LOW_1">
				<Parameters Type="Default">
					<NODE_ID>WARNLAMP_Fuel_Low_L_Helper</NODE_ID>
					<PART_ID>WARNLAMP_Fuel_Low_L_Helper</PART_ID>
					<ANIM_NAME>WARNLAMP_Fuel_Low_L</ANIM_NAME>
					<INDICATOR_NODE_ID>WARNLAMP_Fuel_Low_L_ON</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						1 (&gt;L:C310_Fuel_Low_L_Test)
					</LEFT_SINGLE_CODE>
					<LEFT_LEAVE_CODE>
						0 (&gt;L:C310_Fuel_Low_L_Test)
					</LEFT_LEAVE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt; 
						(L:C310_Fuel_Low_L_BBO,bool) 0 == and if{
							(L:C310_Fuel_Low_L_Test)
							(L:C310_WL_FUEL_LOW_L,bool)
							or
						}
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Left Tank Fuel Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Held">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
						<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
						<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
						<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>

			<Component ID="WL_FUEL_LOW_2">
				<Parameters Type="Default">
					<NODE_ID>WARNLAMP_Fuel_Low_R_Helper</NODE_ID>
					<PART_ID>WARNLAMP_Fuel_Low_R_Helper</PART_ID>
					<ANIM_NAME>WARNLAMP_Fuel_Low_R</ANIM_NAME>
					<INDICATOR_NODE_ID>WARNLAMP_Fuel_Low_R_ON</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						1 (&gt;L:C310_Fuel_Low_R_Test)
					</LEFT_SINGLE_CODE>
					<LEFT_LEAVE_CODE>
						0 (&gt;L:C310_Fuel_Low_R_Test)
					</LEFT_LEAVE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt; 
						(L:C310_Fuel_Low_R_BBO,bool) 0 == and if{
							(L:C310_Fuel_Low_R_Test)
							(L:C310_WL_FUEL_LOW_R,bool)
							or
						}
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Right Tank Fuel Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Held">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
						<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>		
		</Component>		

		<Component ID="Alternator_Warn_Lamps">
			<Component ID="WL_ALT1">
				<Parameters Type="Default">
					<NODE_ID>WARNLAMP_Alt_Fail_L_Helper</NODE_ID>
					<PART_ID>WARNLAMP_Alt_Fail_L_Helper</PART_ID>
					<ANIM_NAME>WARNLAMP_Alt_Fail_L</ANIM_NAME>
					<INDICATOR_NODE_ID>WARNLAMP_Alt_Fail_L_ON</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						1 (&gt;L:C310_Alt_Fail_L_Test)
					</LEFT_SINGLE_CODE>
					<LEFT_LEAVE_CODE>
						0 (&gt;L:C310_Alt_Fail_L_Test)
					</LEFT_LEAVE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt; 
							(L:C310_Alt_Fail_L_BBO,bool) 0 == and if{
							(L:C310_Alt_Fail_L_Test)
							(L:C310_WL_ALT_FAIL_L,bool)
							or
						}
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Right Alternator Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Held">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
						<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
						<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
						<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>

			<Component ID="WL_ALT2">
				<Parameters Type="Default">
					<NODE_ID>WARNLAMP_Alt_Fail_R_Helper</NODE_ID>
					<PART_ID>WARNLAMP_Alt_Fail_R_Helper</PART_ID>
					<ANIM_NAME>WARNLAMP_Alt_Fail_R</ANIM_NAME>
					<INDICATOR_NODE_ID>WARNLAMP_Alt_Fail_R_ON</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						1 (&gt;L:C310_Alt_Fail_R_Test)
					</LEFT_SINGLE_CODE>
					<LEFT_LEAVE_CODE>
						0 (&gt;L:C310_Alt_Fail_R_Test)
					</LEFT_LEAVE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt; 
						(L:C310_Alt_Fail_R_BBO,bool) 0 == and if{
							(L:C310_Alt_Fail_R_Test)
							(L:C310_WL_ALT_FAIL_R,bool)
							or
						}
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Left Alternator Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Held">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
						<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>		
		</Component>		

		<Component ID="Fuel_Aux_Lamps">
			<Component ID="WL_FUEL_SEL_1">
				<Parameters Type="Default">
					<NODE_ID>WARNLAMP_Fuel_Aux_L_Helper</NODE_ID>
					<ANIM_NAME>WARNLAMP_Fuel_Aux_L</ANIM_NAME>
					<INDICATOR_NODE_ID>WARNLAMP_Fuel_Aux_L_ON</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						1 (&gt;L:C310_Fuel_Aux_L_Test)
					</LEFT_SINGLE_CODE>
					<LEFT_LEAVE_CODE>
						0 (&gt;L:C310_Fuel_Aux_L_Test)
					</LEFT_LEAVE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt; 
						(L:C310_Fuel_Aux_L_BBO,bool) 0 == and if{
							(L:C310_Fuel_Aux_L_Test)
							(L:C310_WL_FUEL_AUX_LEFT,bool)
							or
						}
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Left Aux Fuel Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Held">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
						<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
						<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
						<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>

			<Component ID="WL_FUEL_SEL_2">
				<Parameters Type="Default">
					<NODE_ID>WARNLAMP_Fuel_Aux_R_Helper</NODE_ID>
					<ANIM_NAME>WARNLAMP_Fuel_Aux_R</ANIM_NAME>
					<INDICATOR_NODE_ID>WARNLAMP_Fuel_Aux_R_ON</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						1 (&gt;L:C310_Fuel_Aux_R_Test)
					</LEFT_SINGLE_CODE>
					<LEFT_LEAVE_CODE>
						0 (&gt;L:C310_Fuel_Aux_R_Test)
					</LEFT_LEAVE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt; 
						(L:C310_Fuel_Aux_R_BBO,bool) 0 == and if{						
							(L:C310_Fuel_Aux_R_Test)
							(L:C310_WL_FUEL_AUX_RIGHT,bool)
							or
						}
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Right Aux Fuel Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Held">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
						<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>		
		</Component>		

		<Component ID="Gear_Lamps">
			<Component ID="WL_GEAR_UNSAFE">
				<Parameters Type="Default">
					<NODE_ID>WARNLAMP_Gear_Unsafe_Helper</NODE_ID>
					<PART_ID>WARNLAMP_Gear_Unsafe_Helper</PART_ID>
					<ANIM_NAME>WARNLAMP_Gear_Unsafe</ANIM_NAME>
					<INDICATOR_NODE_ID>WARNLAMP_Gear_Unsafe_ON</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						1 (&gt;L:C310_Gear_Unsafe_Test)
					</LEFT_SINGLE_CODE>
					<LEFT_LEAVE_CODE>
						0 (&gt;L:C310_Gear_Unsafe_Test)
					</LEFT_LEAVE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt;
						(L:C310_Gear_Unsafe_BBO,bool) 0 == and if{
							(L:C310_Gear_Unsafe_Test)
							(L:C310_WL_GEAR_UNSAFE,bool)
							or
						}
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Gear Unsafe Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Held">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
						<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
						<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
						<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>

			<Component ID="WL_GEAR_LEFT">
				<Parameters Type="Default">
					<NODE_ID>WARNLAMP_Gear_Left_Helper</NODE_ID>
					<PART_ID>WARNLAMP_Gear_Left_Helper</PART_ID>
					<ANIM_NAME>WARNLAMP_Gear_Left</ANIM_NAME>
					<INDICATOR_NODE_ID>WARNLAMP_Gear_Left_ON</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						1 (&gt;L:C310_Gear_Left_Test)
					</LEFT_SINGLE_CODE>
					<LEFT_LEAVE_CODE>
						0 (&gt;L:C310_Gear_Left_Test)
					</LEFT_LEAVE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt;
						(L:C310_Gear_Left_BBO,bool) 0 == and if{
							(L:C310_Gear_Left_Test)
							(L:C310_WL_GEAR_LEFT,bool)
							or
						}
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Left Gear'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Held">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
						<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>
	
			<Component ID="WL_GEAR_NOSE">
				<Parameters Type="Default">
					<NODE_ID>WARNLAMP_Gear_Nose_Helper</NODE_ID>
					<PART_ID>WARNLAMP_Gear_Nose_Helper</PART_ID>
					<ANIM_NAME>WARNLAMP_Gear_Nose</ANIM_NAME>
					<INDICATOR_NODE_ID>WARNLAMP_Gear_Nose_ON</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						1 (&gt;L:C310_Gear_Nose_Test)
					</LEFT_SINGLE_CODE>
					<LEFT_LEAVE_CODE>
						0 (&gt;L:C310_Gear_Nose_Test)
					</LEFT_LEAVE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt;
						(L:C310_Gear_Nose_BBO,bool) 0 == and if{
							(L:C310_Gear_Nose_Test)
							(L:C310_WL_Gear_Nose,bool)
							or
						}
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Nose Gear Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Held">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
						<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>		
	
			<Component ID="WL_GEAR_RIGHT">
				<Parameters Type="Default">
					<NODE_ID>WARNLAMP_Gear_Right_Helper</NODE_ID>
					<PART_ID>WARNLAMP_Gear_Right_Helper</PART_ID>
					<ANIM_NAME>WARNLAMP_Gear_Right</ANIM_NAME>
					<INDICATOR_NODE_ID>WARNLAMP_Gear_Right_ON</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						1 (&gt;L:C310_Gear_Right_Test)
					</LEFT_SINGLE_CODE>
					<LEFT_LEAVE_CODE>
						0 (&gt;L:C310_Gear_Right_Test)
					</LEFT_LEAVE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt;
						(L:C310_Gear_Right_BBO,bool) 0 == and if{
							(L:C310_Gear_Right_Test)
							(L:C310_WL_Gear_Right,bool)
							or
						}
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Right Gear Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
					<NO_TT_VALUE>True</NO_TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Held">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
						<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>		
		</Component>

		<Component ID="WL_DEICE_PRESS">
			<Parameters Type="Default">
				<NODE_ID>WARNLAMP_Deice_Press_Helper</NODE_ID>
				<ANIM_NAME>WARNLAMP_Deice_Press</ANIM_NAME>
				<INDICATOR_NODE_ID>WARNLAMP_Deice_Press_ON</INDICATOR_NODE_ID>
				<LEFT_SINGLE_CODE>
					1 (&gt;L:C310_Deice_Press_Test)
				</LEFT_SINGLE_CODE>
				<LEFT_LEAVE_CODE>
					0 (&gt;L:C310_Deice_Press_Test)
				</LEFT_LEAVE_CODE>
				<EMISSIVE_INDICATOR_CODE>
					(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt;
					(L:C310_Deice_Press_BBO,bool) 0 == and if{
						(L:C310_Deice_Press_Test)
						(L:C310_WL_Deice_Press,bool)
						or
					}
				</EMISSIVE_INDICATOR_CODE>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Deice Pressure Light'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>Push</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
				<NO_TT_VALUE>True</NO_TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Push_Button_Held">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
					<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
					<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
				</UseTemplate>
			</Component>
			<Condition Check="INDICATOR_NODE_ID">
				<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Condition>
		</Component>

		<Component ID="WL_TURNBANK_FAIL">
			<Parameters Type="Default">
				<NODE_ID>WARNLAMP_Turnbank_Fail_Helper</NODE_ID>
				<ANIM_NAME>WARNLAMP_Turnbank_Fail</ANIM_NAME>
				<INDICATOR_NODE_ID>WARNLAMP_Turnbank_Fail_ON</INDICATOR_NODE_ID>
				<LEFT_SINGLE_CODE>
					1 (&gt;L:C310_Turnbank_Fail_Test)
				</LEFT_SINGLE_CODE>
				<LEFT_LEAVE_CODE>
					0 (&gt;L:C310_Turnbank_Fail_Test)
				</LEFT_LEAVE_CODE>
				<EMISSIVE_INDICATOR_CODE>
					(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt;
					(L:C310_Turnbank_Fail_BBO,bool) 0 == and if{
						(L:C310_Turnbank_Fail_Test)
						(L:C310_WL_Turnbank_Fail,bool)
						or
					}
				</EMISSIVE_INDICATOR_CODE>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Turn and Bank Failure Light'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>Push</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
				<NO_TT_VALUE>True</NO_TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Push_Button_Held">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
					<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
					<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
				</UseTemplate>
			</Component>
			<Condition Check="INDICATOR_NODE_ID">
				<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Condition>
		</Component>

		<Component ID="WL_LOW_VOLT">
			<Parameters Type="Default">
				<NODE_ID>WARNLAMP_Low_Volt_Helper</NODE_ID>
				<ANIM_NAME>WARNLAMP_Low_Volt</ANIM_NAME>
				<INDICATOR_NODE_ID>WARNLAMP_Low_Volt_ON</INDICATOR_NODE_ID>
				<LEFT_SINGLE_CODE>
					1 (&gt;L:C310_Low_Volt_Test)
				</LEFT_SINGLE_CODE>
				<LEFT_LEAVE_CODE>
					0 (&gt;L:C310_Low_Volt_Test)
				</LEFT_LEAVE_CODE>
				<EMISSIVE_INDICATOR_CODE>
					(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt;
					(L:C310_Low_Volt_BBO,bool) 0 == and if{
						(L:C310_Low_Volt_Test)
						(L:C310_WL_LOW_VOLT,bool)
						or
					}
				</EMISSIVE_INDICATOR_CODE>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Low Volts Light'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>Push</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
				<NO_TT_VALUE>True</NO_TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Push_Button_Held">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
					<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
					<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
				</UseTemplate>
			</Component>
			<Condition Check="INDICATOR_NODE_ID">
				<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Condition>
		</Component>

		<Component ID="WL_OVERHEAT">
			<Parameters Type="Default">
				<NODE_ID>WARNLAMP_Overheat_Helper</NODE_ID>
				<ANIM_NAME>WARNLAMP_Overheat</ANIM_NAME>
				<INDICATOR_NODE_ID>WARNLAMP_Overheat_ON</INDICATOR_NODE_ID>
				<LEFT_SINGLE_CODE>
					1 (&gt;L:C310_Overheat_Test)
				</LEFT_SINGLE_CODE>
				<LEFT_LEAVE_CODE>
					0 (&gt;L:C310_Overheat_Test)
				</LEFT_LEAVE_CODE>
				<EMISSIVE_INDICATOR_CODE>
					(A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 0 &gt;
					(L:C310_Overheat_BBO,bool) 0 == and if{
						(L:C310_Overheat_Test)
						(L:C310_WL_OVERHEAT,bool)
						or
					}
				</EMISSIVE_INDICATOR_CODE>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Heater Overheat Light'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>Push</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Push to test'</TT_DESCRIPTION>
				<NO_TT_VALUE>True</NO_TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Push_Button_Held">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
					<WWISE_EVENT_1>button_bulb_test_press</WWISE_EVENT_1>
					<WWISE_EVENT_2>button_bulb_test_release</WWISE_EVENT_2>
				</UseTemplate>
			</Component>
			<Condition Check="INDICATOR_NODE_ID">
				<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Condition>
		</Component>

		<!-- The vacuum fail lights don't have press-to-test -->

		<Component ID="WL_VAC_FAIL_L">
			<Component ID="C310_L_Vac_Fail_Visibility" Node="C310_L_Vac_Fail">
				<!-- <UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_L_Vac_Fail,bool)</VISIBILITY_CODE>
				</UseTemplate> -->
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
					<EMISSIVE_CODE>(L:C310_L_Vac_Fail,bool)</EMISSIVE_CODE>
				</UseTemplate>
			</Component>
		</Component>

		<Component ID="WL_VAC_FAIL_R">
			<Component ID="C310_R_Vac_Fail_Visibility" Node="C310_R_Vac_Fail">
				<!-- <UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_R_Vac_Fail,bool)</VISIBILITY_CODE>
				</UseTemplate> -->
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
					<EMISSIVE_CODE>(L:C310_R_Vac_Fail,bool)</EMISSIVE_CODE>
				</UseTemplate>
			</Component>
		</Component>


	<!-- DEICE ###################################### -->

		<Component ID="DEICE_SWITCHES">
			<Component ID="SW_PITOT_HEAT">
				<Parameters Type="Default">
					<NODE_ID>DEICE_Switch_PitotHeat</NODE_ID>
					<ANIM_NAME>DEICE_Switch_PitotHeat</ANIM_NAME>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Pitot Heat'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Pitot Heat'</TT_DESCRIPTION>
					<TT_VALUE>(A:PITOT HEAT,bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>
							(A:PITOT HEAT,bool) 100 *
						</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(>K:PITOT_HEAT_TOGGLE)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<Component ID="SW_LIGHTS_DEICE">
				<Parameters Type="Default">
					<NODE_ID>Switch_Ice_Light</NODE_ID>
					<ANIM_NAME>Switch_Ice_Light</ANIM_NAME>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Wing Ice Lights'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Wing Ice Lights'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_LIGHTS_DEICE,bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(L:C310_SW_LIGHTS_DEICE,bool) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(L:C310_SW_LIGHTS_DEICE,bool) ! (>L:C310_SW_LIGHTS_DEICE,bool)
							(>K:TOGGLE_WING_LIGHTS)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<Component ID="SW_DEICE_WINDSHLD">
				<Parameters Type="Default">
					<NODE_ID>DEICE_Switch_Windshield</NODE_ID>
					<ANIM_NAME>DEICE_Switch_Windshield</ANIM_NAME>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Windshield Heat'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Windshield Heat'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_DEICE_WINDSHLD, bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>
							(L:C310_SW_DEICE_WINDSHLD, bool) 100 *
						</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(L:C310_SW_DEICE_WINDSHLD, bool) ! (>L:C310_SW_DEICE_WINDSHLD, bool)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<Component ID="SW_DEICE_PROP">
				<Parameters Type="Default">
					<NODE_ID>DEICE_Switch</NODE_ID>
					<ANIM_NAME>DEICE_Switch</ANIM_NAME>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Prop Deice'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Prop Deicing'</TT_DESCRIPTION>
					<TT_VALUE>(A:PROP DEICE SWITCH:1,Bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>(A:PROP DEICE SWITCH:1,Bool) 100 *</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(>K:TOGGLE_PROPELLER_DEICE)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<Component ID="SW_DEICE_SURFACE">
				<Parameters Type="Default">
					<NODE_ID>DEICE_Switch_Airframe</NODE_ID>
					<ANIM_NAME>DEICE_Switch_Airframe</ANIM_NAME>
					<PART_ID>DEICE_Switch_Airframe</PART_ID>
					<INVERT_ANIM>True</INVERT_ANIM>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Deice Boots'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Select Deicing Boots Function'</TT_DESCRIPTION>
					<TT_VALUE>
						(L:C310_SW_DEICE_SURFACE,enum) 0 == if{
							 'Inflate' 
						}
						(L:C310_SW_DEICE_SURFACE,enum) 1 == if{
							 'Off' 
						}
						(L:C310_SW_DEICE_SURFACE,enum) 2 == if{
							 'Auto' 
						}
					</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<Update Once="True">
						1 (>L:C310_SW_DEICE_SURFACE,enum)
					</Update>
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name = "ASOBO_GT_Switch_3States">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<CODE_POS_0>
							0 (>L:C310_SW_DEICE_SURFACE,enum)
						</CODE_POS_0>
						<CODE_POS_1>
							1 (>L:C310_SW_DEICE_SURFACE,enum)
						</CODE_POS_1>
						<CODE_POS_2>
							2 (>L:C310_SW_DEICE_SURFACE,enum)
						</CODE_POS_2>
						<STATE0_TEST>(L:C310_SW_DEICE_SURFACE,enum) 0 ==</STATE0_TEST>
						<STATE1_TEST>(L:C310_SW_DEICE_SURFACE,enum) 1 ==</STATE1_TEST>
						<STATE2_TEST>(L:C310_SW_DEICE_SURFACE,enum) 2 ==</STATE2_TEST>
					</UseTemplate>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

		</Component>

	<!-- PASSENGER ################################## -->

		<Component ID="SW_DEFROST">
			<Parameters Type="Default">
				<NODE_ID>PRESSURIZATION_Switch_Bleed</NODE_ID>
				<PART_ID>PRESSURIZATION_Switch_Bleed</PART_ID>
				<ANIM_NAME>PRESSURIZATION_Switch_Bleed</ANIM_NAME>
				<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
				<KNOB_POSITION_VAR>C310_SW_DEFROST</KNOB_POSITION_VAR>
				<KNOB_SPEED>5</KNOB_SPEED>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Window Defrost'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>ROTATE</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Window Defrost Dial'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_SW_DEFROST) '%.0f%%' @sprintf</TT_VALUE>
			</Parameters>			
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_LENGTH>100</ANIM_LENGTH>
					<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
					<CLOCKWISE_CODE>
						(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# + 100 min (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
					</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>
						(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# - 0 max (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
					</ANTICLOCKWISE_CODE>
				</UseTemplate>	
				<Condition Check="WWISE_EVENT">
					<UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same"/>			
				</Condition>
			</Component>
			<CameraTitle>Upper_Control_Pedestal</CameraTitle>
		</Component>

		<Component ID="SW_TEMP_CONTROL">
			<Parameters Type="Default">
				<NODE_ID>PASSENGER_Switch_Cabin_Heat</NODE_ID>
				<PART_ID>PASSENGER_Switch_Cabin_Heat</PART_ID>
				<ANIM_NAME>PASSENGER_Switch_Cabin_Heat</ANIM_NAME>
				<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
				<KNOB_POSITION_VAR>C310_SW_TEMP_CONTROL</KNOB_POSITION_VAR>
				<KNOB_SPEED>5</KNOB_SPEED>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Temperature Control'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>ROTATE</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Cabin Thermostat'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_SW_TEMP_CONTROL) '%.0f%%' @sprintf</TT_VALUE>
			</Parameters>			
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_LENGTH>100</ANIM_LENGTH>
					<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
					<CLOCKWISE_CODE>
						(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# + 100 min (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
					</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>
						(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# - 0 max (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
					</ANTICLOCKWISE_CODE>
				</UseTemplate>	
				<Condition Check="WWISE_EVENT">
					<UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same"/>			
				</Condition>
			</Component>
			<CameraTitle>Upper_Control_Pedestal</CameraTitle>
		</Component>

		<Component ID="SW_CABIN_AIR">
			<Parameters Type="Default">
				<NODE_ID>310_Cabin_air_aft_Knob</NODE_ID>
				<PART_ID>310_Cabin_air_aft_Knob</PART_ID>
				<ANIM_NAME>310_Cabin_air_aft_Knob0</ANIM_NAME>
				<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
				<KNOB_POSITION_VAR>C310_SW_CABIN_AIR</KNOB_POSITION_VAR>
				<KNOB_SPEED>5</KNOB_SPEED>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Cabin Air Control'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>ROTATE</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Cabin Air Velocity'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_SW_CABIN_AIR) '%.0f%%' @sprintf</TT_VALUE>
			</Parameters>			
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_LENGTH>100</ANIM_LENGTH>
					<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
					<CLOCKWISE_CODE>
						(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# + 100 min (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
					</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>
						(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# - 0 max (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
					</ANTICLOCKWISE_CODE>
				</UseTemplate>	
				<Condition Check="WWISE_EVENT">
					<UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same"/>			
				</Condition>
			</Component>
			<CameraTitle>Upper_Control_Pedestal</CameraTitle>
		</Component>

		<Component ID="SW_FWD_CABIN_AIR">
			<Parameters Type="Default">
				<NODE_ID>310_Cabin_Air_Knob</NODE_ID>
				<PART_ID>310_Cabin_Air_Knob</PART_ID>
				<ANIM_NAME>310_Cabin_Air_Knob0</ANIM_NAME>
				<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
				<KNOB_POSITION_VAR>C310_SW_FWD_CABIN_AIR</KNOB_POSITION_VAR>
				<KNOB_SPEED>5</KNOB_SPEED>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Foward Cabin Air Control'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>ROTATE</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Forward Cabin Air Velocity'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_SW_FWD_CABIN_AIR) '%.0f%%' @sprintf</TT_VALUE>
			</Parameters>			
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_LENGTH>100</ANIM_LENGTH>
					<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
					<CLOCKWISE_CODE>
						(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# + 100 min (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
					</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>
						(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# - 0 max (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
					</ANTICLOCKWISE_CODE>
				</UseTemplate>	
				<Condition Check="WWISE_EVENT">
					<UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same"/>			
				</Condition>
			</Component>
			<CameraTitle>Upper_Control_Pedestal</CameraTitle>
		</Component>

		<Component ID="SW_HEATER">
			<Parameters Type="Default">
				<NODE_ID>C310_Heater_Switch</NODE_ID>
				<PART_ID>C310_Heater_Switch</PART_ID>
				<ANIM_NAME>C310_Heater_Switch</ANIM_NAME>
				<PART_ID>C310_Heater_Switch</PART_ID>
				<INVERT_ANIM>True</INVERT_ANIM>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Cabin Heat'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Move switch to select between heat / fan only'</TT_DESCRIPTION>
				<TT_VALUE>
					(L:C310_SW_HEATER,enum) 0 == if{
							'Heater' 
					}
					(L:C310_SW_HEATER,enum) 1 == if{
							'Off' 
					}
					(L:C310_SW_HEATER,enum) 2 == if{
							'Fan Only' 
					}
				</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Update Once="True">
					1 (>L:C310_SW_HEATER,enum)
				</Update>
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name = "ASOBO_GT_Switch_3States">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<CODE_POS_0>
						0 (>L:C310_SW_HEATER,enum)
					</CODE_POS_0>
					<CODE_POS_1>
						1 (>L:C310_SW_HEATER,enum)
					</CODE_POS_1>
					<CODE_POS_2>
						2 (>L:C310_SW_HEATER,enum)
					</CODE_POS_2>
					<STATE0_TEST>(L:C310_SW_HEATER,enum) 0 ==</STATE0_TEST>
					<STATE1_TEST>(L:C310_SW_HEATER,enum) 1 ==</STATE1_TEST>
					<STATE2_TEST>(L:C310_SW_HEATER,enum) 2 ==</STATE2_TEST>
				</UseTemplate>
			</Component>
			<CameraTitle>Upper_Control_Pedestal</CameraTitle>
		</Component>

	<!-- SAFETY ##################################### -->

		<Component ID="Failure_Visibility">
			<Parameters Type="Default">
				<NODE_ID>Failure_Check_Clickspot</NODE_ID>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Failure Status'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>Push</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Push to display failure status on DME screen'</TT_DESCRIPTION>
				<NO_TT_VALUE>True</NO_TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<LEFT_SINGLE_CODE>(L:C310_SHOW_FAIL) ! (&gt;L:C310_SHOW_FAIL)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
		</Component>
	
	<!-- LIGHTING ################################### -->

		<Component ID="INTERIOR_LIGHTS">

			<!-- 
				Interior light type assigments: 
				PANEL Lights - FLT_INST dial - POT 4
				RADIO Lights - RADIO dial - POT 5
				PEDESTAL lights - ENG INST dial - POT 6
				GLARESHIELD lights - SWITCH PANEL dial - POT 7
				CABIN Lights - Overhead Forward Dials - POT 8
				AMBIENT Lights - Overhead Rear Dial - POT 9
			-->

			<!-- FLT INST Dial (PANEL type POT 4)-->

			<Component ID="SW_LIGHTS_FLT_INST">
				<Parameters Type="Default">
					<NODE_ID>LIGHTING_Knob_Panel</NODE_ID>
					<PART_ID>LIGHTING_Knob_Panel</PART_ID>
					<ANIM_NAME>LIGHTING_Knob_Panel</ANIM_NAME>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR>C310_SW_LIGHTS_FLT_INST</KNOB_POSITION_VAR>
					<KNOB_SPEED>5</KNOB_SPEED>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Flight Instrument Lighting'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>ROTATE</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Adjust Flight Instrument Brightness'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_LIGHTS_FLT_INST) '%.0f%%' @sprintf</TT_VALUE>
				</Parameters>			
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_LENGTH>100</ANIM_LENGTH>
						<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
						<CLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# + 100 min (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(L:C310_SW_LIGHTS_FLT_INST, enum) (>K:LIGHT_POTENTIOMETER_4_SET)
							(L:C310_SW_LIGHTS_FLT_INST, enum) 0 &gt; if{
								(>K:PANEL_LIGHTS_ON)							
							} els{
								(>K:PANEL_LIGHTS_OFF)
							}
						</CLOCKWISE_CODE>
						<ANTICLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# - 0 max (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(L:C310_SW_LIGHTS_FLT_INST, enum) (>K:LIGHT_POTENTIOMETER_4_SET)
							(L:C310_SW_LIGHTS_FLT_INST, enum) 0 &gt; if{
								(>K:PANEL_LIGHTS_ON)							
							} els{
								(>K:PANEL_LIGHTS_OFF)
							}
						</ANTICLOCKWISE_CODE>
					</UseTemplate>	
					<Condition Check="WWISE_EVENT">
						<UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same"/>			
					</Condition>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<!-- RADIO Dial (RADIO Type POT 5) -->

			<Component ID="LIGHTING_Radios_Knob_Adv">
				<Parameters Type="Default">
					<NODE_ID>LIGHTING_Knob_Radio</NODE_ID>
					<PART_ID>LIGHTING_Knob_Radio</PART_ID>
					<ANIM_NAME>LIGHTING_Knob_Radio</ANIM_NAME>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR>C310_SW_LIGHTS_RADIO</KNOB_POSITION_VAR>
					<KNOB_SPEED>5</KNOB_SPEED>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Radio Lighting'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>ROTATE</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Adjust Radio Backlighting'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_LIGHTS_RADIO) '%.0f%%' @sprintf</TT_VALUE>
				</Parameters>			
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_LENGTH>100</ANIM_LENGTH>
						<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
						<CLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# + 100 min (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(L:C310_SW_LIGHTS_RADIO, enum) (>K:LIGHT_POTENTIOMETER_5_SET)
						</CLOCKWISE_CODE>
						<ANTICLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# - 0 max (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(L:C310_SW_LIGHTS_RADIO, enum) (>K:LIGHT_POTENTIOMETER_5_SET)
						</ANTICLOCKWISE_CODE>
					</UseTemplate>	
					<Condition Check="WWISE_EVENT">
						<UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same"/>			
					</Condition>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<!-- ENG INST Dial (PEDESTAL type POT 6) -->

			<Component ID="SW_LIGHTS_ENG_INST">
				<Parameters Type="Default">
					<NODE_ID>LIGHTING_Knob_center_light_dimming</NODE_ID>
					<PART_ID>LIGHTING_Knob_center_light_dimming</PART_ID>
					<ANIM_NAME>LIGHTING_Knob_center_light_dimming</ANIM_NAME>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR>C310_SW_LIGHTS_ENG_INST</KNOB_POSITION_VAR>
					<KNOB_SPEED>5</KNOB_SPEED>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Engine Instrument Lighting'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>ROTATE</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Adjust Engine Instrument Brightness'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_LIGHTS_ENG_INST) '%.0f%%' @sprintf</TT_VALUE>
				</Parameters>			
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_LENGTH>100</ANIM_LENGTH>
						<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
						<CLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# + 100 min (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(L:C310_SW_LIGHTS_ENG_INST, enum) (>K:LIGHT_POTENTIOMETER_6_SET)
							(L:C310_SW_LIGHTS_ENG_INST, enum) 0 &gt; if{
								(>K:PEDESTRAL_LIGHTS_ON)							
							} els{
								(>K:PEDESTRAL_LIGHTS_OFF)
							}
						</CLOCKWISE_CODE>
						<ANTICLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# - 0 max (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(L:C310_SW_LIGHTS_ENG_INST, enum) (>K:LIGHT_POTENTIOMETER_6_SET)
							(L:C310_SW_LIGHTS_ENG_INST, enum) 0 &gt; if{
								(>K:PEDESTRAL_LIGHTS_ON)							
							} els{
								(>K:PEDESTRAL_LIGHTS_OFF)
							}
						</ANTICLOCKWISE_CODE>
					</UseTemplate>	
					<Condition Check="WWISE_EVENT">
						<UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same"/>			
					</Condition>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<!-- SWITCH PANEL Dial (GLARESHIELD type POT 7) -->

			<Component ID="SW_LIGHTS_SIDE">
				<Parameters Type="Default">
					<NODE_ID>LIGHTING_Knob_Glareshield</NODE_ID>
					<PART_ID>LIGHTING_Knob_Glareshield</PART_ID>
					<ANIM_NAME>LIGHTING_Knob_Glareshield</ANIM_NAME>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR>C310_SW_LIGHTS_SIDE</KNOB_POSITION_VAR>
					<KNOB_SPEED>5</KNOB_SPEED>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Left Switch Panel Lighting'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>ROTATE</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Adjust Left Panel Brightness'</TT_DESCRIPTION>
					<TT_VALUE>(L:C310_SW_LIGHTS_SIDE) '%.0f%%' @sprintf</TT_VALUE>
				</Parameters>			
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_LENGTH>100</ANIM_LENGTH>
						<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
						<CLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# + 100 min (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(L:C310_SW_LIGHTS_SIDE, enum) (>K:LIGHT_POTENTIOMETER_7_SET)
							(L:C310_SW_LIGHTS_SIDE, enum) 0 &gt; if{
								(>K:GLARESHIELD_LIGHTS_ON)							
							} els{
								(>K:GLARESHIELD_LIGHTS_OFF)
							}
						</CLOCKWISE_CODE>
						<ANTICLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# - 0 max (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(L:C310_SW_LIGHTS_SIDE, enum) (>K:LIGHT_POTENTIOMETER_7_SET)
							(L:C310_SW_LIGHTS_SIDE, enum) 0 &gt; if{
								(>K:GLARESHIELD_LIGHTS_ON)							
							} els{
								(>K:GLARESHIELD_LIGHTS_OFF)
							}
						</ANTICLOCKWISE_CODE>
					</UseTemplate>	
					<Condition Check="WWISE_EVENT">
						<UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same"/>			
					</Condition>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<!-- OVERHEAD FWD Dial (CABIN:1 POT 8) -->

			<Component ID="SW_FLOOD_Front_Red">
				<Parameters Type="Default">
					<NODE_ID>C310_OH_Knob_Left</NODE_ID>
					<PART_ID>C310_OH_Knob_Left</PART_ID>
					<ANIM_NAME>C310_OH_Knob_Left</ANIM_NAME>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR>C310_SW_FLOOD_LEFT</KNOB_POSITION_VAR>
					<KNOB_SPEED>5</KNOB_SPEED>
					<INVERT_ANIM>True</INVERT_ANIM>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Forward Cabin Lights'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>ROTATE</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+ROTATE</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>ROTATE</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Cabin Floodlight (Red)'</TT_DESCRIPTION>
					<TT_VALUE>
						(A:LIGHT POTENTIOMETER:8, Percent) '%d' (F:Format)
					</TT_VALUE>
				</Parameters>			
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
						<Update Once="True">
						0 (&gt;K:LIGHT_POTENTIOMETER_8_SET)
						(A:CIRCUIT SWITCH ON:23,bool) if{
							23 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
						}
					</Update>			
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_LENGTH>100</ANIM_LENGTH>
						<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
						<CLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# - 0 max (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) (&gt;K:LIGHT_POTENTIOMETER_8_SET)

							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) 0 &gt; (A:CIRCUIT SWITCH ON:23,bool) ! and if{
								23 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
							}

							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) 0 == (A:CIRCUIT SWITCH ON:23,bool) and if{
								23 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
							}
						</CLOCKWISE_CODE>
						<ANTICLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# + 100 min (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) (&gt;K:LIGHT_POTENTIOMETER_8_SET)

							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) 0 &gt; (A:CIRCUIT SWITCH ON:23,bool) ! and if{
								23 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
							}

							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) 0 == (A:CIRCUIT SWITCH ON:23,bool) and if{
								23 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
							}
						</ANTICLOCKWISE_CODE>
					</UseTemplate>	
					<Condition Check="WWISE_EVENT">
						<UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same"/>			
					</Condition>
				</Component>
				<CameraTitle>Overhead</CameraTitle>
			</Component>

			<!-- OVERHEAD Ctr Dial (CABIN:6 POT 9) -->

			<Component ID="SW_FLOOD_CENTER">
				<Parameters Type="Default">
					<NODE_ID>C310_OH_Knob_Center</NODE_ID>
					<PART_ID>C310_OH_Knob_Center</PART_ID>
					<ANIM_NAME>C310_OH_Knob_Center</ANIM_NAME>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR>C310_SW_FLOOD_CENTER</KNOB_POSITION_VAR>
					<KNOB_SPEED>5</KNOB_SPEED>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Front Cabin Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>ROTATE</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+ROTATE</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>ROTATE</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Front Cabin Light'</TT_DESCRIPTION>
					<TT_VALUE>
						(A:LIGHT POTENTIOMETER:9, Percent) '%d' (F:Format)
					</TT_VALUE>
				</Parameters>			
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<Update Once="True">
						0 (&gt;K:LIGHT_POTENTIOMETER_9_SET)
						(A:CIRCUIT SWITCH ON:53,bool) if{
							53 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
						}
					</Update>
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_LENGTH>100</ANIM_LENGTH>
						<ANIM_CODE>(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)</ANIM_CODE>
						<CLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# - 0 max (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) (&gt;K:LIGHT_POTENTIOMETER_9_SET)

							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) 0 &gt; (A:CIRCUIT SWITCH ON:53,bool) ! and if{
								53 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
							}

							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) 0 == (A:CIRCUIT SWITCH ON:53,bool) and if{
								53 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
							}
						</CLOCKWISE_CODE>
						<ANTICLOCKWISE_CODE>
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) #KNOB_SPEED# + 100 min (&gt;#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#)
							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) (&gt;K:LIGHT_POTENTIOMETER_9_SET)

							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) 0 &gt; (A:CIRCUIT SWITCH ON:53,bool) ! and if{
								53 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
							}

							(#KNOB_POSITION_VAR_TYPE#:#KNOB_POSITION_VAR#) 0 == (A:CIRCUIT SWITCH ON:53,bool) and if{
								53 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
							}
						</ANTICLOCKWISE_CODE>
					</UseTemplate>	
					<Condition Check="WWISE_EVENT">
						<UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same"/>			
					</Condition>
				</Component>
				<CameraTitle>Overhead</CameraTitle>
			</Component>

			<!-- OVERHEAD Rear 1 (CABIN:2 POT 10) -->
			<Component ID="SW_LIGHTS_OH_1">
				<Parameters Type="Default">
					<ANIM_NAME>OH_LightSwitch_01</ANIM_NAME>
					<NODE_ID>OH_LightSwitch_01_Helper</NODE_ID>
					<PART_ID>OH_LightSwitch_01</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Cabin Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Cabin Light Switch'</TT_DESCRIPTION>
					<TT_VALUE>(A:LIGHT POTENTIOMETER:10, Percent) 100 == if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<Update Once="True">
						0 (&gt;K:LIGHT_POTENTIOMETER_10_SET)
						0 (&gt;K:LIGHT_POTENTIOMETER_30_SET)
						(A:CIRCUIT SWITCH ON:49,bool) if{
							49 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
						}
					</Update>
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>
							(A:CIRCUIT SWITCH ON:49,bool) 100 *
						</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(A:CIRCUIT SWITCH ON:49,bool) ! if{
								49 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
								100 (&gt;K:LIGHT_POTENTIOMETER_10_SET)
							} els{
								49 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
								0 (&gt;K:LIGHT_POTENTIOMETER_10_SET)								
							}
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<!-- OVERHEAD Rear 2 (CABIN:3 POT 11) -->
			<Component ID="SW_LIGHTS_OH_2">
				<Parameters Type="Default">
					<ANIM_NAME>OH_LightSwitch_02</ANIM_NAME>
					<NODE_ID>OH_LightSwitch_02_Helper</NODE_ID>
					<PART_ID>OH_LightSwitch_02</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Cabin Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Cabin Light Switch'</TT_DESCRIPTION>
					<TT_VALUE>(A:LIGHT POTENTIOMETER:11, Percent) 100 == if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<Update Once="True">
						0 (&gt;K:LIGHT_POTENTIOMETER_11_SET)
						(A:CIRCUIT SWITCH ON:50,bool) if{
							50 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
						}
					</Update>
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>
							(A:CIRCUIT SWITCH ON:50,bool) 100 *
						</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(A:CIRCUIT SWITCH ON:50,bool) ! if{
								50 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
								100 (&gt;K:LIGHT_POTENTIOMETER_11_SET)
							} els{
								50 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
								0 (&gt;K:LIGHT_POTENTIOMETER_11_SET)								
							}
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<!-- OVERHEAD Rear 3 (CABIN:4 POT 12) -->
			<Component ID="SW_LIGHTS_OH_3">
				<Parameters Type="Default">
					<ANIM_NAME>OH_LightSwitch_03</ANIM_NAME>
					<NODE_ID>OH_LightSwitch_03_Helper</NODE_ID>
					<PART_ID>OH_LightSwitch_03</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Cabin Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Cabin Light Switch'</TT_DESCRIPTION>
					<TT_VALUE>(A:LIGHT POTENTIOMETER:12, Percent) 100 == if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<Update Once="True">
						0 (&gt;K:LIGHT_POTENTIOMETER_12_SET)
						(A:CIRCUIT SWITCH ON:51,bool) if{
							51 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
						}
					</Update>
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>
							(A:CIRCUIT SWITCH ON:51,bool) 100 *
						</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(A:CIRCUIT SWITCH ON:51,bool) ! if{
								51 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
								100 (&gt;K:LIGHT_POTENTIOMETER_12_SET)
							} els{
								51 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
								0 (&gt;K:LIGHT_POTENTIOMETER_12_SET)							
							}
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<!-- OVERHEAD Rear 4 (CABIN:5 POT 13) -->
			<Component ID="SW_LIGHTS_OH_4">
				<Parameters Type="Default">
					<ANIM_NAME>OH_LightSwitch_04</ANIM_NAME>
					<NODE_ID>OH_LightSwitch_04_Helper</NODE_ID>
					<PART_ID>OH_LightSwitch_04</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Cabin Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Cabin Light Switch'</TT_DESCRIPTION>
					<TT_VALUE>(A:LIGHT POTENTIOMETER:13, Percent) 100 == if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<Update Once="True">
						0 (&gt;K:LIGHT_POTENTIOMETER_13_SET)
						(A:CIRCUIT SWITCH ON:52,bool) if{
							52 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
						}
					</Update>
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>
							(A:CIRCUIT SWITCH ON:52,bool) 100 *
						</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(A:CIRCUIT SWITCH ON:52,bool) ! if{
								52 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
								100 (&gt;K:LIGHT_POTENTIOMETER_13_SET)
							} els{
								52 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
								0 (&gt;K:LIGHT_POTENTIOMETER_13_SET)							
							}
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
			</Component>

		</Component> 

		<Component ID="UPDATE_Cabin_Ambient">
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>9</FREQUENCY>
				<UPDATE_CODE>

					(A:LIGHT POTENTIOMETER:9, Percent) 2 /
					(A:LIGHT POTENTIOMETER:10, Percent) 2 / 4 /
					(A:LIGHT POTENTIOMETER:11, Percent) 2 / 4 /
					(A:LIGHT POTENTIOMETER:12, Percent) 2 / 4 /
					(A:LIGHT POTENTIOMETER:13, Percent) 2 / 4 /
					+ + + +
					(&gt;K:LIGHT_POTENTIOMETER_30_SET)

					(A:LIGHT POTENTIOMETER:30, Percent) 0 &gt; (A:CIRCUIT SWITCH ON:54,bool) ! and if{
						54 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
					} els{
						(A:LIGHT POTENTIOMETER:30, Percent) 0 == (A:CIRCUIT SWITCH ON:54,bool) and if{
							54 (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
						}
					}

				</UPDATE_CODE>
			</UseTemplate>
		</Component>

		<Component ID="LIGHTING_Emitters_Internal">

			<Component ID="FlightInstrument_PostLights">
				<DefaultTemplateParameters>
					<NODE_ID>Panel_FlightInstrument_Lights</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>
							(A:LIGHT PANEL,bool)
							(A:ELECTRICAL MASTER BATTERY,bool)
							and if{
								(A:LIGHT POTENTIOMETER:4, Percent) 100 / 10 /
							}
						</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="EngineInstrument_PostLights">
				<DefaultTemplateParameters>
					<NODE_ID>Panel_EngineInstrument_Lights</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>
							(A:LIGHT PEDESTRAL,bool)
							(A:ELECTRICAL MASTER BATTERY,bool)
							and if{
								(A:LIGHT POTENTIOMETER:6, Percent) 100 / 10 /
							}
						</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Overhead_Front">
				<DefaultTemplateParameters>
					<NODE_ID>Overhead_Front</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>
							(A:CIRCUIT ON:53,bool)
							if{
								(A:LIGHT POTENTIOMETER:9, Percent) 100 /
							}
						</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Overhead_Spot">
				<DefaultTemplateParameters>
					<NODE_ID>Overhead_Spot</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>
							(A:CIRCUIT ON:23,bool)
							if{
								(A:LIGHT POTENTIOMETER:8, Percent) 100 /
							}
						</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Overhead_Cabin_01">
				<DefaultTemplateParameters>
					<NODE_ID>Overhead_Rear_01</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>
							(A:CIRCUIT ON:49,bool)
							if{
								(A:LIGHT POTENTIOMETER:10, Percent) 100 /
							}
						</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Overhead_Cabin_02">
				<DefaultTemplateParameters>
					<NODE_ID>Overhead_Rear_02</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>
							(A:CIRCUIT ON:50,bool)
							if{
								(A:LIGHT POTENTIOMETER:11, Percent) 100 /
							}
						</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Overhead_Cabin_03">
				<DefaultTemplateParameters>
					<NODE_ID>Overhead_Rear_03</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>
							(A:CIRCUIT ON:51,bool)
							if{
								(A:LIGHT POTENTIOMETER:12, Percent) 100 /
							}
						</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Overhead_Cabin_04">
				<DefaultTemplateParameters>
					<NODE_ID>Overhead_Rear_04</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>
							(A:CIRCUIT ON:52,bool)
							if{
								(A:LIGHT POTENTIOMETER:13, Percent) 100 /
							}
						</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>
		</Component> 

		<Component ID="EXTERIOR_LIGHTS">

			<Component ID="SW_LIGHTS_TAXI">
				<Parameters Type="Default">
					<ID>1</ID>
					<ANIM_NAME>LIGHTING_Switch_Light_Taxi_1</ANIM_NAME>
					<NODE_ID>LIGHTING_Switch_Light_Taxi_1</NODE_ID>
					<PART_ID>LIGHTING_Switch_Light_Taxi_1</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Taxi Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Taxi Light'</TT_DESCRIPTION>
					<TT_VALUE>(A:LIGHT TAXI,bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>
							(A:LIGHT TAXI,bool) 100 *
						</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(>K:TOGGLE_TAXI_LIGHTS)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<Component ID="UPDATE_TaxiLightWatcher">
				<UseTemplate Name="ASOBO_GT_Update">
					<FREQUENCY>3</FREQUENCY>
					<UPDATE_CODE>
						(A:GEAR CENTER POSITION, Percent over 100) 0.5 &lt; (A:LIGHT TAXI,bool) and if{
							(&gt;K:TOGGLE_TAXI_LIGHTS)
						}
					</UPDATE_CODE>
				</UseTemplate>
			</Component>

			<Component ID="SW_LIGHTS_NAV">
				<Parameters Type="Default">
					<NODE_ID>LIGHTING_Switch_Light_Nav_1</NODE_ID>
					<ANIM_NAME>LIGHTING_Switch_Light_Nav_1</ANIM_NAME>
					<PART_ID>LIGHTING_Switch_Light_Nav_1</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Navigation Lights'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Navigation Lights'</TT_DESCRIPTION>
					<TT_VALUE>(A:LIGHT NAV,bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>
							(A:LIGHT NAV,bool) 100 *
						</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(>K:TOGGLE_NAV_LIGHTS)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<Component ID="SW_LIGHTS_BEACON">
				<Parameters Type="Default">
					<NODE_ID>LIGHTING_Switch_Light_Beacon_1</NODE_ID>
					<ANIM_NAME>LIGHTING_Switch_Light_Beacon_1</ANIM_NAME>
					<PART_ID>LIGHTING_Switch_Light_Beacon_1</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Beacon Light'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Beacon Light'</TT_DESCRIPTION>
					<TT_VALUE>(A:LIGHT BEACON,bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>
							(A:LIGHT BEACON,bool) 100 *
						</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(>K:TOGGLE_BEACON_LIGHTS)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<Component ID="SW_LIGHTS_STROBE">
				<Parameters Type="Default">
					<NODE_ID>LIGHTING_Switch_Light_Strobe_1</NODE_ID>
					<ANIM_NAME>LIGHTING_Switch_Light_Strobe_1</ANIM_NAME>
					<PART_ID>LIGHTING_Switch_Light_Strobe_1</PART_ID>
					<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
					<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Strobe Lights'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Strobe Lights'</TT_DESCRIPTION>
					<TT_VALUE>(A:LIGHT STROBE,bool) if{ 'On' } els{ 'Off' }</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<ANIM_CODE>
							(A:LIGHT STROBE,bool) 100 *
						</ANIM_CODE>
						<LEFT_SINGLE_CODE>
							(>K:STROBES_TOGGLE)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>

			<Component ID="SW_LIGHTS_LANDING">
				<Parameters Type="Default">
					<NODE_ID>LIGHTING_Switch_Light_Landing_1</NODE_ID>
					<ANIM_NAME>LIGHTING_Switch_Light_Landing_1</ANIM_NAME>
					<PART_ID>LIGHTING_Switch_Light_Landing_1</PART_ID>
					<INVERT_ANIM>True</INVERT_ANIM>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Landing Lights'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>MOVE_Y</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
					<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
					<TT_DESCRIPTION>'Select Landing Lights'</TT_DESCRIPTION>
					<TT_VALUE>
						(L:C310_SW_LIGHTS_LANDING,enum) 0 == if{
							 'Extend' 
						}
						(L:C310_SW_LIGHTS_LANDING,enum) 1 == if{
							 'Off' 
						}
						(L:C310_SW_LIGHTS_LANDING,enum) 2 == if{
							 'Retract' 
						}
					</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<Update Once="True">
						1 (>L:C310_SW_LIGHTS_LANDING,enum)
					</Update>
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name = "ASOBO_GT_Switch_3States">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<CODE_POS_0>
							0 (>L:C310_SW_LIGHTS_LANDING,enum)
						</CODE_POS_0>
						<CODE_POS_1>
							1 (>L:C310_SW_LIGHTS_LANDING,enum)
						</CODE_POS_1>
						<CODE_POS_2>
							2 (>L:C310_SW_LIGHTS_LANDING,enum)
						</CODE_POS_2>
						<STATE0_TEST>(L:C310_SW_LIGHTS_LANDING,enum) 0 ==</STATE0_TEST>
						<STATE1_TEST>(L:C310_SW_LIGHTS_LANDING,enum) 1 ==</STATE1_TEST>
						<STATE2_TEST>(L:C310_SW_LIGHTS_LANDING,enum) 2 ==</STATE2_TEST>
					</UseTemplate>
				</Component>
				<CameraTitle>Left_Switch_Panel</CameraTitle>
			</Component>
		</Component>

	<!-- DOORS/WINDOWS ############################## -->

		<Component ID="Left_Shade">
			<Parameters Type="Default">
				<ANIM_NAME>ShadeBracket_Left</ANIM_NAME>
				<NODE_ID>ShadeBracket_Left</NODE_ID>
				<PART_ID></PART_ID>
			</Parameters>
			<Parameters Type="Default">
				<WWISE_EVENT_1></WWISE_EVENT_1>
				<WWISE_EVENT_2></WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Left Window Shade'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_AXIS_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Rotate window shade'</TT_DESCRIPTION>
				<NO_TT_VALUE>True</NO_TT_VALUE>
			</Parameters>

			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>			
				<UseTemplate Name="ASOBO_GT_Lever_DraggingWheelLeftDrag_Axis">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_LAG>100</ANIM_LAG>
					<USE_TRAJECTORY_DRAG_MODE>True</USE_TRAJECTORY_DRAG_MODE>
					<ANIM_CODE>(L:WindowShadeLeft, number) 100 *</ANIM_CODE>
					<POSITIVE_AXIS_CODE>1 (L:WindowShadeLeft, number) 0.1 + min (&gt;L:WindowShadeLeft)</POSITIVE_AXIS_CODE>
					<NEGATIVE_AXIS_CODE>0 (L:WindowShadeLeft, number) 0.1 - max (&gt;L:WindowShadeLeft)</NEGATIVE_AXIS_CODE>
					<DRAG_CODE>(M:DragPercent) (&gt;L:WindowShadeLeft)</DRAG_CODE>
					<AXIS>Y</AXIS>
					<NO_ARROWS/>
					<CURSOR>Grab</CURSOR>
				</UseTemplate>
			</Component>
			<Component ID="Hidden_Shade_Left">
				<UseTemplate Name = "ASOBO_GT_Anim_Code">
					<ANIM_NAME>ShadeBracket_Left_Helper</ANIM_NAME>
					<ANIM_CODE>(L:WindowShadeLeft, number) 100 *</ANIM_CODE>
					<ANIM_LAG>100</ANIM_LAG>
				</UseTemplate>
			</Component>				
		</Component>

		<Component ID="Right_Shade">
			<Parameters Type="Default">
				<ANIM_NAME>ShadeBracket_Right</ANIM_NAME>
				<NODE_ID>ShadeBracket_Right</NODE_ID>
				<PART_ID></PART_ID>
			</Parameters>
			<Parameters Type="Default">
				<WWISE_EVENT_1></WWISE_EVENT_1>
				<WWISE_EVENT_2></WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Right Window Shade'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_AXIS_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Rotate window shade'</TT_DESCRIPTION>
				<NO_TT_VALUE>True</NO_TT_VALUE>
			</Parameters>

			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>			
				<UseTemplate Name="ASOBO_GT_Lever_DraggingWheelLeftDrag_Axis">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_LAG>100</ANIM_LAG>
					<USE_TRAJECTORY_DRAG_MODE>True</USE_TRAJECTORY_DRAG_MODE>
					<ANIM_CODE>(L:WindowShadeRight, number) 100 *</ANIM_CODE>
					<POSITIVE_AXIS_CODE>1 (L:WindowShadeRight, number) 0.1 + min (&gt;L:WindowShadeRight)</POSITIVE_AXIS_CODE>
					<NEGATIVE_AXIS_CODE>0 (L:WindowShadeRight, number) 0.1 - max (&gt;L:WindowShadeRight)</NEGATIVE_AXIS_CODE>
					<DRAG_CODE>(M:DragPercent) (&gt;L:WindowShadeRight)</DRAG_CODE>
					<AXIS>Y</AXIS>
					<NO_ARROWS/>
					<CURSOR>Grab</CURSOR>
				</UseTemplate>
			</Component>
			<Component ID="Hidden_Shade_Right">
				<UseTemplate Name = "ASOBO_GT_Anim_Code">
					<ANIM_NAME>ShadeBracket_Right_Helper</ANIM_NAME>
					<ANIM_CODE>(L:WindowShadeRight, number) 100 *</ANIM_CODE>
					<ANIM_LAG>100</ANIM_LAG>
				</UseTemplate>
			</Component>				
		</Component>

		<Component ID="PassengerDoor">  
			<UseTemplate Name="ASOBO_GT_Anim_Code">
				<ANIM_NAME>C310_Main_Door</ANIM_NAME>
				<ANIM_CODE>
					(A:PROP RPM:2, Rpm) 1000 min 1100 / sp0
					(A:AIRSPEED TRUE, Knots) 30 min 33 / sp1
					1 l0 l1 max - (&gt;L:C310_AirflowPercent)
					(A:INTERACTIVE POINT OPEN:0, Percent) 0 &gt; if{						
						(A:INTERACTIVE POINT OPEN:0, Percent) (L:C310_AirflowPercent) * (&gt;L:C310_Door_0_OpenPercent)
					} els{
						0 (&gt;L:C310_Door_0_OpenPercent)
					}

					(L:C310_Door_0_OpenPercent)
				</ANIM_CODE> 
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_LAG>40</ANIM_LAG>
			</UseTemplate>
		</Component>

		<Component ID="DOOR_Passenger_Handle">
			<Parameters Type="Default">
				<NODE_ID>Door_Pax_Handle</NODE_ID>
				<ANIM_NAME>Door_Pax_Handle</ANIM_NAME>
				<ANIM_LENGTH>10</ANIM_LENGTH>
				<SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
				<SWITCH_POSITION_VAR>C310_Handle_Position</SWITCH_POSITION_VAR>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Cabin Door'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>ROTATE</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION_FLAGS>
				<TT_INTERACTION_LOCKABLE_FLAGS>Y_AXIS</TT_INTERACTION_LOCKABLE_FLAGS>
				<TT_DESCRIPTION>'Rotate Handle to Operate Cabin Door'</TT_DESCRIPTION>
				<TT_VALUE>
					(L:C310_Handle_Position) 0 &gt; if{ 'Unlocked' } els{ 'Locked' }
				</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Update">
					<FREQUENCY>3</FREQUENCY>
					<UPDATE_CODE>
						(L:C310_Handle_Position) 1 &gt; 
						if{
							(L:C310_Handle_Timer1) 3 &lt; if{
								(L:C310_Handle_Timer1) 1 + (&gt;L:C310_Handle_Timer1)
							} els{
								1 (&gt;L:C310_Handle_Position)
							}	
						} els{
							(L:C310_Handle_OPEN) ! if{
								0 (&gt;L:C310_Handle_Timer1)
							}
						}
						(L:C310_Handle_Position) 1 &lt; (A:INTERACTIVE POINT OPEN:0,number) 0 &gt; and
						if{
							(L:C310_Handle_Timer2) 3 &lt; if{
								(L:C310_Handle_Timer2) 1 + (&gt;L:C310_Handle_Timer2)
							} els{
								1 (&gt;L:C310_Handle_Position)
								0 (&gt;L:C310_Handle_Timer2)
							}	
						}
					</UPDATE_CODE>
				</UseTemplate>
				<UseTemplate Name = "ASOBO_GT_Switch_3States">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<CODE_POS_0>
						0 (&gt;#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
					</CODE_POS_0>
					<CODE_POS_1>
						1 (&gt;#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
					</CODE_POS_1>
					<CODE_POS_2>
						2 (&gt;#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
						
						0 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST)
						1 (&gt;L:C310_Toggle_Door_OPEN, bool)
					</CODE_POS_2>
					<OVERRIDE_ANIM_CODE>
						(L:C310_Handle_Position) 2 == (L:C310_Handle_Timer1) 3 == and if{
							100
						} els{
							(O:XMLVAR_#NODE_ID#_Animation_Target_Position)
						}
					</OVERRIDE_ANIM_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle></CameraTitle>
		</Component>

		<Component ID="StormWindow">  
			<UseTemplate Name="ASOBO_GT_Anim_Code">
				<ANIM_NAME>DOOR_StormWindow</ANIM_NAME>
				<ANIM_CODE>					
					(L:C310_Window_OPEN, number)  
				</ANIM_CODE> 
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_LAG>120</ANIM_LAG>
			</UseTemplate>

			<Component ID="StormWindow_Visibility_1" Node="StormWindow_Ext_NEW">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_Window_OPEN, number) 95 &lt;</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="StormWindow_Visibility_2" Node="StormWindow_Int">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_Window_OPEN, number) 95 &lt;</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="StormWindow_Visibility_3" Node="StormWindow_Ext_NORAIN">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_Window_OPEN, number) 95 &gt;</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="StormWindow_Visibility_4" Node="StormWindow_Int_NORAIN">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_Window_OPEN, number) 95 &gt;</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

		</Component>

		<Component ID="StormWindow_Handle">
			<Parameters Type="Default">
				<ID>1</ID>
				<ANIM_NAME>StormWindow_Handle</ANIM_NAME>
				<NODE_ID>StormWindow_Handle</NODE_ID>
				<PART_ID>StormWindow_Handle</PART_ID>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Storm Window'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Storm Window'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_Window_OPEN, bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<LEFT_SINGLE_CODE>
						1 (>L:C310_Toggle_Window_OPEN, number)
					</LEFT_SINGLE_CODE>
					<ANIM_CODE>(L:C310_Window_OPEN, number) 100 *</ANIM_CODE>
					<ANIM_LENGTH>100</ANIM_LENGTH>
					<ANIM_LAG>120</ANIM_LAG>
				</UseTemplate>
			</Component>
			<CameraTitle></CameraTitle>
		</Component>

		<Component ID="Rear_Baggage_Door">  
			<UseTemplate Name="ASOBO_GT_Anim_Code">
				<ANIM_NAME>C310_Aft_Baggage_Door</ANIM_NAME>
				<ANIM_CODE>					
					(A:INTERACTIVE POINT OPEN:1,number) 100 *
				</ANIM_CODE> 
				<ANIM_LENGTH>100</ANIM_LENGTH>
			</UseTemplate>
		</Component>

	<!-- VISIBILITY ################################# -->

		<Component ID="VISIBILITY_Init">
			<UseTemplate Name="ASOBO_GT_Update">
				<UPDATE_ONCE>True</UPDATE_ONCE>
				<UPDATE_CODE>
					1 (>L:C310_RSTR_GO,bool)										
					0 (&gt;L:C310_FAIL_LEFT_ENGINE, bool)
					0 (&gt;L:C310_FAIL_RIGHT_ENGINE, bool)
				</UPDATE_CODE>
			</UseTemplate>
		</Component>

		<Component ID="VISIBILITY_Pilots">

			<!-- <UseTemplate Name="ASOBO_GT_Update">
				<UPDATE_ONCE>True</UPDATE_ONCE>
				<UPDATE_CODE>
					1 (&gt;L:MV_VIZ_PILOT)
					1 (&gt;L:MV_VIZ_COPILOT)
				</UPDATE_CODE>
			</UseTemplate> -->

			<Component ID="Pilot_Visibility" Node="PILOT_0">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<!-- <VISIBILITY_CODE>(A:PAYLOAD STATION WEIGHT:1, pounds) 0 &gt; (L:MV_VIZ_PILOT) and</VISIBILITY_CODE> -->
					<VISIBILITY_CODE>(A:PAYLOAD STATION WEIGHT:1, pounds) 0 &gt;</VISIBILITY_CODE>
				</UseTemplate>
			</Component>

			<Component ID="Copilot_Visibility" Node="PILOT_1">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<!-- <VISIBILITY_CODE>(A:PAYLOAD STATION WEIGHT:2, pounds) 0 &gt; (L:MV_VIZ_COPILOT) and</VISIBILITY_CODE> -->
					<VISIBILITY_CODE>
						(A:PAYLOAD STATION WEIGHT:2, pounds) 0 &gt;
						(L:C310_TAB_HIDE_COPILOT,bool) 0 == and
					</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
		</Component>

		<Component ID="Pilot_Yoke_Visibility" Node="Left_Yoke_Hide">
			<UseTemplate Name="ASOBO_GT_Interaction_LeftSingle_Code">
				<LEFT_SINGLE_CODE>1 (>L:C310_Toggle_YokeHidden1,bool)</LEFT_SINGLE_CODE>
				<TOOLTIPID>Yoke Visibility</TOOLTIPID>
			</UseTemplate>
		</Component>

		<Component ID="CoPilot_Yoke_Visibility" Node="Right_Yoke_Hide">
			<UseTemplate Name="ASOBO_GT_Interaction_LeftSingle_Code">
				<LEFT_SINGLE_CODE>1 (>L:C310_Toggle_YokeHidden2)</LEFT_SINGLE_CODE>
				<TOOLTIPID>Yoke Visibility</TOOLTIPID>
			</UseTemplate>
		</Component>

		<Macro Name="Special_Stuff">
			(L:C310_Stickers_01)
			(L:C310_Stickers_02)
			(L:C310_Stickers_03)
			(L:C310_Stickers_04)
			(L:C310_Stickers_05)
			(L:C310_Stickers_06)
			(L:C310_Bobblehead_01)
			(L:C310_Briefcase)
			(L:C310_Hat)
			+ + + + + + + +
			(&gt;L:C310_Egg_Count)
			(L:C310_Egg_Count) '%2d of 9' (F:Format)
		</Macro>

		<Component ID="Stickers">
			<Component ID="Sticker_Click_01">
				<Parameters Type="Default">
					<NODE_ID>PopArt_Decal_01_Clickspot</NODE_ID>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'???'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>(L:C310_Stickers_01, bool) if{ 'Click to hide sticker' } els{ 'Click to show sticker' }</TT_DESCRIPTION>
					<TT_VALUE>@Special_Stuff</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<LEFT_SINGLE_CODE>
							(L:C310_Stickers_01) ! (&gt;L:C310_Stickers_01)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Sticker_Click_02">
				<Parameters Type="Default">
					<NODE_ID>PopArt_Decal_02_Clickspot</NODE_ID>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'???'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>(L:C310_Stickers_02, bool) if{ 'Click to hide sticker' } els{ 'Click to show sticker' }</TT_DESCRIPTION>
					<TT_VALUE>@Special_Stuff</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<LEFT_SINGLE_CODE>
							(L:C310_Stickers_02) ! (&gt;L:C310_Stickers_02)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Sticker_Click_03">
				<Parameters Type="Default">
					<NODE_ID>PopArt_Decal_03_Clickspot</NODE_ID>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'???'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>(L:C310_Stickers_03, bool) if{ 'Click to hide sticker' } els{ 'Click to show sticker' }</TT_DESCRIPTION>
					<TT_VALUE>@Special_Stuff</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<LEFT_SINGLE_CODE>
							(L:C310_Stickers_03) ! (&gt;L:C310_Stickers_03)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Sticker_Click_04">
				<Parameters Type="Default">
					<NODE_ID>PopArt_Decal_04_Clickspot</NODE_ID>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'???'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>(L:C310_Stickers_04, bool) if{ 'Click to hide sticker' } els{ 'Click to show sticker' }</TT_DESCRIPTION>
					<TT_VALUE>@Special_Stuff</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<LEFT_SINGLE_CODE>
							(L:C310_Stickers_04) ! (&gt;L:C310_Stickers_04)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Sticker_Click_05">
				<Parameters Type="Default">
					<NODE_ID>PopArt_Decal_05_Clickspot</NODE_ID>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'???'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>(L:C310_Stickers_05, bool) if{ 'Click to hide sticker' } els{ 'Click to show sticker' }</TT_DESCRIPTION>
					<TT_VALUE>@Special_Stuff</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<LEFT_SINGLE_CODE>
							(L:C310_Stickers_05) ! (&gt;L:C310_Stickers_05)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Sticker_Click_06">
				<Parameters Type="Default">
					<NODE_ID>PopArt_Decal_06_Clickspot</NODE_ID>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'???'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>(L:C310_Stickers_06, bool) if{ 'Click to hide sticker' } els{ 'Click to show sticker' }</TT_DESCRIPTION>
					<TT_VALUE>@Special_Stuff</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<LEFT_SINGLE_CODE>
							(L:C310_Stickers_06) ! (&gt;L:C310_Stickers_06)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="Sticker_Show">
				<Component ID="Sticker_1" Node="PopArt_Decal_01">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(L:C310_Stickers_01)</VISIBILITY_CODE>
					</UseTemplate>
				</Component>
				<Component ID="Sticker_2" Node="PopArt_Decal_02">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(L:C310_Stickers_02)</VISIBILITY_CODE>
					</UseTemplate>
				</Component>
				<Component ID="Sticker_3" Node="PopArt_Decal_03">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(L:C310_Stickers_03)</VISIBILITY_CODE>
					</UseTemplate>
				</Component>
				<Component ID="Sticker_4" Node="PopArt_Decal_04">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(L:C310_Stickers_04)</VISIBILITY_CODE>
					</UseTemplate>
				</Component>
				<Component ID="Sticker_5" Node="PopArt_Decal_05">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(L:C310_Stickers_05)</VISIBILITY_CODE>
					</UseTemplate>
				</Component>
				<Component ID="Sticker_6" Node="PopArt_Decal_06">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(L:C310_Stickers_06)</VISIBILITY_CODE>
					</UseTemplate>
				</Component>
			</Component>
		</Component>

		<Component ID="BobbleHead">
			<Component ID="Bobble_Click">
				<Parameters Type="Default">
					<NODE_ID>Bobble_Einy_Clickspot</NODE_ID>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'???'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>(L:C310_Bobblehead_01, bool) if{ 'Click to hide bobblehead' } els{ 'Click to show bobblehead' }</TT_DESCRIPTION>
					<TT_VALUE>@Special_Stuff</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<LEFT_SINGLE_CODE>
							(L:C310_Bobblehead_01) ! (&gt;L:C310_Bobblehead_01)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
				</Component>
			</Component>
			<Component ID="Bobble_Base" Node="Bobble_Einy_Base">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_Bobblehead_01)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="Bobble_Pitch">
				<UseTemplate Name="ASOBO_GT_Anim_Sim">
					<ANIM_NAME>Bobble_Einy_Pitch</ANIM_NAME>
					<ANIM_SIMVAR>ACCELERATION BODY X</ANIM_SIMVAR>
					<ANIM_SIMVAR_UNITS>feet per second squared</ANIM_SIMVAR_UNITS>
					<ANIM_SIMVAR_BIAS>25</ANIM_SIMVAR_BIAS>
					<ANIM_LENGTH>50</ANIM_LENGTH>
					<ANIM_LAG>400</ANIM_LAG>
				</UseTemplate>
			</Component>
			<Component ID="Bobble_Roll">
				<UseTemplate Name="ASOBO_GT_Anim_Sim">
					<ANIM_NAME>Bobble_Einy_Roll</ANIM_NAME>
					<ANIM_SIMVAR>ACCELERATION BODY Y</ANIM_SIMVAR>
					<ANIM_SIMVAR_UNITS>feet per second squared</ANIM_SIMVAR_UNITS>
					<ANIM_SIMVAR_BIAS>25</ANIM_SIMVAR_BIAS>
					<ANIM_LENGTH>50</ANIM_LENGTH>
					<ANIM_LAG>400</ANIM_LAG>
				</UseTemplate>
			</Component>
			<Component ID="Bobble_Roll_Brows">
				<UseTemplate Name="ASOBO_GT_Anim_Code">
					<ANIM_NAME>Bobble_Einy_Eyebrows</ANIM_NAME>
					<ANIM_CODE>
						(A:STALL WARNING,bool) 100 *
					</ANIM_CODE> 
				</UseTemplate>
			</Component>
		</Component>

		<Component ID="Briefcase">
			<Component ID="Briefcase_Click">
				<Parameters Type="Default">
					<NODE_ID>Briefcase_Clickspot</NODE_ID>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'???'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>(L:C310_Briefcase, bool) if{ 'Click to hide briefcase' } els{ 'Click to show briefcase' }</TT_DESCRIPTION>
					<TT_VALUE>@Special_Stuff</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<LEFT_SINGLE_CODE>
							(L:C310_Briefcase) ! (&gt;L:C310_Briefcase)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>
							(A:PAYLOAD STATION WEIGHT:2, pounds) 0 ==
							(L:C310_TAB_HIDE_COPILOT,bool) 1 == or
						</VISIBILITY_CODE>
					</UseTemplate>						
				</Component>
			</Component>
			<Component ID="Briefcase_Base" Node="Briefcase_01">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>
						(A:PAYLOAD STATION WEIGHT:2, pounds) 0 ==
						(L:C310_TAB_HIDE_COPILOT,bool) 1 == 
						or
						(L:C310_Briefcase)
						and
					</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="Briefcase_Lid" Node="Briefcase_02">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>
						(A:PAYLOAD STATION WEIGHT:2, pounds) 0 ==
						(L:C310_TAB_HIDE_COPILOT,bool) 1 == 
						or
						(L:C310_Briefcase)
						and
					</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
		</Component>			

		<Component ID="Hat">
			<Component ID="Hat_Click">
				<Parameters Type="Default">
					<NODE_ID>CowboyHat_Clickspot</NODE_ID>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'???'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>(L:C310_Hat, bool) if{ 'Click to hide cowboy hat' } els{ 'Click to show cowboy hat' }</TT_DESCRIPTION>
					<TT_VALUE>@Special_Stuff</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Switch_Code">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<LEFT_SINGLE_CODE>
							(L:C310_Hat) ! (&gt;L:C310_Hat)
						</LEFT_SINGLE_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>
							(A:PAYLOAD STATION WEIGHT:4, pounds) 0 ==
							(L:C310_TAB_HIDE_COPILOT,bool) 1 == or
						</VISIBILITY_CODE>
					</UseTemplate>	
				</Component>
			</Component>
			<Component ID="Hat_Object" Node="CowboyHat">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>
						(A:PAYLOAD STATION WEIGHT:4, pounds) 0 ==
						(L:C310_TAB_HIDE_COPILOT,bool) 1 == 
						or
						(L:C310_Hat)
						and						
					</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
		</Component>

		<Component ID="Internal_Junk">

			<Component ID="Internal_Junk_01" Node="Junk_Level_01">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_DIRTLEVEL_01,bool) (L:C310_DIRTLEVEL_02,bool) (L:C310_DIRTLEVEL_03,bool) or or</VISIBILITY_CODE>
				</UseTemplate>
			</Component>

			<Component ID="Internal_Junk_02" Node="Junk_Level_02">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_DIRTLEVEL_02,bool) (L:C310_DIRTLEVEL_03,bool) or</VISIBILITY_CODE>
				</UseTemplate>
			</Component>

			<Component ID="Internal_Junk_03" Node="Junk_Level_03">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_DIRTLEVEL_03,bool)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>

		</Component>

		<Component ID="Moving_Water_Bottle_Code">
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>18</FREQUENCY>
				<UPDATE_CODE>
					(L:C310_BottleRoll) (A:PLANE BANK DEGREES,degrees) 18 / - 0 max 50 min (&gt;L:C310_BottleRoll)
				</UPDATE_CODE>
			</UseTemplate>	
			<UseTemplate Name="ASOBO_GT_Anim_Code">
				<ANIM_NAME>scruffy_bottle_moving_01</ANIM_NAME>
				<ANIM_CODE>
					(L:C310_BottleRoll) 
				</ANIM_CODE>
				<ANIM_LENGTH>50</ANIM_LENGTH>
				<ANIM_LAG>40</ANIM_LAG>
			</UseTemplate>
		</Component>



	<!-- TABLET ##################################### -->

		<Component ID="Tablet_Visibility_Toggle">
			<Parameters Type="Default">
				<NODE_ID>Tablet_Hide</NODE_ID>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Tablet Visibility'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>Push</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>(L:C310_Tablet_Hidden, bool) if{ 'Click to Return Tablet' } els{ 'Click to Stow Tablet in Right Hand Pocket' }</TT_DESCRIPTION>
				<NO_TT_VALUE>True</NO_TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<LEFT_SINGLE_CODE>1 (>L:C310_Toggle_Tablet_Hidden,bool)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
		</Component>

		<Component ID="Tablet_Movement">
			<UseTemplate Name = "ASOBO_GT_Anim_Code">
				<ANIM_NAME>Tablet</ANIM_NAME>
				<ANIM_CODE>
					(L:C310_Tablet_Hidden,bool)
				</ANIM_CODE>
				<ANIM_LENGTH>1</ANIM_LENGTH>
			</UseTemplate>
		</Component>

		<Component ID="Tablet_Base_Visibility" Node="Tablet_Base">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_Tablet_Hidden,bool) !</VISIBILITY_CODE>
			</UseTemplate> 
		</Component>


		<Component ID="Tablet_Button">
			<Parameters Type="Default">
				<NODE_ID>Tablet_Button</NODE_ID>
				<SCREEN_NODE_ID>Tablet_Screen_ON</SCREEN_NODE_ID>				
				<PART_ID>Tablet</PART_ID>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Home Button'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>Push</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>(L:C310_Tablet_Hidden, bool) if{ 'Press to Retrieve Tablet' } els{ 'Press to toggle screen' }</TT_DESCRIPTION>
				<NO_TT_VALUE>True</NO_TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Push_Button">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<LEFT_SINGLE_CODE>
						(L:C310_Tablet_Hidden,bool) if{
							1 (>L:C310_Toggle_Tablet_Hidden,bool)
						} els{
							(L:C310_Tablet_Screen_On) ! (&gt;L:C310_Tablet_Screen_On)
						}
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="#SCREEN_NODE_ID#_VisibilityNode" Node="#SCREEN_NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_Tablet_Screen_On) ! (L:C310_Tablet_Hidden,bool) ! and</VISIBILITY_CODE>
				</UseTemplate>
				<UseTemplate Name="ASOBO_GT_Material_Emissive_Code">
					<EMISSIVE_CODE>
					(E:Time of Day,enum) 3 != if{
						(A:LIGHT POTENTIOMETER:5, Percent) 100 / 0.05 max
					} els{
						(A:LIGHT POTENTIOMETER:5, Percent) 100 / 0.05 max 3.5 /
					}
					</EMISSIVE_CODE>
				</UseTemplate>
			</Component>
		</Component>

	<!-- CIRCUIT BREAKERS ########################### -->

		<!-- In order by physical location, top left to bottom right, like a book -->

		<Component ID="Monitor_Lvars">
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>18</FREQUENCY>
				<UPDATE_CODE>

					(A:WINDSHIELD DEICE SWITCH,bool) (>L:C310_SHARD_WINDSH_SW,bool)
					(A:PROP DEICE SWITCH:1,bool) (>L:C310_SHARD_PROP_DEICE_SW,bool)
					(A:STRUCTURAL DEICE SWITCH,bool) (>L:C310_SHARD_DEICE_SWITCH,bool)
					(A:STRUCTURAL ICE PCT,percent) (>L:C310_SHARD_STRUCT_ICE_PCT,percent)

					(A:FUEL TANK LEFT MAIN QUANTITY,gallons) (>L:C310_FUEL_MAIN_1,gallons)
					(A:FUEL TANK RIGHT MAIN QUANTITY,gallons) (>L:C310_FUEL_MAIN_2,gallons)
					(A:FUEL TANK EXTERNAL1 QUANTITY,gallons) (>L:C310_FUEL_AUX_1,gallons)
					(A:FUEL TANK EXTERNAL2 QUANTITY,gallons) (>L:C310_FUEL_AUX_2,gallons)

					(A:PAYLOAD STATION WEIGHT:1, Pounds) (>L:C310_PAYLOAD_1,pounds)
					(A:PAYLOAD STATION WEIGHT:2, Pounds) (>L:C310_PAYLOAD_2,pounds)
					(A:PAYLOAD STATION WEIGHT:3, Pounds) (>L:C310_PAYLOAD_3,pounds)
					(A:PAYLOAD STATION WEIGHT:4, Pounds) (>L:C310_PAYLOAD_4,pounds)
					(A:PAYLOAD STATION WEIGHT:5, Pounds) (>L:C310_PAYLOAD_5,pounds)
					(A:PAYLOAD STATION WEIGHT:6, Pounds) (>L:C310_PAYLOAD_6,pounds)
					(A:PAYLOAD STATION WEIGHT:7, Pounds) (>L:C310_PAYLOAD_7,pounds)
					(A:PAYLOAD STATION WEIGHT:8, Pounds) (>L:C310_PAYLOAD_8,pounds)
					(A:PAYLOAD STATION WEIGHT:9, Pounds) (>L:C310_PAYLOAD_9,pounds)
					(A:PAYLOAD STATION WEIGHT:10, Pounds) (>L:C310_PAYLOAD_10,pounds)
					(A:PAYLOAD STATION WEIGHT:11, Pounds) (>L:C310_PAYLOAD_11,pounds)

					(A:AIRSPEED TRUE,knots) (>L:C310_AIRSPEED_TRUE,knots)

					(L:C310_FD_SPOILERS_SET,position 16k) (>K:SPOILERS_SET)

					(A:NAV1 OBS,degrees) (>L:C310_NAV_OBS_1,degrees)
					(A:NAV2 OBS,degrees) (>L:C310_NAV_OBS_2,degrees)

					<!--
					
					(A:AVIONICS MASTER SWITCH,bool) (>L:C310_NAV_AVIONICS_MASTER_ SWITCH,bool)
					(L:TDSGTNXI_INSTALLED, bool) (>L:C310_NAV_TDSGTNXI_INSTALLED,bool)
					(A:GPS DRIVES NAV1, bool) (>L:310_NAV_GPS_DRIVES_NAV1,bool)
					(L:C310_SW_NAV_SOURCE,bool) (>L:C310_NAV_SOURCE,bool)
					(A:NAV HAS GLIDE SLOPE:1,bool) (>L:C310_NAV_HAS_GLIDE_SLOPE_1,bool)
					(A:NAV HAS GLIDE SLOPE:2,bool) (>L:C310_NAV_HAS_GLIDE_SLOPE_2,bool)
					(A:NAV GSI:1, Number) (>L:C310_NAV_GSI_1, Number)
					(A:NAV GSI:2, Number) (>L:C310_NAV_GSI_2, Number)
					(L:PMS50_GTN750_RUNNING,bool) (>L:C310_NAV_PMS50_GTN750_RUNNING,bool)
					(L:PMS50_GTN750_HIDDEN, bool) (>L:C310_NAV_PMS50_GTN750_HIDDEN,bool)
					(L:GTN750_HSI_GSI_NEEDLE,number) (>L:C310_NAV_GTN750_HSI_GSI_NEEDLE,number)
					(A:HSI GSI NEEDLE VALID) (>L:C310_NAV_HSI_GSI_NEEDLE_VALID,bool)
					(L:C310_GSI_NAV_NEEDLE,number) (>L:C310_NAV_GSI_NAV_NEEDLE,number)
					
					(A:ELECTRICAL BATTERY ESTIMATED CAPACITY PCT,percent) (>L:310_BATTERY_ESTIMATED_CAPACITY_PCT,percent)
					(A:ELECTRICAL BATTERY LOAD,amps) (>L:310_BATTERY_LOAD,amps)
					(A:ELECTRICAL BATTERY VOLTAGE,volts) (>L:310_BATTERY_VOLTAGE,volts)

					(A:HSI CDI NEEDLE VALID, Bool) (>L:CDI NEEDLE VALID, Bool)
					(A:AILERON TRIM PCT,percent over 100) (>L:C310_TRIM_AILERON_PCT,percent over 100)
					(A:ELEVATOR TRIM PCT,percent over 100) (>L:C310_TRIM_ELEVATOR_PCT,percent over 100)
					(A:RUDDER TRIM PCT,percent over 100) (>L:C310_TRIM_RUDDER_PCT,percent over 100)
					(A:ELEVATOR TRIM NEUTRAL,radians) (>L:C310_TRIM_ELEV_NEUTRAL,radians)
					(A:ELEVATOR TRIM INDICATOR,position 16k) (>L:C310_TRIM_ELEV_POS,position 16k)
					(A:ELEVATOR DEFLECTION PCT, Percent)
					(A:FLAPS HANDLE PERCENT,percent) (>L:C310_FLAPS_HANDLE_PCT,number)
					(A:NAV1 OBS,degrees) (>L:NAV1_OBS,degrees)
					(A:ENG COMBUSTION:1,bool) (>L:C310_ENG_COMBUST_1,bool)
					(A:ENG COMBUSTION:2,bool) (>L:C310_ENG_COMBUST_2,bool)
					(A:GROUND VELOCITY,knots) (>L:C310_GROUND_SPEED,knots)

					3 (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS BREAKER PULLED:3, Bool) (>L:C310_BUS_3_BREAKER,bool)
					4 (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS BREAKER PULLED:4, Bool) (>L:C310_BUS_4_BREAKER,bool)
					3 (&gt;A:BUS LOOKUP INDEX, Number) (A:ALTERNATOR BREAKER PULLED:1, Bool) (>L:C310_BUS_ALT_1_BREAKER,bool)
					4 (&gt;A:BUS LOOKUP INDEX, Number) (A:ALTERNATOR BREAKER PULLED:2, Bool) (>L:C310_BUS_ALT_2_BREAKER,bool)
					3 (&gt;A:BUS LOOKUP INDEX, Number) (A:ALTERNATOR CONNECTION ON:1, Bool) (>L:C310_BUS_ALT_1_CON,bool)
					4 (&gt;A:BUS LOOKUP INDEX, Number) (A:ALTERNATOR CONNECTION ON:2, Bool) (>L:C310_BUS_ALT_2_CON,bool)
					3 (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) (>L:C310_BUS_3_CON,bool)
					4 (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) (>L:C310_BUS_4_CON,bool)

					(A:WINDSHIELD DEICE SWITCH,bool) (>L:C310_ICE_WINDSH_SW,bool)
					(A:PROP DEICE SWITCH:1,bool) (>L:C310_ICE_PROP_DEICE_SW,bool)
					(A:STRUCTURAL DEICE SWITCH,bool) (>L:C310_ICE_DEICE_SW,bool)
					(A:STRUCTURAL ICE PCT,percent) (>L:C310_ICE_STRUCT_ICE_PCT,percent)
					(A:PITOT ICE PCT,percent) (>L:C310_ICE_PITOT_ICE_PCT,percent)
					(A:NAV GSI:1, Number) (>L:C310_GSI_NAV_GSI,number)
					(L:TDSGTNXI_GlidePathValueActive, bool) (>L:C310_GSI_TDS_ACTIVE,bool)	
					(L:TDSGTNXI_GlidePathValueAngle, number) (>L:C310_GSI_TDS_GSI_ANGLE,number) 
					(L:TDSGTNXI_GlidePathValueAngle, number) 127 * 127 + (>L:C310_GSI_TDS_GSI_NEEDLE,number)
					(A:GENERAL ENG PROPELLER LEVER POSITION:1,position 16k) (>L:C310_PROP_GENERAL_ENG_PROPELLER_LEVER_POSITION,position 16k)
					(A:PROP RPM:1,rpm) (>L:C310_PROP_RPM_1,rpm)
					(A:PROP FEATHERING INHIBIT:1,bool) (>L:C310_PROP_FEATHER_INHIBIT,bool)
					(A:PROP FEATHER SWITCH:1,bool) (>L:C310_PROP_FEATHER_SWITCH_1,bool)
					(A:PROP FEATHERED:1,bool) (>L:C310_PROP_FEATHERED_1,bool)
					(A:PROP FEATHER SWITCH:2,bool) (>L:C310_PROP_FEATHER_SWITCH_2,bool)
					(A:PROP FEATHERED:2,bool) (>L:C310_PROP_FEATHERED_2,bool)

					(A:PROP BETA MIN,radians) (>L:C310_PROP_BETA_MIN,radians)
					(A:PROP BETA MAX,radians) (>L:C310_PROP_BETA_MAX,radians)
					(A:PROP BETA:1,radians) (>L:C310_PROP_BETA_1,radians)

					(A:AILERON TRIM PCT,percent over 100) (>L:C310_TRIM_AILERON_PCT,percent over 100)
					(A:ELEVATOR TRIM PCT,percent over 100) (>L:C310_TRIM_ELEVATOR_PCT,percent over 100)
					(A:RUDDER TRIM PCT,percent over 100) (>L:C310_TRIM_RUDDER_PCT,percent over 100)
					(A:ELEVATOR TRIM NEUTRAL,radians) (>L:C310_TRIM_ELEV_NEUTRAL,radians)
					(A:ELEVATOR TRIM INDICATOR,position 16k) (>L:C310_TRIM_ELEV_POS,position 16k)
					(A:ELEVATOR DEFLECTION PCT, Percent)
					(A:RUDDER DEFLECTION PCT, Percent)
					(A:INTERACTIVE POINT OPEN:0,number) (>L:C310_Point_0,number)
					(A:INTERACTIVE POINT OPEN:1,number) (>L:C310_Point_1,number)
					(A:INTERACTIVE POINT OPEN:2,number) (>L:C310_Point_2,number)
					(A:LEFT WHEEL RPM,rpm) (>L:C310_WHEEL_RPM_1,rpm)
					(A:RIGHT WHEEL RPM,rpm) (>L:C310_WHEEL_RPM_2,rpm)
					(A:GENERAL ENG THROTTLE LEVER POSITION:1,position 16k) (>L:C310_THR_LEVER_1,position 16k)
					(A:GENERAL ENG THROTTLE LEVER POSITION:1,percent) (>L:C310_THR_LEVER_1_PCT,percent)
					(A:NAV HAS NAV:1,bool) (>L:C310_DME_1_HAS_NAV,bool)
					(A:NAV HAS DME:1,bool) (>L:C310_DME_1_HAS_DME,bool)
					(A:NAV DME:1,nautical miles) (>L:C310_DME_1_NM,number)
					(A:NAV DMESPEED:1,knots) (>L:C310_DME_1_SPEED,number)
					(A:NAV HAS NAV:2,bool) (>L:C310_DME_2_HAS_NAV,bool)
					(A:NAV HAS DME:2,bool) (>L:C310_DME_2_HAS_DME,bool)
					(A:NAV DME:2,nautical miles) (>L:C310_DME_2_NM,number)
					(A:NAV DMESPEED:2,knots) (>L:C310_DME_2_SPEED,number)

					(A:TRAILING EDGE FLAPS LEFT ANGLE,degrees) (>L:C310_FLAPS_DEGREES,number)
					(A:GENERAL ENG PROPELLER LEVER POSITION:1,position 16k) (>L:C310_PROP_GENERAL_ENG_PROPELLER_LEVER_POSITION,position 16k)
					(A:PROP MAX RPM PERCENT:1, percent) (>L:C310_PROP_MAX_RPM_PERCENT_1,percent)
					(A:PROP RPM:1,rpm) (>L:C310_PROP_RPM_1,rpm)
					(A:PROP BETA MIN,radians) (>L:C310_PROP_BETA_MIN,radians)
					(A:PROP BETA MAX,radians) (>L:C310_PROP_BETA_MAX,radians)
					(A:PROP BETA:1,radians) (>L:C310_PROP_BETA_1,radians)
					(A:PROP FEATHERING INHIBIT:1,bool) (>L:C310_PROP_FEATHER_INHIBIT,bool)
					(A:PROP FEATHER SWITCH:1,bool) (>L:C310_PROP_FEATHER_SWITCH_1,bool)
					(A:PROP FEATHERED:1,bool) (>L:C310_PROP_FEATHERED_1,bool)
					(A:PROP FEATHER SWITCH:2,bool) (>L:C310_PROP_FEATHER_SWITCH_2,bool)
					(A:PROP FEATHERED:2,bool) (>L:C310_PROP_FEATHERED_2,bool)

					(A:VERTICAL SPEED,feet per minute) (>L:C310_FD_VS_FPM,number)
					(A:VERTICAL SPEED,feet per minute) 300 &gt; if{
						(A:RECIP ENG MANIFOLD PRESSURE:1, InHG) 24.5 - 2.3 * (>L:C310_FD_MULT,number)
						(L:C310_FD_MULT,number) 0 &gt; if{
							(A:VERTICAL SPEED,feet per minute) (L:C310_FD_MULT,number) * (>L:C310_FD_MULT2,number)
							(L:C310_FD_MULT2,number) 11999 &lt; if{
								(L:C310_FD_MULT2,number) (>K:SPOILERS_SET)
								(L:C310_FD_MULT2,number) (>L:C310_FD_SPOILERS_SET,number)
							}
						} els{
							0 (>K:SPOILERS_SET)
							0 (>L:C310_FD_SPOILERS_SET,number)
						}
					} els{
						0 (>K:SPOILERS_SET)
						0 (>L:C310_FD_SPOILERS_SET,number)
					}
					-->

				</UPDATE_CODE>
			</UseTemplate>
		</Component>

		<!-- CB_SYNC insures, when the sync flag is set, that any CB whose Lvar indicates that it's pulled, is pulled -->
		<!-- This only applies to CBs which control circuits via the MSFS electrical system -->

		<Component ID="CB_SYNC">
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>3</FREQUENCY>
				<UPDATE_CODE>
				(L:C310_CB_SYNC_FLAG,bool) 1 == if{
					0 (>L:C310_CB_SYNC_FLAG,bool)
					(L:C310_CB_CABIN_LIGHTS,bool) 1 == if{
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:23, Bool) 0 == if{
							23 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_FLT_INST_LIGHTS,bool) 1 == if{
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:19, Bool) 0 == if{
							19 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_ENG_SW_LIGHTS,bool) 1 == if{
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:20, Bool) 0 == if{
							20 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_PITOT_HEAT,bool) 1 == if{
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:11, Bool) 0 == if{
							11 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_FLAP_MOTOR,bool) 1 == if{
						2 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:8, Bool) 0 == if{
							8 2 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_START,bool) 1 == if{
						2 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:3, Bool) 0 == if{
							3 2 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
							4 2 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_TURNBANK,bool) 1 == if{
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:44, Bool) 0 == if{
							44 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_GEAR_MOTOR,bool) 1 == if{
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:13, Bool) 0 == if{
							13 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_GEAR_WARN,bool) 1 == if{
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:41, Bool) 0 == if{
							41 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_COM1,bool) 1 == if{
						6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:31, Bool) 0 == if{
							31 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_COM2,bool) 1 == if{
						6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:33, Bool) 0 == if{
							33 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_GPS,bool) 1 == if{
						6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:26, Bool) 0 == if{
							26 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
							27 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_NAV1,bool) 1 == if{
						6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:30, Bool) 0 == if{
							30 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_NAV2,bool) 1 == if{
						6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:32, Bool) 0 == if{
							32 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_ADF,bool) 1 == if{
						6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:35, Bool) 0 == if{
							35 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_XPDR_1,bool) 1 == if{
						(A:BREAKER XPNDR,bool) 0 == if{
							1 (>K:BREAKER_XPNDR_TOGGLE)
						}
					}
					(L:C310_CB_GYRO,bool) 1 == if{
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:42, Bool) 0 == if{
							42 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						}
					}
					(L:C310_CB_COMP,bool) 1 == if{
						(A:BREAKER AUTOPILOT,bool) 0 == if{
							1 (>K:BREAKER_AUTOPILOT_TOGGLE)
						}
					}
				}
				</UPDATE_CODE>
			</UseTemplate>	
		</Component>

		<Component ID="CB_ALTERNATOR_L">
			<Parameters Type="Default">
				<NODE_ID>CB_ALTERNATOR_L</NODE_ID>
				<ANIM_NAME>CB_ALTERNATOR_L</ANIM_NAME>
				<PART_ID>CB_ALTERNATOR_L</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Alternator Left'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Left Alternator Circuit Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_ALTERNATOR_L, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>3 (&gt;A:BUS LOOKUP INDEX, Number) (A:ALTERNATOR BREAKER PULLED:1, bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(&gt;K:ELECTRICAL_ALTERNATOR_BREAKER_TOGGLE)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<!-- The right alternator breaker is currently INOP in MSFS -->
		<!-- We are using the Lvar below as a placeholder -->
		<!-- When 2 (&gt;K:ELECTRICAL_ALTERNATOR_BREAKER_TOGGLE) works we will change the code -->

		<Component ID="CB_ALTERNATOR_R">
			<Parameters Type="Default">
				<NODE_ID>CB_ALTERNATOR_R</NODE_ID>
				<ANIM_NAME>CB_ALTERNATOR_R</ANIM_NAME>
				<PART_ID>CB_ALTERNATOR_R</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Alternator Right'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Right Alternator Circuit Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_ALTERNATOR_R, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_ALTERNATOR_R, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_ALTERNATOR_R, Bool) ! (>L:C310_CB_ALTERNATOR_R, Bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="SW_COVER_EMG_ALT_FLD">
			<Parameters Type="Default">
				<NODE_ID>SW_COVER_EMG_ALT_FLD</NODE_ID>
				<ANIM_NAME>SW_COVER_EMG_ALT_FLD</ANIM_NAME>
				<PART_ID>SW_COVER_EMG_ALT_FLD</PART_ID>
				<WWISE_EVENT_1>switch_guard_open</WWISE_EVENT_1>
				<WWISE_EVENT_2>switch_guard_close</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Emergency Alternator Field Cover'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Emergency Alternator Field Cover'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_SW_COVER_EMG_ALT_FLD,bool) 0 == if{ 'Off' } els{ 'On' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Update Once="True">
					0 (>L:C310_SW_COVER_EMG_ALT_FLD,bool) 	
				</Update>
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_SW_COVER_EMG_ALT_FLD,enum) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_SW_COVER_EMG_ALT_FLD,bool) ! (>L:C310_SW_COVER_EMG_ALT_FLD,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="SW_COVER_EMG_AVN_PWR">
			<Parameters Type="Default">
				<NODE_ID>SW_COVER_EMG_AVN_PWR</NODE_ID>
				<ANIM_NAME>SW_COVER_EMG_AVN_PWR</ANIM_NAME>
				<PART_ID>SW_COVER_EMG_AVN_PWR</PART_ID>
				<WWISE_EVENT_1>switch_guard_open</WWISE_EVENT_1>
				<WWISE_EVENT_2>switch_guard_close</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Emergency Avionics Power Cover'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Emergency Avionics Power Cover'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_SW_COVER_EMG_AVN_PWR,bool) 0 == if{ 'Off' } els{ 'On' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Update Once="True">
					0 (>L:C310_SW_COVER_EMG_AVN_PWR,bool) 	
				</Update>
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_SW_COVER_EMG_AVN_PWR,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_SW_COVER_EMG_AVN_PWR,bool) ! (>L:C310_SW_COVER_EMG_AVN_PWR,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="SW_EMG_ALT_FLD">
			<Parameters Type="Default">
				<NODE_ID>SW_EMG_ALT_FLD</NODE_ID>
				<ANIM_NAME>SW_EMG_ALT_FLD</ANIM_NAME>
				<PART_ID>SW_EMG_ALT_FLD</PART_ID>
				<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
				<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Emergency Alternator Field Switch'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Emergency Alternator Field Switch'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_SW_EMG_ALT_FLD,bool) 0 == if{ 'Closed' } els{ 'Open' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Update Once="True">
					0 (>L:C310_SW_EMG_ALT_FLD,bool) 	
				</Update>
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_SW_EMG_ALT_FLD,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_SW_EMG_ALT_FLD,bool) ! (>L:C310_SW_EMG_ALT_FLD,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="SW_EMG_AVN_PWR">
			<Parameters Type="Default">
				<NODE_ID>SW_EMG_AVN_PWR</NODE_ID>
				<ANIM_NAME>SW_EMG_AVN_PWR</ANIM_NAME>
				<PART_ID>SW_EMG_AVN_PWR</PART_ID>
				<WWISE_EVENT_1>switch_toggle_metal_large_2pos_up</WWISE_EVENT_1>
				<WWISE_EVENT_2>switch_toggle_metal_large_2pos_down</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Emergency Avionics Power Switch'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>MOVE_Y</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Emergency Avionics Power Switch'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_SW_EMG_AVN_PWR,bool) 0 == if{ 'Closed' } els{ 'Open' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<Update Once="True">
					0 (>L:C310_SW_EMG_AVN_PWR,bool) 	
				</Update>
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_SW_EMG_AVN_PWR,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_SW_EMG_AVN_PWR,bool) ! (>L:C310_SW_EMG_AVN_PWR,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_FUEL_LOW_L">
			<Parameters Type="Default">
				<NODE_ID>CB_FUEL_LOW_L</NODE_ID>
				<ANIM_NAME>CB_FUEL_LOW_L</ANIM_NAME>
				<PART_ID>CB_FUEL_LOW_L</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Fuel Warning Lamp Left'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Left Fuel Warning Lamp Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_FUEL_LOW_L, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_FUEL_LOW_L,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_FUEL_LOW_L,bool) ! (>L:C310_CB_FUEL_LOW_L,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_FUEL_LOW_R">
			<Parameters Type="Default">
				<NODE_ID>CB_FUEL_LOW_R</NODE_ID>
				<ANIM_NAME>CB_FUEL_LOW_R</ANIM_NAME>
				<PART_ID>CB_FUEL_LOW_R</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Fuel Warning Lamp Right'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Right Fuel Warning Lamp Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_FUEL_LOW_R, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_FUEL_LOW_R,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_FUEL_LOW_R,bool) ! (>L:C310_CB_FUEL_LOW_R,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_FUEL_GAUGE_L">
			<Parameters Type="Default">
				<NODE_ID>CB_FUEL_GAUGE_L</NODE_ID>
				<ANIM_NAME>CB_FUEL_GAUGE_L</ANIM_NAME>
				<PART_ID>CB_FUEL_GAUGE_L</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Fuel Gauge Left'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Left Fuel Gauge Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_FUEL_GAUGE_L,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_FUEL_GAUGE_L,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_FUEL_GAUGE_L,bool) ! (>L:C310_CB_FUEL_GAUGE_L,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_FUEL_GAUGE_R">
			<Parameters Type="Default">
				<NODE_ID>CB_FUEL_GAUGE_R</NODE_ID>
				<ANIM_NAME>CB_FUEL_GAUGE_R</ANIM_NAME>
				<PART_ID>CB_FUEL_GAUGE_R</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Fuel Gauge Right'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Right Fuel Gauge Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_FUEL_GAUGE_R,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_FUEL_GAUGE_R,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_FUEL_GAUGE_R,bool) ! (>L:C310_CB_FUEL_GAUGE_R,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_ENG_GAUGE_L">
			<Parameters Type="Default">
				<NODE_ID>CB_ENG_GAUGE_L</NODE_ID>
				<ANIM_NAME>CB_ENG_GAUGE_L</ANIM_NAME>
				<PART_ID>CB_ENG_GAUGE_L</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Engine Gauges Left'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Left Engine Gauges Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_ENG_GAUGE_L,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_ENG_GAUGE_L,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_ENG_GAUGE_L,bool) ! (>L:C310_CB_ENG_GAUGE_L,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_ENG_GAUGE_R">
			<Parameters Type="Default">
				<NODE_ID>CB_ENG_GAUGE_R</NODE_ID>
				<ANIM_NAME>CB_ENG_GAUGE_R</ANIM_NAME>
				<PART_ID>CB_ENG_GAUGE_R</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Eng Gauges Right'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Right Engine Gauges Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_ENG_GAUGE_R,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_ENG_GAUGE_R,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_ENG_GAUGE_R,bool) ! (>L:C310_CB_ENG_GAUGE_R,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_AUX_PUMP_L">
			<Parameters Type="Default">
				<NODE_ID>CB_AUX_PUMP_L</NODE_ID>
				<ANIM_NAME>CB_AUX_PUMP_L</ANIM_NAME>
				<PART_ID>CB_AUX_PUMP_L</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Aux Pump Left'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Left Aux Fuel Pump Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_AUX_PUMP_L,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_AUX_PUMP_L,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_AUX_PUMP_L,bool) ! (>L:C310_CB_AUX_PUMP_L,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_AUX_PUMP_R">
			<Parameters Type="Default">
				<NODE_ID>CB_AUX_PUMP_R</NODE_ID>
				<ANIM_NAME>CB_AUX_PUMP_R</ANIM_NAME>
				<PART_ID>CB_AUX_PUMP_R</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Aux Pump Right'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Right Aux Fuel Pump Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_AUX_PUMP_R,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_AUX_PUMP_R,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_AUX_PUMP_R,bool) ! (>L:C310_CB_AUX_PUMP_R,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_LAND_LIGHT_L">
			<Parameters Type="Default">
				<NODE_ID>CB_LAND_LIGHT_L</NODE_ID>
				<ANIM_NAME>CB_LAND_LIGHT_L</ANIM_NAME>
				<PART_ID>CB_LAND_LIGHT_L</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Landing Light Left'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Left Landing Light Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_LAND_LIGHT_L,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_LAND_LIGHT_L,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_LAND_LIGHT_L,bool) ! (>L:C310_CB_LAND_LIGHT_L,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_LAND_LIGHT_R">
			<Parameters Type="Default">
				<NODE_ID>CB_LAND_LIGHT_R</NODE_ID>
				<ANIM_NAME>CB_LAND_LIGHT_R</ANIM_NAME>
				<PART_ID>CB_LAND_LIGHT_R</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Landing Light Right'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Right Landing Light Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_LAND_LIGHT_R,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_LAND_LIGHT_R,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_LAND_LIGHT_R,bool) ! (>L:C310_CB_LAND_LIGHT_R,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_CABIN_LIGHTS">
			<Parameters Type="Default">
				<NODE_ID>CB_CABIN_LIGHTS</NODE_ID>
				<ANIM_NAME>CB_CABIN_LIGHTS</ANIM_NAME>
				<PART_ID>CB_CABIN_LIGHTS</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Cabin Lights'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Cabin Lights'</TT_DESCRIPTION>
				<TT_VALUE></TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:23, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						23 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:23, Bool) (>L:C310_CB_CABIN_LIGHTS,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_RADIO_LIGHTS">
			<Parameters Type="Default">
				<NODE_ID>CB_RADIO_LIGHTS</NODE_ID>
				<ANIM_NAME>CB_RADIO_LIGHTS</ANIM_NAME>
				<PART_ID>CB_RADIO_LIGHTS</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Radio Lights'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Radio Lights'</TT_DESCRIPTION>
				<TT_VALUE></TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_RADIO_LIGHTS,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_RADIO_LIGHTS,bool) ! (>L:C310_CB_RADIO_LIGHTS,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_FLT_INST_LIGHTS">
			<Parameters Type="Default">
				<NODE_ID>CB_FLT_INST_LIGHTS</NODE_ID>
				<ANIM_NAME>CB_FLT_INST_LIGHTS</ANIM_NAME>
				<PART_ID>CB_FLT_INST_LIGHTS</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Flt Inst Lights'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Flt Inst Lights'</TT_DESCRIPTION>
				<TT_VALUE></TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:19, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						19 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:19, Bool) (>L:C310_CB_FLT_INST_LIGHTS,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_SIDE_PANEL_LIGHTS">
			<Parameters Type="Default">
				<NODE_ID>CB_ENG_SW_LIGHTS</NODE_ID>
				<ANIM_NAME>CB_ENG_SW_LIGHTS</ANIM_NAME>
				<PART_ID>CB_ENG_SW_LIGHTS</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Switch Pnl Lights'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Switch Pnl Lights'</TT_DESCRIPTION>
				<TT_VALUE></TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:20, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						20 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:20, Bool) (>L:C310_CB_ENG_SW_LIGHTS,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_SURFACE_DEICE">
			<Parameters Type="Default">
				<NODE_ID>CB_SURFACE_DEICE</NODE_ID>
				<ANIM_NAME>CB_SURFACE_DEICE</ANIM_NAME>
				<PART_ID>CB_SURFACE_DEICE</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Surface Deice'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Surface Deice Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_SURFACE_DEICE,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_SURFACE_DEICE,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_SURFACE_DEICE,bool) ! (>L:C310_CB_SURFACE_DEICE,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_PITOT_HEAT">
			<Parameters Type="Default">
				<NODE_ID>CB_PITOT_HEAT</NODE_ID>
				<ANIM_NAME>CB_PITOT_HEAT</ANIM_NAME>
				<PART_ID>CB_PITOT_HEAT</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Pitot Heat'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Pitot Heat Breaker'</TT_DESCRIPTION>
				<TT_VALUE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:11, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:11, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:11, Bool) (>L:C310_CB_PITOT_HEAT,bool)
						11 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_CABIN_HEAT">
			<Parameters Type="Default">
				<NODE_ID>CB_CABIN_HEAT</NODE_ID>
				<ANIM_NAME>CB_CABIN_HEAT</ANIM_NAME>
				<PART_ID>CB_CABIN_HEAT</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Cabin Heat'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Cabin Heat Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_CABIN_HEAT,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_CABIN_HEAT,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_CABIN_HEAT,bool) ! (>L:C310_CB_CABIN_HEAT,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_STALL_HORN">
			<Parameters Type="Default">
				<NODE_ID>CB_STALL_HORN</NODE_ID>
				<ANIM_NAME>CB_STALL_HORN</ANIM_NAME>
				<PART_ID>CB_STALL_HORN</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Stall Horn'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Stall Horn Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_STALL_HORN,bool) if{ 'Closed' } els{ 'Open' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_STALL_HORN,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_STALL_HORN,bool) ! (>L:C310_CB_STALL_HORN,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_FUEL_FLOW_L">
			<Parameters Type="Default">
				<NODE_ID>CB_FUEL_FLOW_L</NODE_ID>
				<ANIM_NAME>CB_FUEL_FLOW_L</ANIM_NAME>
				<PART_ID>CB_FUEL_FLOW_L</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Fuel Flow Gauge Left'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Left Fuel Flow Gauge Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_FUEL_FLOW_L, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_FUEL_FLOW_L,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_FUEL_FLOW_L,bool) ! (>L:C310_CB_FUEL_FLOW_L,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_FUEL_FLOW_R">
			<Parameters Type="Default">
				<NODE_ID>CB_FUEL_FLOW_R</NODE_ID>
				<ANIM_NAME>CB_FUEL_FLOW_R</ANIM_NAME>
				<PART_ID>CB_FUEL_FLOW_R</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Fuel Flow Gauge Right'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Right Fuel Flow Gauge Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_FUEL_FLOW_R, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_FUEL_FLOW_R,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_FUEL_FLOW_R,bool) ! (>L:C310_CB_FUEL_FLOW_R,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_FLAP_MOTOR">
			<Parameters Type="Default">
				<NODE_ID>CB_FLAP_MOTOR</NODE_ID>
				<ANIM_NAME>CB_FLAP_MOTOR</ANIM_NAME>
				<PART_ID>CB_FLAP_MOTOR</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Flap Motor'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Flap Motor Breaker'</TT_DESCRIPTION>
				<TT_VALUE>2 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:8, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>2 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:8, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						2 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:8, Bool) (>L:C310_CB_FLAP_MOTOR,bool)
						8 2 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_START">
			<Parameters Type="Default">
				<NODE_ID>CB_START</NODE_ID>
				<ANIM_NAME>CB_START</ANIM_NAME>
				<PART_ID>CB_START</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Starters'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Starters Breaker'</TT_DESCRIPTION>
				<TT_VALUE>2 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:3, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>2 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:3, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						2 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:3, Bool) (>L:C310_CB_START,bool)
						3 2 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						4 2 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_ELEV_TRIM">
			<Parameters Type="Default">
				<NODE_ID>CB_ELEV_TRIM</NODE_ID>
				<ANIM_NAME>CB_ELEV_TRIM</ANIM_NAME>
				<PART_ID>CB_ELEV_TRIM</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Elev Trim'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Elevator Trim Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_ELEV_TRIM,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_ELEV_TRIM,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_ELEV_TRIM,bool) ! (>L:C310_CB_ELEV_TRIM,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_TURNBANK">
			<Parameters Type="Default">
				<NODE_ID>CB_AILERON_TRIM</NODE_ID>
				<ANIM_NAME>CB_AILERON_TRIM</ANIM_NAME>
				<PART_ID>CB_AILERON_TRIM</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Turn/Bank Gauge'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Turn/Bank Gauge Breaker'</TT_DESCRIPTION>
				<TT_VALUE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:44, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:44, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						44 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:44, Bool) (>L:C310_CB_TURNBANK,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_GEAR_MOTOR">
			<Parameters Type="Default">
				<NODE_ID>CB_GEAR_HORN_L</NODE_ID>
				<ANIM_NAME>CB_GEAR_HORN_L</ANIM_NAME>
				<PART_ID>CB_GEAR_HORN_L</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Ldg Gear Motor'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Landing Gear Motor Breaker'</TT_DESCRIPTION>
				<TT_VALUE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:13, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:13, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						13 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:13, Bool) (>L:C310_CB_GEAR_MOTOR,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_GEAR_WARN">
			<Parameters Type="Default">
				<NODE_ID>CB_GEAR_HORN_R</NODE_ID>
				<ANIM_NAME>CB_GEAR_HORN_R</ANIM_NAME>
				<PART_ID>CB_GEAR_HORN_R</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Ldg Gear Warning'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Landing Gear Warning Breaker'</TT_DESCRIPTION>
				<TT_VALUE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:41, Bool) if{ 'Closed' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:41, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						41 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:41, Bool) (>L:C310_CB_GEAR_WARN,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_CIGAR">
			<Parameters Type="Default">
				<NODE_ID>CB_CIGAR</NODE_ID>
				<ANIM_NAME>CB_CIGAR</ANIM_NAME>
				<PART_ID>CB_CIGAR</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Cigar Lighter'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Cigar Lighter Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_CIGAR,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_CIGAR,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_CIGAR,bool) ! (>L:C310_CB_CIGAR,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_CLOCK">
			<Parameters Type="Default">
				<NODE_ID>CB_CLOCK</NODE_ID>
				<ANIM_NAME>CB_CLOCK</ANIM_NAME>
				<PART_ID>CB_CLOCK</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Clock'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Clock Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_CLOCK,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_CLOCK,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_CLOCK,bool) ! (>L:C310_CB_CLOCK,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_COM1">
			<Parameters Type="Default">
				<NODE_ID>CB_COM1</NODE_ID>
				<ANIM_NAME>CB_COM1</ANIM_NAME>
				<PART_ID>CB_COM1</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Com1'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Com1 Breaker'</TT_DESCRIPTION>
				<TT_VALUE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:31, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:31, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						31 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:31, Bool) (>L:C310_CB_COM1,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_COM2">
			<Parameters Type="Default">
				<NODE_ID>CB_COM2</NODE_ID>
				<ANIM_NAME>CB_COM2</ANIM_NAME>
				<PART_ID>CB_COM2</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Com2'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Com2 Breaker'</TT_DESCRIPTION>
				<TT_VALUE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:33, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:33, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						33 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_GPS">
			<Parameters Type="Default">
				<NODE_ID>CB_COM3</NODE_ID>
				<ANIM_NAME>CB_COM3</ANIM_NAME>
				<PART_ID>CB_COM3</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'GPS'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'GPS Breaker'</TT_DESCRIPTION>
				<TT_VALUE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:26, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:26, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:26, Bool) (>L:C310_CB_GPS,bool)
						26 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						27 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_NAV1">
			<Parameters Type="Default">
				<NODE_ID>CB_NAV1</NODE_ID>
				<ANIM_NAME>CB_NAV1</ANIM_NAME>
				<PART_ID>CB_NAV1</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'NAV1'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'NAV1 Breaker'</TT_DESCRIPTION>
				<TT_VALUE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:30, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:30, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						30 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:30, Bool) (>L:C310_CB_NAV1,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_NAV2">
			<Parameters Type="Default">
				<NODE_ID>CB_NAV2</NODE_ID>
				<ANIM_NAME>CB_NAV2</ANIM_NAME>
				<PART_ID>CB_NAV2</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'NAV2'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'NAV2'</TT_DESCRIPTION>
				<TT_VALUE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:32, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:32, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						32 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:32, Bool) (>L:C310_CB_NAV2,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_ADF">
			<Parameters Type="Default">
				<NODE_ID>CB_ADF</NODE_ID>
				<ANIM_NAME>CB_ADF</ANIM_NAME>
				<PART_ID>CB_ADF</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'ADF'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'ADF Breaker'</TT_DESCRIPTION>
				<TT_VALUE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:35, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:35, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						35 6 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						6 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:35, Bool) (>L:C310_CB_ADF,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_TIMER">
			<Parameters Type="Default">
				<NODE_ID>CB_TIMER</NODE_ID>
				<ANIM_NAME>CB_TIMER</ANIM_NAME>
				<PART_ID>CB_TIMER</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Timer'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Timer Alarm Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_TIMER,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_TIMER,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_TIMER,bool) ! (>L:C310_CB_TIMER,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_AUDIO">
			<Parameters Type="Default">
				<NODE_ID>CB_AUDIO</NODE_ID>
				<ANIM_NAME>CB_AUDIO</ANIM_NAME>
				<PART_ID>CB_AUDIO</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Audio'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Audio Panel Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_AUDIO,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_AUDIO,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_AUDIO,bool) ! (>L:C310_CB_AUDIO,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_SPEAKER_AUDIO">
			<Parameters Type="Default">
				<NODE_ID>CB_SPEAKER_AUDIO</NODE_ID>
				<ANIM_NAME>CB_SPEAKER_AUDIO</ANIM_NAME>
				<PART_ID>CB_SPEAKER_AUDIO</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Speaker Audio'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'INOP'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_SPEAKER_AUDIO,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_SPEAKER_AUDIO,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_SPEAKER_AUDIO,bool) ! (>L:C310_CB_SPEAKER_AUDIO,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_XPNDR_1">
			<Parameters Type="Default">
				<NODE_ID>CB_XPDR_1</NODE_ID>
				<ANIM_NAME>CB_XPDR_1</ANIM_NAME>
				<PART_ID>CB_XPDR_1</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Transponder 1'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Transponder 1 Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(A:BREAKER XPNDR,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(A:BREAKER XPNDR,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						1 (>K:BREAKER_XPNDR_TOGGLE)
						(A:BREAKER XPNDR,bool) (>L:C310_CB_XPDR_1,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_GYRO">
			<Parameters Type="Default">
				<NODE_ID>CB_GYRO</NODE_ID>
				<ANIM_NAME>CB_GYRO</ANIM_NAME>
				<PART_ID>CB_GYRO</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Gyro'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Gyro Breaker'</TT_DESCRIPTION>
				<TT_VALUE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:42, Bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:42, Bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						42 1 (&gt;K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
						1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT BREAKER PULLED:42, Bool) (>L:C310_CB_GYRO,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_HEAT_DAT">
			<Parameters Type="Default">
				<NODE_ID>CB_HEAT_DAT</NODE_ID>
				<ANIM_NAME>CB_HEAT_DAT</ANIM_NAME>
				<PART_ID>CB_HEAT_DAT</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Heater'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Heater Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_HEAT_DAT,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_HEAT_DAT,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_HEAT_DAT,bool) ! (>L:C310_CB_HEAT_DAT,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_AUTOPILOT">
			<Parameters Type="Default">
				<NODE_ID>CB_COMP</NODE_ID>
				<ANIM_NAME>CB_COMP</ANIM_NAME>
				<PART_ID>CB_COMP</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Autopilot'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Autopilot Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(A:BREAKER AUTOPILOT,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(A:BREAKER AUTOPILOT,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						1 (>K:BREAKER_AUTOPILOT_TOGGLE)
						(A:BREAKER AUTOPILOT,bool) (>L:C310_CB_COMP,bool)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

		<Component ID="CB_EQUIP_FAN">
			<Parameters Type="Default">
				<NODE_ID>CB_EQUIP_FAN</NODE_ID>
				<ANIM_NAME>CB_EQUIP_FAN</ANIM_NAME>
				<PART_ID>CB_EQUIP_FAN</PART_ID>
				<WWISE_EVENT_1>circuit_breaker_out</WWISE_EVENT_1>
				<WWISE_EVENT_2>circuit_breaker_in</WWISE_EVENT_2>
			</Parameters>
			<Parameters Type="Default">
				<TOOLTIP_TITLE>'Equipment Fan'</TOOLTIP_TITLE>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TT_ICON>PUSH</TT_ICON>
				<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
				<TT_DESCRIPTION>'Equipment Fan Breaker'</TT_DESCRIPTION>
				<TT_VALUE>(L:C310_CB_EQUIP_FAN,bool) if{ 'Open' } els{ 'Closed' }</TT_VALUE>
			</Parameters>
			<Component ID="#NODE_ID#" Node="#NODE_ID#">
				<UseInputEvent ID="MV_IE_TOOLTIP">
					<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
				</UseInputEvent>
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
					<ANIM_CODE>(L:C310_CB_EQUIP_FAN,bool) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>
						(L:C310_CB_EQUIP_FAN,bool) ! (>L:C310_CB_EQUIP_FAN,bool) 
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<CameraTitle>Left_Switch_Panel</CameraTitle>
		</Component>

	<!-- RADIOS ##################################### -->

 		<Component ID="KMA30_AudioPanel">

			<UseTemplate Name="ASOBO_AUDIO_AudioPanel_Template">
				<DECAL_POTENTIOMETER>5</DECAL_POTENTIOMETER>
				<POTENTIOMETER>5</POTENTIOMETER>
				<VOLUME_KNOB_AUDIO_COUNT>10</VOLUME_KNOB_AUDIO_COUNT>
			</UseTemplate>

			<Component ID="AUDIO_MultifunctionButton_Marker">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_MultifunctionButton_Marker_1</NODE_ID>
					<ANIM_NAME>AUDIO_MultifunctionButton_Marker_1</ANIM_NAME>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Marker Sensitivity/Test'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Marker Sensitivity / Hold to Test'</TT_DESCRIPTION>
					<TT_VALUE>
						(A:MARKER BEACON SENSITIVITY HIGH, Bool) if{
							'High'
						} els{
							(A:MARKER BEACON TEST MUTE, Enum) if{
								'Test'
							} els{
								'Low'
							}
						}
					</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Timed">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<SHORT_CLICK_CODE>
							(A:MARKER BEACON SENSITIVITY HIGH, Bool) ! (&gt;K:MARKER_BEACON_SENSITIVITY_HIGH)
							(A:MARKER BEACON SENSITIVITY HIGH, Bool) (&gt;L:Marker_Button_Position)
						</SHORT_CLICK_CODE>
						<LONG_CLICK_CODE>
							(A:MARKER BEACON SENSITIVITY HIGH, Bool) (&gt;L:Marker_Button_Position)
							1 (&gt;K:MARKER_BEACON_TEST_MUTE)
							0 (&gt;K:MARKER_BEACON_SENSITIVITY_HIGH)
						</LONG_CLICK_CODE>
						<LEFT_LEAVE_CODE>
							0 (&gt;K:MARKER_BEACON_TEST_MUTE)
							(L:Marker_Button_Position) (&gt;K:MARKER_BEACON_SENSITIVITY_HIGH)
						</LEFT_LEAVE_CODE>
						<WWISE_EVENT_1>navcom_push_button_on</WWISE_EVENT_1>
						<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
						<WWISE_EVENT_2>navcom_push_button_off</WWISE_EVENT_2>
						<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="AUDIO_Marker_Hi">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_Indicator_Marker_Hi</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Visibility" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(A:MARKER BEACON SENSITIVITY HIGH, Bool) (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:MARKER BEACON SENSITIVITY HIGH, Bool)</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>
			<Component ID="AUDIO_Marker_Lo">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_Indicator_Marker_Lo</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Visibility" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(A:MARKER BEACON SENSITIVITY HIGH, Bool) ! (A:MARKER BEACON TEST MUTE, Enum) ! and (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:MARKER BEACON SENSITIVITY HIGH, Bool) ! (A:MARKER BEACON TEST MUTE, Enum) !</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>
			<Component ID="AUDIO_Marker_Test">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_Indicator_Marker_Test</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Visibility" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(A:MARKER BEACON TEST MUTE, Enum) (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:MARKER BEACON TEST MUTE, Enum)</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="AUDIO_ICS">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_Push_ICS_Cycle_1</NODE_ID>
					<ANIM_NAME>AUDIO_Push_ICS_Cycle_1</ANIM_NAME>
					<LEFT_SINGLE_CODE>
						(A:INTERCOM MODE, Enum) 2 == if{
							0 (&gt;K:INTERCOM_MODE_SET)
						} els{
							(A:INTERCOM MODE, Enum) 1 + (&gt;K:INTERCOM_MODE_SET)
						}
					</LEFT_SINGLE_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Intercom Mode'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Change Intercom Mode'</TT_DESCRIPTION>
					<TT_VALUE>
						(A:INTERCOM MODE, Enum) 0 == if{
							'ISO'
						} els{
							(A:INTERCOM MODE, Enum) 1 == if{
								'All'
							} els{
								'Crew'
							}
						}
					</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Emissive">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<WWISE_EVENT_1>navcom_push_button_on</WWISE_EVENT_1>
						<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
						<WWISE_EVENT_2>navcom_push_button_off</WWISE_EVENT_2>
						<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="AUDIO_ICS_ISO">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_Indicator_ICS_ISO</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Visibility" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(A:INTERCOM MODE, Enum) 0 == (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:INTERCOM MODE, Enum) 0 ==</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>
			<Component ID="AUDIO_ICS_ALL">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_Indicator_ICS_ALL</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Visibility" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(A:INTERCOM MODE, Enum) 1 == (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:INTERCOM MODE, Enum) 1 ==</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>
			<Component ID="AUDIO_ICS_CRW">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_Indicator_ICS_CRW</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Visibility" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(A:INTERCOM MODE, Enum) 2 == (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:INTERCOM MODE, Enum) 2 ==</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="AUDIO_Indicators_Visibility">
				<Component ID="Com1_Receive">
					<Parameters Type="Default">
						<NODE_ID>AUDIO_Push_COM1_Active_1</NODE_ID>
					</Parameters>
					<Component ID="#NODE_ID#" Node="#NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>(A:COM RECEIVE:1, bool) (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Component>
				<Component ID="Com2_Receive">
					<Parameters Type="Default">
						<NODE_ID>AUDIO_Push_COM2_Active_1</NODE_ID>
					</Parameters>
					<Component ID="#NODE_ID#" Node="#NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>(A:COM RECEIVE:2, bool) (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Component>
				<Component ID="Nav1_Receive">
					<Parameters Type="Default">
						<NODE_ID>AUDIO_Push_NAV1_Active_1</NODE_ID>
					</Parameters>
					<Component ID="#NODE_ID#" Node="#NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>(A:NAV SOUND:1, bool) (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Component>
				<Component ID="Nav2_Receive">
					<Parameters Type="Default">
						<NODE_ID>AUDIO_Push_NAV2_Active_1</NODE_ID>
					</Parameters>
					<Component ID="#NODE_ID#" Node="#NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>(A:NAV SOUND:2, bool) (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Component>
				<Component ID="MKR_Sound">
					<Parameters Type="Default">
						<NODE_ID>AUDIO_Push_MKR_Active_1</NODE_ID>
					</Parameters>
					<Component ID="#NODE_ID#" Node="#NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>(A:MARKER SOUND, bool) (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Component>
				<Component ID="ADF_Sound">
					<Parameters Type="Default">
						<NODE_ID>AUDIO_Push_ADF_Active_1</NODE_ID>
					</Parameters>
					<Component ID="#NODE_ID#" Node="#NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>(A:ADF SOUND, bool) (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Component>
				<Component ID="SPR_Toggle">
					<Parameters Type="Default">
						<NODE_ID>AUDIO_Push_SPR_Active_1</NODE_ID>
					</Parameters>
					<Component ID="#NODE_ID#" Node="#NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>(A:SPEAKER ACTIVE, bool) (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Component>
				<Component ID="DME_Sound">
					<Parameters Type="Default">
						<NODE_ID>AUDIO_Push_DME_Active_1</NODE_ID>
					</Parameters>
					<Component ID="#NODE_ID#" Node="#NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>(A:DME SOUND, bool) (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Component>
			</Component>

			<Component ID="AUDIO_COM1_XMT">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_Push_COM1_XMT_1</NODE_ID>
					<ANIM_NAME>AUDIO_Push_COM1_XMT_1</ANIM_NAME>
					<INDICATOR_NODE_ID>AUDIO_Indicator_COM1_XMT_1</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						(A:COM TRANSMIT:1, bool) ! (&gt;K:COM1_TRANSMIT_SELECT)
					</LEFT_SINGLE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:COM TRANSMIT:1, bool) (A:CIRCUIT ON:36, Bool) and
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Com Transmitter'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Set Com 1 Transmitter Status'</TT_DESCRIPTION>
					<TT_VALUE>
						(A:COM TRANSMIT:1, bool) if{
							'On'
						} els{
							'Off'
						}
					</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Emissive">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<WWISE_EVENT_1>navcom_push_button_on</WWISE_EVENT_1>
						<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
						<WWISE_EVENT_2>navcom_push_button_off</WWISE_EVENT_2>
						<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>#EMISSIVE_INDICATOR_CODE#</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>

			<Component ID="AUDIO_COM2_XMT">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_Push_COM2_XMT_1</NODE_ID>
					<ANIM_NAME>AUDIO_Push_COM2_XMT_1</ANIM_NAME>
					<INDICATOR_NODE_ID>AUDIO_Indicator_COM2_XMT_1</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						(A:COM TRANSMIT:2, bool) ! (&gt;K:COM2_TRANSMIT_SELECT)
					</LEFT_SINGLE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(A:COM TRANSMIT:2, bool) (A:CIRCUIT ON:36, Bool) and
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Com Transmitter'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Set Com 2 Transmitter Status'</TT_DESCRIPTION>
					<TT_VALUE>
						(A:COM TRANSMIT:2, bool) if{
							'On'
						} els{
							'Off'
						}
					</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Emissive">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<WWISE_EVENT_1>navcom_push_button_on</WWISE_EVENT_1>
						<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
						<WWISE_EVENT_2>navcom_push_button_off</WWISE_EVENT_2>
						<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>#EMISSIVE_INDICATOR_CODE#</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>

			<Component ID="AUDIO_Indicator_RCV">
				<DefaultTemplateParameters>
					<NODE_ID>AUDIO_Indicator_RCV_1</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#_Visibility" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE></VISIBILITY_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE></EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>
			<Component ID="AUDIO_Indicator_XMT">
				<DefaultTemplateParameters>
					<NODE_ID>AUDIO_Indicator_XMT_1</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#_Visibility" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(A:PILOT TRANSMITTING, Bool) (A:COPILOT TRANSMITTING, Bool) or (A:CIRCUIT ON:36, Bool) and</VISIBILITY_CODE>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:PILOT TRANSMITTING, Bool) (A:COPILOT TRANSMITTING, Bool) or</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="AUDIO_TEL">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_Push_TEL_1</NODE_ID>
					<ANIM_NAME>AUDIO_Push_TEL_1</ANIM_NAME>
					<INDICATOR_NODE_ID>AUDIO_Push_TEL_Active_1</INDICATOR_NODE_ID>
					<LEFT_SINGLE_CODE>
						(L:TEL_Button_Toggle) ! (&gt;L:TEL_Button_Toggle)
					</LEFT_SINGLE_CODE>
					<EMISSIVE_INDICATOR_CODE>
						(L:TEL_Button_Toggle) (A:CIRCUIT ON:36, Bool) and
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Telephone'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Telephone Connection'</TT_DESCRIPTION>
					<TT_VALUE>
						(L:TEL_Button_Toggle) if{
							'On'
						} els{
							'Off'
						}
					</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Emissive">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<WWISE_EVENT_1>navcom_push_button_on</WWISE_EVENT_1>
						<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
						<WWISE_EVENT_2>navcom_push_button_off</WWISE_EVENT_2>
						<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>#EMISSIVE_INDICATOR_CODE#</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>
			<Component ID="AUDIO_Indicator_TEL">
				<DefaultTemplateParameters>
					<NODE_ID>AUDIO_Indicator_TEL_1</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(L:TEL_Button_Toggle)</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="AUDIO_Mute">
				<Parameters Type="Default">
					<NODE_ID>AUDIO_Push_Mute_1</NODE_ID>
					<ANIM_NAME>AUDIO_Push_Mute_1</ANIM_NAME>
					<INDICATOR_NODE_ID>AUDIO_Push_Mute_Active_1</INDICATOR_NODE_ID>
					<EMISSIVE_INDICATOR_CODE>
						(L:MUTE_Button_Toggle) (A:CIRCUIT ON:36, Bool) and
					</EMISSIVE_INDICATOR_CODE>
				</Parameters>
				<Parameters Type="Default">
					<TOOLTIP_TITLE>'Mute / Music Playback'</TOOLTIP_TITLE>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TT_ICON>Push</TT_ICON>
					<TT_INTERACTION_FLAGS>PRIMARY_DOWN</TT_INTERACTION_FLAGS>
					<TT_DESCRIPTION>'Toggle Mute / Hold to Toggle Music'</TT_DESCRIPTION>
					<TT_VALUE>
						(L:MUTE_Button_Toggle) if{
							'Mute'
						} els{
							(L:MUSIC_Button_Toggle) if{
								'Music'
							} els{
								'Off'
							}
						}
					</TT_VALUE>
				</Parameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseInputEvent ID="MV_IE_TOOLTIP">
						<TT_BASIC_ONLY>#NODE_ID#</TT_BASIC_ONLY>
					</UseInputEvent>
					<UseTemplate Name="ASOBO_GT_Push_Button_Timed">
						<TOOLTIP_ENTRY_0>MV_#NODE_ID#</TOOLTIP_ENTRY_0>
						<SHORT_CLICK_CODE>
							(L:MUTE_Button_Toggle) ! (&gt;L:MUTE_Button_Toggle)
						</SHORT_CLICK_CODE>
						<LONG_CLICK_CODE>
							(L:MUSIC_Button_Toggle) ! (&gt;L:MUSIC_Button_Toggle)
						</LONG_CLICK_CODE>
						<WWISE_EVENT_1>navcom_push_button_on</WWISE_EVENT_1>
						<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
						<WWISE_EVENT_2>navcom_push_button_off</WWISE_EVENT_2>
						<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
					</UseTemplate>
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
				<Condition Check="INDICATOR_NODE_ID">
					<Component ID="#INDICATOR_NODE_ID#" Node="#INDICATOR_NODE_ID#">
						<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
							<EMISSIVE_CODE>#EMISSIVE_INDICATOR_CODE#</EMISSIVE_CODE>
						</UseTemplate>
						<UseTemplate Name="ASOBO_GT_Visibility_Code">
							<VISIBILITY_CODE>#EMISSIVE_INDICATOR_CODE#</VISIBILITY_CODE>
						</UseTemplate>
					</Component>
				</Condition>
			</Component>
			<Component ID="AUDIO_Indicator_Music">
				<DefaultTemplateParameters>
					<NODE_ID>AUDIO_Indicator_Music_1</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(L:MUSIC_Button_Toggle)</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="AUDIO_Emissive_VolumeKnob">
				<DefaultTemplateParameters>
					<NODE_ID>AUDIO_Knob_Volume_1</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="AUDIO_Pass_VolumeKnob">
				<DefaultTemplateParameters>
					<NODE_ID>AudioPanel_Knob_Volume_2</NODE_ID>
					<ANIM_NAME>AudioPanel_Knob_Volume_2</ANIM_NAME>
					<KNOB_INCREMENT>1</KNOB_INCREMENT>
					<WRAP>True</WRAP>
					<WWISE_EVENT>navcom_audio_volume_knob_1</WWISE_EVENT>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
						<CLOCKWISE_CODE>(L:XMLVAR_Pass_Volume) #KNOB_INCREMENT# + 100 min (&gt;L:XMLVAR_Pass_Volume)</CLOCKWISE_CODE>
						<ANTICLOCKWISE_CODE>(L:XMLVAR_Pass_Volume) #KNOB_INCREMENT# - 0 max (&gt;L:XMLVAR_Pass_Volume)</ANTICLOCKWISE_CODE>
						<ANIM_CODE>(L:XMLVAR_Pass_Volume)</ANIM_CODE>
						<COUNT>100</COUNT>
					</UseTemplate>
				</Component>
			</Component>

		</Component>

		<Component ID="KR87_ADF">
			<UseTemplate Name="ASOBO_INSTRUMENT_ADF_Template">
				<EMISSIVE_KNOB>False</EMISSIVE_KNOB>
				<CIRCUIT_ADF>35</CIRCUIT_ADF>
				<BUTTON_EMISSIVE_FACTOR>0.3</BUTTON_EMISSIVE_FACTOR>
				<EMISSIVE_POTENTIOMETER>5</EMISSIVE_POTENTIOMETER>
			</UseTemplate>
		</Component>

		<Macro Name="APButtonEmissiveCode">
			(A:LIGHT POTENTIOMETER:#EMISSIVE_POTENTIOMETER#, percent over 100)
		</Macro>

		<Component ID="Autopilot">
			<UseTemplate Name="ASOBO_KAP140_Template">
			</UseTemplate>
		</Component>

		<Component ID="KAP140_Lighting">
			<Parameters Type="Default">
				<AP_NODE_ID>AUTOPILOT_Push_Autopilot_1</AP_NODE_ID>
				<HDG_NODE_ID>AUTOPILOT_Push_Heading_1</HDG_NODE_ID>
				<NAV_NODE_ID>AUTOPILOT_Push_Navigation_1</NAV_NODE_ID>
				<APR_NODE_ID>AUTOPILOT_Push_Approach_1</APR_NODE_ID>
				<BC_NODE_ID>AUTOPILOT_Push_BackCourse_1</BC_NODE_ID>
				<ALT_NODE_ID>AUTOPILOT_Push_Altitude_1</ALT_NODE_ID>
				<UP_NODE_ID>AUTOPILOT_Push_VerticalSpeed_Up_1</UP_NODE_ID>
				<DN_NODE_ID>AUTOPILOT_Push_VerticalSpeed_Down_1</DN_NODE_ID>
				<FLC_NODE_ID>AUTOPILOT_Push_FlightLevelChange_1</FLC_NODE_ID>
				<VS_NODE_ID>AUTOPILOT_Push_VerticalSpeed_1</VS_NODE_ID>
				<FAILURE_CIRCUIT>37</FAILURE_CIRCUIT>
				<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, percent over 100) 0.3 *</EMISSIVE_CODE>
			</Parameters>

			<Component ID="#AP_NODE_ID#" Node="#AP_NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				</UseTemplate>
			</Component>
			<Component ID="#HDG_NODE_ID#" Node="#HDG_NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				</UseTemplate>
			</Component>
			<Component ID="#NAV_NODE_ID#" Node="#NAV_NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				</UseTemplate>
			</Component>
			<Component ID="#APR_NODE_ID#" Node="#APR_NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				</UseTemplate>
			</Component>
			<Component ID="#BC_NODE_ID#" Node="#BC_NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				</UseTemplate>
			</Component>
			<Component ID="#ALT_NODE_ID#" Node="#ALT_NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				</UseTemplate>
			</Component>
			<Component ID="#UP_NODE_ID#" Node="#UP_NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				</UseTemplate>
			</Component>
			<Component ID="#DN_NODE_ID#" Node="#DN_NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				</UseTemplate>
			</Component>
			<Component ID="#FLC_NODE_ID#" Node="#FLC_NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				</UseTemplate>
			</Component>
			<Component ID="#VS_NODE_ID#" Node="#VS_NODE_ID#">
				<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				</UseTemplate>
			</Component>
		</Component>

		<Component ID="AS530">
			<UseTemplate Name="ASOBO_AS530_Template">
				<ID>1</ID>
				<EXTERNAL_AUTOPILOT_BEHAVIOR_CONTROL />				
				<POTENTIOMETER>5</POTENTIOMETER>
				<DIMMING_FACTOR>0.5</DIMMING_FACTOR>
				<FAILURE>(A:CIRCUIT ON:26, Bool)</FAILURE>
				<CIRCUIT_ID>26</CIRCUIT_ID>
				<NAV_INDEX>1</NAV_INDEX>
				<COM_INDEX>1</COM_INDEX>
			</UseTemplate>
		</Component>

		<Component ID="AS430">
			<UseTemplate Name="ASOBO_AS430_Template">
				<EXTERNAL_AUTOPILOT_BEHAVIOR_CONTROL />			
				<POTENTIOMETER>5</POTENTIOMETER>
				<DIMMING_FACTOR>0.5</DIMMING_FACTOR>
				<FAILURE>(A:CIRCUIT ON:27, Bool)</FAILURE>
				<CIRCUIT_ID>27</CIRCUIT_ID>
				<NAV_INDEX>2</NAV_INDEX>
				<COM_INDEX>2</COM_INDEX>
			</UseTemplate>
		</Component>

		<Component ID="GTX330">
			<UseTemplate Name="ASOBO_AS330_Template">
				<ID>1</ID>
				<FAILURE>(A:CIRCUIT ON:28, Bool)</FAILURE>
				<CIRCUIT_ID>28</CIRCUIT_ID>
				<POTENTIOMETER>5</POTENTIOMETER>
				<EMISSIVE_POTENTIOMETER>5</EMISSIVE_POTENTIOMETER>
				<BUTTON_EMISSIVE_FACTOR>0.5</BUTTON_EMISSIVE_FACTOR>
			</UseTemplate>
		</Component>

		<Component ID="Analog_NavCom_1">	
			<Parameters Type="Default">
				<ID>1</ID>
				<EMISSIVE_POTENTIOMETER>5</EMISSIVE_POTENTIOMETER>
				<DIMMING_FACTOR>0.5</DIMMING_FACTOR>
				<COM_CIRCUIT>31</COM_CIRCUIT>
				<NAV_CIRCUIT>30</NAV_CIRCUIT>
			</Parameters>
			<UseTemplate Name="ASOBO_AS_155_TSO_SubTemplate">
				<SEPARATED_SCREENS>False</SEPARATED_SCREENS>
				<NODE_ID_COM_LARGE_KNOB>KX165A_Knob_COMFrequency_MHz_1</NODE_ID_COM_LARGE_KNOB>
				<ANIM_NAME_COM_LARGE_KNOB>KX165A_Knob_COMFrequency_MHz_1</ANIM_NAME_COM_LARGE_KNOB>
				<NODE_ID_COM_SMALL_KNOB>KX165A_Knob_COMFrequency_KHz_1</NODE_ID_COM_SMALL_KNOB>
				<ANIM_NAME_COM_SMALL_KNOB_PUSH>KX165A_Knob_COMFrequency_KHz_Pull_1</ANIM_NAME_COM_SMALL_KNOB_PUSH>
				<ANIM_NAME_COM_SMALL_KNOB>KX165A_Knob_COMFrequency_KHz_1</ANIM_NAME_COM_SMALL_KNOB>
				<NODE_ID_COM_VOLUME_PULL>KX165A_Knob_COMVolume_1</NODE_ID_COM_VOLUME_PULL>
				<ANIM_NAME_COM_VOLUME_PULL>KX165A_Knob_COMVolume_Pull_1</ANIM_NAME_COM_VOLUME_PULL>
				<ANIM_NAME_COM_VOLUME_KNOB>KX165A_Knob_COMVolume_1</ANIM_NAME_COM_VOLUME_KNOB>
				<NODE_ID_COM_SWAP>KX165A_Button_COMSwap_1</NODE_ID_COM_SWAP>
				<ANIM_NAME_COM_SWAP>KX165A_Button_COMSwap_1</ANIM_NAME_COM_SWAP>
				<NODE_ID_NAV_LARGE_KNOB>KX165A_Knob_NAVFrequency_MHz_1</NODE_ID_NAV_LARGE_KNOB>
				<ANIM_NAME_NAV_LARGE_KNOB>KX165A_Knob_NAVFrequency_MHz_1</ANIM_NAME_NAV_LARGE_KNOB>
				<NODE_ID_NAV_SMALL_KNOB>KX165A_Knob_NAVFrequency_KHz_1</NODE_ID_NAV_SMALL_KNOB>
				<ANIM_NAME_NAV_SMALL_KNOB_PUSH>KX165A_Knob_NAVFrequency_KHz_Pull_1</ANIM_NAME_NAV_SMALL_KNOB_PUSH>
				<ANIM_NAME_NAV_SMALL_KNOB>KX165A_Knob_NAVFrequency_KHz_1</ANIM_NAME_NAV_SMALL_KNOB>
				<NODE_ID_NAV_VOLUME_PULL>KX165A_Knob_NAVVolume_1</NODE_ID_NAV_VOLUME_PULL>
				<ANIM_NAME_NAV_VOLUME_PULL>KX165A_Knob_NAVVolume_Pull_1</ANIM_NAME_NAV_VOLUME_PULL>
				<ANIM_NAME_NAV_VOLUME_KNOB>KX165A_Knob_NAVVolume_1</ANIM_NAME_NAV_VOLUME_KNOB>
				<NODE_ID_NAV_SWAP>KX165A_Button_NAVSwap_1</NODE_ID_NAV_SWAP>
				<ANIM_NAME_NAV_SWAP>KX165A_Button_NAVSwap_1</ANIM_NAME_NAV_SWAP>
				<DECALS_NODE_ID>KX165A_Decals_Emissive_1</DECALS_NODE_ID>
			</UseTemplate>
		</Component>

		<Component ID="Analog_NavCom_2">	
			<Parameters Type="Default">
				<ID>2</ID>
				<EMISSIVE_POTENTIOMETER>5</EMISSIVE_POTENTIOMETER>
				<DIMMING_FACTOR>0.5</DIMMING_FACTOR>
				<COM_CIRCUIT>33</COM_CIRCUIT>
				<NAV_CIRCUIT>32</NAV_CIRCUIT>
			</Parameters>
			<UseTemplate Name="ASOBO_AS_155_TSO_SubTemplate">
				<SEPARATED_SCREENS>False</SEPARATED_SCREENS>
				<NODE_ID_COM_LARGE_KNOB>KX165A_Knob_COMFrequency_MHz_2</NODE_ID_COM_LARGE_KNOB>
				<ANIM_NAME_COM_LARGE_KNOB>KX165A_Knob_COMFrequency_MHz_2</ANIM_NAME_COM_LARGE_KNOB>
				<NODE_ID_COM_SMALL_KNOB>KX165A_Knob_COMFrequency_KHz_2</NODE_ID_COM_SMALL_KNOB>
				<ANIM_NAME_COM_SMALL_KNOB_PUSH>KX165A_Knob_COMFrequency_KHz_Pull_2</ANIM_NAME_COM_SMALL_KNOB_PUSH>
				<ANIM_NAME_COM_SMALL_KNOB>KX165A_Knob_COMFrequency_KHz_2</ANIM_NAME_COM_SMALL_KNOB>
				<NODE_ID_COM_VOLUME_PULL>KX165A_Knob_COMVolume_2</NODE_ID_COM_VOLUME_PULL>
				<ANIM_NAME_COM_VOLUME_PULL>KX165A_Knob_COMVolume_Pull_2</ANIM_NAME_COM_VOLUME_PULL>
				<ANIM_NAME_COM_VOLUME_KNOB>KX165A_Knob_COMVolume_2</ANIM_NAME_COM_VOLUME_KNOB>
				<NODE_ID_COM_SWAP>KX165A_Button_COMSwap_2</NODE_ID_COM_SWAP>
				<ANIM_NAME_COM_SWAP>KX165A_Button_COMSwap_2</ANIM_NAME_COM_SWAP>
				<NODE_ID_NAV_LARGE_KNOB>KX165A_Knob_NAVFrequency_MHz_2</NODE_ID_NAV_LARGE_KNOB>
				<ANIM_NAME_NAV_LARGE_KNOB>KX165A_Knob_NAVFrequency_MHz_2</ANIM_NAME_NAV_LARGE_KNOB>
				<NODE_ID_NAV_SMALL_KNOB>KX165A_Knob_NAVFrequency_KHz_2</NODE_ID_NAV_SMALL_KNOB>
				<ANIM_NAME_NAV_SMALL_KNOB_PUSH>KX165A_Knob_NAVFrequency_KHz_Pull_2</ANIM_NAME_NAV_SMALL_KNOB_PUSH>
				<ANIM_NAME_NAV_SMALL_KNOB>KX165A_Knob_NAVFrequency_KHz_2</ANIM_NAME_NAV_SMALL_KNOB>
				<NODE_ID_NAV_VOLUME_PULL>KX165A_Knob_NAVVolume_2</NODE_ID_NAV_VOLUME_PULL>
				<ANIM_NAME_NAV_VOLUME_PULL>KX165A_Knob_NAVVolume_Pull_2</ANIM_NAME_NAV_VOLUME_PULL>
				<ANIM_NAME_NAV_VOLUME_KNOB>KX165A_Knob_NAVVolume_2</ANIM_NAME_NAV_VOLUME_KNOB>
				<NODE_ID_NAV_SWAP>KX165A_Button_NAVSwap_2</NODE_ID_NAV_SWAP>
				<ANIM_NAME_NAV_SWAP>KX165A_Button_NAVSwap_2</ANIM_NAME_NAV_SWAP>
				<DECALS_NODE_ID>KX165A_Decals_Emissive_2</DECALS_NODE_ID>
			</UseTemplate>
		</Component>

		<Component ID="PMS50_GTN750">
			<Component ID="GTN750_Vol" Node="GTN750_Knob_Volume">
				<UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
					<ANIM_NAME_KNOB>GTN750_Knob_Volume</ANIM_NAME_KNOB>
					<ANIM_NAME_PUSH>GTN750_Knob_Volume_Push</ANIM_NAME_PUSH>
					<WWISE_EVENT_1>gtn750_inner_rotary_button_press</WWISE_EVENT_1>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<WWISE_EVENT_2>gtn750_inner_rotary_button_release</WWISE_EVENT_2>
					<NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
					<CLOCKWISE_CODE>(&gt;H:GTN750_VolInc)</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>(&gt;H:GTN750_VolDec)</ANTICLOCKWISE_CODE>
					<LEFT_SINGLE_CODE>(&gt;H:GTN750_VolPush)</LEFT_SINGLE_CODE>
					<WWISE_EVENT>gtn750_inner_rotary_notch</WWISE_EVENT>
					<COUNT>36</COUNT>
				</UseTemplate>
			</Component>
			<Component ID="GTN750_KnobSmall" Node="GTN750_Knob_Inner">
				<UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
					<ANIM_NAME_KNOB>GTN750_Knob_Inner</ANIM_NAME_KNOB>
					<ANIM_NAME_PUSH>GTN750_Knob_Inner_Push</ANIM_NAME_PUSH>
					<WWISE_EVENT_1>gtn750_inner_rotary_button_press</WWISE_EVENT_1>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<WWISE_EVENT_2>gtn750_inner_rotary_button_release</WWISE_EVENT_2>
					<NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
					<CLOCKWISE_CODE>(&gt;H:GTN750_KnobSmallInc)</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>(&gt;H:GTN750_KnobSmallDec)</ANTICLOCKWISE_CODE>
					<LEFT_SINGLE_CODE>(&gt;H:GTN750_KnobPush)</LEFT_SINGLE_CODE>
					<WWISE_EVENT>gtn750_inner_rotary_notch</WWISE_EVENT>
					<COUNT>36</COUNT>
				</UseTemplate>
			</Component>
			<Component ID="GTN750_KnobLarge" Node="GTN750_Knob_Outer">
				<UseTemplate Name="ASOBO_GT_Knob_Infinite">
					<ANIM_NAME>GTN750_Knob_Outer</ANIM_NAME>
					<CLOCKWISE_CODE>(&gt;H:GTN750_KnobLargeInc)</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>(&gt;H:GTN750_KnobLargeDec)</ANTICLOCKWISE_CODE>
					<WWISE_EVENT>gtn750_outer_rotary_notch</WWISE_EVENT>
					<COUNT>36</COUNT>
				</UseTemplate>
			</Component>
			<Component ID="GTN750_HomePush" Node="GTN750_Push_Home">
				<UseTemplate Name="ASOBO_GT_Push_Button_Timed">
					<ANIM_NAME>GTN750_Push_Home</ANIM_NAME>
					<SHORT_CLICK_CODE>(&gt;H:GTN750_HomePush)</SHORT_CLICK_CODE>
					<LONG_CLICK_CODE>(&gt;H:GTN750_HomePushLong)</LONG_CLICK_CODE>
					<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
					<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
				</UseTemplate>
			</Component>
			<Component ID="GTN750_DirectToPush" Node="GTN750_Push_DirectTo">
				<UseTemplate Name="ASOBO_GT_Push_Button">
					<ANIM_NAME>GTN750_Push_DirectTo</ANIM_NAME>
					<LEFT_SINGLE_CODE>(&gt;H:GTN750_DirectToPush)</LEFT_SINGLE_CODE>
					<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
					<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
				</UseTemplate>
			</Component>
		</Component>

		<Component ID="PMS50_GTN650">
			<Component ID="GTN650_Vol" Node="GTN650_Knob_Volume">
				<UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
					<ANIM_NAME_KNOB>GTN650_Knob_Volume</ANIM_NAME_KNOB>
					<ANIM_NAME_PUSH>GTN650_Knob_Volume_Push</ANIM_NAME_PUSH>
					<WWISE_EVENT_1>gtn750_inner_rotary_button_press</WWISE_EVENT_1>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<WWISE_EVENT_2>gtn750_inner_rotary_button_release</WWISE_EVENT_2>
					<NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
					<CLOCKWISE_CODE>(&gt;H:GTN650_2_VolInc)</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>(&gt;H:GTN650_2_VolDec)</ANTICLOCKWISE_CODE>
					<LEFT_SINGLE_CODE>(&gt;H:GTN650_2_VolPush)</LEFT_SINGLE_CODE>
					<WWISE_EVENT>gtn750_inner_rotary_notch</WWISE_EVENT>
					<COUNT>36</COUNT>
				</UseTemplate>
			</Component>
			<Component ID="GTN650_KnobSmall" Node="GTN650_Knob_Inner">
				<UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
					<ANIM_NAME_KNOB>GTN650_Knob_Inner</ANIM_NAME_KNOB>
					<ANIM_NAME_PUSH>GTN650_Knob_Inner_Push</ANIM_NAME_PUSH>
					<WWISE_EVENT_1>gtn750_inner_rotary_button_press</WWISE_EVENT_1>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<WWISE_EVENT_2>gtn750_inner_rotary_button_release</WWISE_EVENT_2>
					<NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
					<CLOCKWISE_CODE>(&gt;H:GTN650_2_KnobSmallInc)</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>(&gt;H:GTN650_2_KnobSmallDec)</ANTICLOCKWISE_CODE>
					<LEFT_SINGLE_CODE>(&gt;H:GTN650_2_KnobPush)</LEFT_SINGLE_CODE>
					<WWISE_EVENT>gtn750_inner_rotary_notch</WWISE_EVENT>
					<COUNT>36</COUNT>
				</UseTemplate>
			</Component>
			<Component ID="GTN650_KnobLarge" Node="GTN650_Knob_Outer">
				<UseTemplate Name="ASOBO_GT_Knob_Infinite">
					<ANIM_NAME>GTN650_Knob_Outer</ANIM_NAME>
					<CLOCKWISE_CODE>(&gt;H:GTN650_2_KnobLargeInc)</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>(&gt;H:GTN650_2_KnobLargeDec)</ANTICLOCKWISE_CODE>
					<WWISE_EVENT>gtn750_outer_rotary_notch</WWISE_EVENT>
					<COUNT>36</COUNT>
				</UseTemplate>
			</Component>
			<Component ID="GTN650_HomePush" Node="GTN650_Push_Home">
				<UseTemplate Name="ASOBO_GT_Push_Button_Timed">
					<ANIM_NAME>GTN650_Push_Home</ANIM_NAME>
					<SHORT_CLICK_CODE>(&gt;H:GTN650_2_HomePush)</SHORT_CLICK_CODE>
					<LONG_CLICK_CODE>(&gt;H:GTN650_2_HomePushLong)</LONG_CLICK_CODE>
					<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
					<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
				</UseTemplate>
			</Component>
			<Component ID="GTN650_DirectToPush" Node="GTN650_Push_DirectTo">
				<UseTemplate Name="ASOBO_GT_Push_Button">
					<ANIM_NAME>GTN650_Push_DirectTo</ANIM_NAME>
					<LEFT_SINGLE_CODE>(&gt;H:GTN650_2_DirectToPush)</LEFT_SINGLE_CODE>
					<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
					<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
				</UseTemplate>
			</Component>
		</Component>

		<Component ID="G5_1">
			<UseTemplate Name="ASOBO_AS5_Template">
				<ID>1</ID>
				<CIRCUIT_ID>55</CIRCUIT_ID>
				<NODE_ID_KNOB>Garmin_G5_Knob_1</NODE_ID_KNOB>
				<ANIM_NAME_KNOB>Garmin_G5_Knob_1</ANIM_NAME_KNOB>
				<ANIM_NAME_PUSH>Garmin_G5_Knob_Push_1</ANIM_NAME_PUSH>
				<NODE_ID_BUTTON>Garmin_G5_Power_Button_1</NODE_ID_BUTTON>
				<ANIM_NAME_BUTTON>Garmin_G5_Power_Button_1</ANIM_NAME_BUTTON>
				<NODE_ID_SCREEN>Garmin_G5_Screen_On_1</NODE_ID_SCREEN>				
			</UseTemplate>
		</Component>

		<Component ID="G5_2">
			<UseTemplate Name="ASOBO_AS5_Template">
				<ID>2</ID>
				<CIRCUIT_ID>56</CIRCUIT_ID>
				<NODE_ID_KNOB>Garmin_G5_Knob_2</NODE_ID_KNOB>
				<ANIM_NAME_KNOB>Garmin_G5_Knob_2</ANIM_NAME_KNOB>
				<ANIM_NAME_PUSH>Garmin_G5_Knob_Push_2</ANIM_NAME_PUSH>
				<NODE_ID_BUTTON>Garmin_G5_Power_Button_2</NODE_ID_BUTTON>
				<ANIM_NAME_BUTTON>Garmin_G5_Power_Button_2</ANIM_NAME_BUTTON>
				<NODE_ID_SCREEN>Garmin_G5_Screen_On_2</NODE_ID_SCREEN>				
			</UseTemplate>
		</Component>

		<!-- TDS GTNXI 750 U1 -->
		<Component ID="TDSGTNXI750U1_KnobSmall" Node="TDSGTNXI_750U1_smallknob">
			<UseTemplate Name="ASOBO_GT_Knob_Infinite_Push_Timed">
			<ANIM_NAME_KNOB>TDSGTNXI_750U1_smallknob</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>TDSGTNXI750U1_KnobSmallPush</ANIM_NAME_PUSH>
			<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
			<CLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U1_LKnobInc,bool)</CLOCKWISE_CODE>
			<ANTICLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U1_LKnobDec,bool)</ANTICLOCKWISE_CODE>
			<WWISE_EVENT>gtn750_inner_rotary_notch</WWISE_EVENT>
			<COUNT>36</COUNT>
			<LEFT_SINGLE_CODE>1 (&gt;L:TDSGTNXI750U1_LKnobCRSR,bool)</LEFT_SINGLE_CODE>
			<LEFT_LEAVE_CODE>0 (&gt;L:TDSGTNXI750U1_LKnobCRSR,bool)</LEFT_LEAVE_CODE> 	
			</UseTemplate>
		</Component>

		<Component ID="TDSGTNXI750U1_KnobInner" Node="TDSGTNXI_750U1_inknob">
			<UseTemplate Name="ASOBO_GT_Knob_Infinite_Push_Timed">
			<ANIM_NAME_KNOB>TDSGTNXI_750U1_inknob</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>TDSGTNXI750U1_KnobInnerPush</ANIM_NAME_PUSH>
			<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
			<CLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U1_RKnobInnerInc,bool)</CLOCKWISE_CODE>
			<ANTICLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U1_RKnobInnerDec,bool)</ANTICLOCKWISE_CODE>
			<LEFT_SINGLE_CODE>1 (&gt;L:TDSGTNXI750U1_RKnobCRSR,bool)</LEFT_SINGLE_CODE>
			<LEFT_LEAVE_CODE>0 (&gt;L:TDSGTNXI750U1_RKnobCRSR,bool)</LEFT_LEAVE_CODE> 
			<WWISE_EVENT>gtn750_inner_rotary_notch</WWISE_EVENT>
			<COUNT>36</COUNT>
			</UseTemplate>
		</Component>

		<Component ID="TDSGTNXI750U1_KnobOuter" Node="TDSGTNXI_750U1_outknob">
			<UseTemplate Name="ASOBO_GT_Knob_Infinite">
			<ANIM_NAME>TDSGTNXI_750U1_outknob</ANIM_NAME>
			<CLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U1_RKnobOuterInc,bool)</CLOCKWISE_CODE>
			<ANTICLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U1_RKnobOuterDec,bool)</ANTICLOCKWISE_CODE>
			<WWISE_EVENT>gtn750_outer_rotary_notch</WWISE_EVENT>
			<COUNT>36</COUNT>
			<INVERT_ANIM>True</INVERT_ANIM>
			</UseTemplate>
		</Component>

		<Component ID="TDSGTNXI750U1_HomePush" Node="TDSGTNXI_750U1_Home">
			<UseTemplate Name="ASOBO_GT_Push_Button_Timed">
			<ANIM_NAME>TDSGTNXI_750U1_Home</ANIM_NAME>		
			<LEFT_SINGLE_CODE>1 (&gt;L:TDSGTNXI750U1_HomeKey,bool)</LEFT_SINGLE_CODE>  
			<LEFT_LEAVE_CODE>0 (&gt;L:TDSGTNXI750U1_HomeKey,bool)</LEFT_LEAVE_CODE> 	
			<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>		
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
			</UseTemplate>
			<UseTemplate Name="Radio_emissive_template">
			</UseTemplate>
		</Component>

		<Component ID="TDSGTNXI750U1_DirectToPush" Node="TDSGTNXI_750U1_Direct_To">
			<UseTemplate Name="ASOBO_GT_Push_Button">
			<ANIM_NAME>TDSGTNXI_750U1_Direct_To</ANIM_NAME>
			<LEFT_SINGLE_CODE>1 (&gt;L:TDSGTNXI750U1_DTOKey,bool)</LEFT_SINGLE_CODE>  
			<LEFT_LEAVE_CODE>0 (&gt;L:TDSGTNXI750U1_DTOKey,bool)</LEFT_LEAVE_CODE> 	
			<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
			</UseTemplate>
			<UseTemplate Name="Radio_emissive_template">
			</UseTemplate>
		</Component>

		<Component ID="TDSGTNXI750U1_NavSrc" Node="TDSGTNXI_750U1_NavSrc">
			<UseTemplate Name="ASOBO_GT_Push_Button">
			<LEFT_SINGLE_CODE>1 (&gt;L:TDSGTNXI750U1_NavSrc,bool)</LEFT_SINGLE_CODE>  
			<LEFT_LEAVE_CODE>0 (&gt;L:TDSGTNXI750U1_NavSrc,bool)</LEFT_LEAVE_CODE> 	
			</UseTemplate>
		</Component>



		<!-- TDS GTNXI 750 U2 -->
		<Component ID="TDSGTNXI750U2_KnobSmall" Node="TDSGTNXI_750U2_smallknob">
			<UseTemplate Name="ASOBO_GT_Knob_Infinite_Push_Timed">
			<ANIM_NAME_KNOB>TDSGTNXI_750U2_smallknob</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>TDSGTNXI750U2_KnobSmallPush</ANIM_NAME_PUSH>
			<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
			<CLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U2_LKnobInc,bool)</CLOCKWISE_CODE>
			<ANTICLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U2_LKnobDec,bool)</ANTICLOCKWISE_CODE>
			<WWISE_EVENT>gtn750_inner_rotary_notch</WWISE_EVENT>
			<COUNT>36</COUNT>
			<LEFT_SINGLE_CODE>1 (&gt;L:TDSGTNXI750U2_LKnobCRSR,bool)</LEFT_SINGLE_CODE>
			<LEFT_LEAVE_CODE>0 (&gt;L:TDSGTNXI750U2_LKnobCRSR,bool)</LEFT_LEAVE_CODE> 	
			</UseTemplate>
		</Component>

		<Component ID="TDSGTNXI750U2_KnobInner" Node="TDSGTNXI_750U2_inknob">
			<UseTemplate Name="ASOBO_GT_Knob_Infinite_Push_Timed">
			<ANIM_NAME_KNOB>TDSGTNXI_750U2_inknob</ANIM_NAME_KNOB>
			<ANIM_NAME_PUSH>TDSGTNXI750U2_KnobInnerPush</ANIM_NAME_PUSH>
			<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
			<CLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U2_RKnobInnerInc,bool)</CLOCKWISE_CODE>
			<ANTICLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U2_RKnobInnerDec,bool)</ANTICLOCKWISE_CODE>
			<LEFT_SINGLE_CODE>1 (&gt;L:TDSGTNXI750U2_RKnobCRSR,bool)</LEFT_SINGLE_CODE>
			<LEFT_LEAVE_CODE>0 (&gt;L:TDSGTNXI750U2_RKnobCRSR,bool)</LEFT_LEAVE_CODE> 
			<WWISE_EVENT>gtn750_inner_rotary_notch</WWISE_EVENT>
			<COUNT>36</COUNT>
			</UseTemplate>
		</Component>

		<Component ID="TDSGTNXI750U2_KnobOuter" Node="TDSGTNXI_750U2_outknob">
			<UseTemplate Name="ASOBO_GT_Knob_Infinite">
			<ANIM_NAME>TDSGTNXI_750U2_outknob</ANIM_NAME>
			<CLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U2_RKnobOuterInc,bool)</CLOCKWISE_CODE>
			<ANTICLOCKWISE_CODE>1 (&gt;L:TDSGTNXI750U2_RKnobOuterDec,bool)</ANTICLOCKWISE_CODE>
			<WWISE_EVENT>gtn750_outer_rotary_notch</WWISE_EVENT>
			<COUNT>36</COUNT>
			<INVERT_ANIM>True</INVERT_ANIM>
			</UseTemplate>
		</Component> 

		<Component ID="TDSGTNXI750U2_HomePush" Node="TDSGTNXI_750U2_Home">
			<UseTemplate Name="ASOBO_GT_Push_Button_Timed">
			<ANIM_NAME>TDSGTNXI_750U2_Home</ANIM_NAME>		
			<LEFT_SINGLE_CODE>1 (&gt;L:TDSGTNXI750U2_HomeKey,bool)</LEFT_SINGLE_CODE>  
			<LEFT_LEAVE_CODE>0 (&gt;L:TDSGTNXI750U2_HomeKey,bool)</LEFT_LEAVE_CODE> 	
			<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>		
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
			</UseTemplate>
			<UseTemplate Name="Radio_emissive_template">
			</UseTemplate>
		</Component>

		<Component ID="TDSGTNXI750U2_DirectToPush" Node="TDSGTNXI_750U2_Direct_To">
			<UseTemplate Name="ASOBO_GT_Push_Button">
			<ANIM_NAME>TDSGTNXI_750U2_Direct_To</ANIM_NAME>
			<LEFT_SINGLE_CODE>1 (&gt;L:TDSGTNXI750U2_DTOKey,bool)</LEFT_SINGLE_CODE>  
			<LEFT_LEAVE_CODE>0 (&gt;L:TDSGTNXI750U2_DTOKey,bool)</LEFT_LEAVE_CODE> 	
			<WWISE_EVENT_1>gtn750_push_button_press</WWISE_EVENT_1>
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<WWISE_EVENT_2>gtn750_push_button_release</WWISE_EVENT_2>
			<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
			</UseTemplate>
			<UseTemplate Name="Radio_emissive_template">
			</UseTemplate>
		</Component>

		<Component ID="TDSGTNXI750U2_NavSrc" Node="TDSGTNXI_750U2_NavSrc">
			<UseTemplate Name="ASOBO_GT_Push_Button">
			<LEFT_SINGLE_CODE>1 (&gt;L:TDSGTNXI750U2_NavSrc,bool)</LEFT_SINGLE_CODE>  
			<LEFT_LEAVE_CODE>0 (&gt;L:TDSGTNXI750U2_NavSrc,bool)</LEFT_LEAVE_CODE> 	
			</UseTemplate>
		</Component>

		<Component ID="TDSGTN_Lighting">

			<Component ID="TDSGTN1_Light_HomeButton">
				<Parameters Type="Default">
					<NODE_ID>TDSGTNXI_750U1_Home</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Lighting" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="TDSGTN1_Light_DirectToButton">
				<Parameters Type="Default">
					<NODE_ID>TDSGTNXI_750U1_Direct_To</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Lighting" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="TDSGTN2_Light_HomeButton">
				<Parameters Type="Default">
					<NODE_ID>TDSGTNXI_750U2_Home</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Lighting" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="TDSGTN2_Light_DirectToButton">
				<Parameters Type="Default">
					<NODE_ID>TDSGTNXI_750U2_Direct_To</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Lighting" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>			
		</Component>


		<Component ID="PMSGTN_Lighting">

			<Component ID="GTN750_Light_HomeButton">
				<Parameters Type="Default">
					<NODE_ID>GTN750_Push_Home</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Lighting" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="GTN750_Light_DirectToButton">
				<Parameters Type="Default">
					<NODE_ID>GTN750_Push_DirectTo</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Lighting" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="GTN650_Light_HomeButton">
				<Parameters Type="Default">
					<NODE_ID>GTN650_Push_Home</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Lighting" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="GTN650_Light_DirectToButton">
				<Parameters Type="Default">
					<NODE_ID>GTN650_Push_DirectTo</NODE_ID>
				</Parameters>
				<Component ID="#NODE_ID#_Lighting" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
						<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:5, Percent) 100 /</EMISSIVE_CODE>
					</UseTemplate>
				</Component>
			</Component>			
		</Component>

		<Component ID="Avionics_Viz_Logic">

			<Component ID="UPDATE_Avionics_Logic">
				<UseTemplate Name="ASOBO_GT_Update">
					<FREQUENCY>3</FREQUENCY>
					<UPDATE_CODE>
						(L:C310_TAB_750, bool) if{				
							0 (&gt;L:GTN750_INT_HIDDEN,bool)
							0 (&gt;L:GTN650_INT_2_HIDDEN,bool)
							1 (&gt;L:AS530_HIDDEN,bool)
							1 (&gt;L:AS430_HIDDEN,bool)
							1 (&gt;L:XMLVAR_GPS_DISABLED_AS530_1)
							1 (&gt;L:XMLVAR_GPS_DISABLED_AS430_1)							
						} els{
                            (L:C310_TAB_530, bool) if{
                                1 (&gt;L:GTN750_INT_HIDDEN,bool)
                                1 (&gt;L:GTN650_INT_2_HIDDEN,bool)
								1 (&gt;L:TDSGTNXI_InactiveVar, number)
								0 (&gt;L:AS530_HIDDEN,bool)
								0 (&gt;L:AS430_HIDDEN,bool)
								0 (&gt;L:XMLVAR_GPS_DISABLED_AS530_1)
								0 (&gt;L:XMLVAR_GPS_DISABLED_AS430_1)							
							} els{
								(L:C310_TAB_RADIO, Bool) if{
									1 (&gt;L:GTN750_INT_HIDDEN,bool)
									1 (&gt;L:GTN650_INT_2_HIDDEN,bool)
									1 (&gt;L:TDSGTNXI_InactiveVar, number)
                                	1 (&gt;L:AS530_HIDDEN,bool)
                                	1 (&gt;L:AS430_HIDDEN,bool)
									1 (&gt;L:XMLVAR_GPS_DISABLED_AS530_1)
									1 (&gt;L:XMLVAR_GPS_DISABLED_AS430_1)	
								}						
							}
						}
						(L:C310_TAB_TDS,bool) 1 == if{
							1 (&gt;L:GTN750_INT_HIDDEN,bool)
							1 (&gt;L:GTN650_INT_2_HIDDEN,bool)
							0 (&gt;L:TDSGTNXI_InactiveVar, number)
							1 (&gt;L:AS530_HIDDEN,bool)
							1 (&gt;L:AS430_HIDDEN,bool)
							1 (&gt;L:XMLVAR_GPS_DISABLED_AS530_1)
							1 (&gt;L:XMLVAR_GPS_DISABLED_AS430_1)							
						}
					</UPDATE_CODE>
				</UseTemplate>
			</Component>

			<Component ID="GNS_Visibility_1" Node="AS530_Frame_1">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_530, bool)</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>
			<Component ID="GNS_Visibility_2" Node="AS430_Frame_1">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_530, bool)</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="Radio_Visibility_1" Node="KX165A_Frame_1">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_RADIO, bool)</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>
			<Component ID="Radio_Visibility_2" Node="KX165A_Frame_2">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_RADIO, bool)</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="KMA30_Visibility_1" Node="KMA30_Frame">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_RADIO, bool) (L:C310_TAB_530, bool) or</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="GTX330_Visibility_1" Node="GTX330_Frame">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_RADIO, bool) (L:C310_TAB_530, bool) or</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="GTN_Visibility_1" Node="GTN750_Frame">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_750, bool)</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="GTN_Visibility_2" Node="GTN650_Frame">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_750, bool)</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="GTN_Visibility_3" Node="GTN750_Screen_OFF">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:PMS50_GTN750_INSTALLED, bool) ! (L:C310_TAB_750, bool) and</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="GTN_Visibility_4" Node="GTN650_Screen_OFF">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:PMS50_GTN750_INSTALLED, bool) ! (L:C310_TAB_750, bool) and</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="GTN_Visibility_5" Node="GTN750_Screen_ON">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:PMS50_GTN750_INSTALLED, bool) (L:C310_TAB_750, bool) and</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="GTN_Visibility_6" Node="GTN650_Screen_ON">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:PMS50_GTN750_INSTALLED, bool) (L:C310_TAB_750, bool) and</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="TDS_Visibility_1" Node="TDS_BEZEL_1">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_TDS, bool)</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="TDS_Visibility_2" Node="TDS_BEZEL_2">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_TDS, bool)</VISIBILITY_CODE>
				</UseTemplate> 
			</Component>

			<Component ID="VISIBILITY_G5_1">
				<Component ID="G5_1_Visibility" Node="Garmin_G5_Frame_1">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(L:C310_TAB_G5)</VISIBILITY_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="VISIBILITY_G5_2">
				<Component ID="G5_2_Visibility" Node="Garmin_G5_Frame_2">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(L:C310_TAB_G5)</VISIBILITY_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="VISIBILITY_ADI">
				<Component ID="ADI_Visibility" Node="ADI_Frame">
					<UseTemplate Name="ASOBO_GT_Visibility_Code">
						<VISIBILITY_CODE>(L:C310_TAB_G5) !</VISIBILITY_CODE>
					</UseTemplate>
				</Component>
			</Component>

			<Component ID="TDA_AP_Move">
				<DefaultTemplateParameters>
					<NODE_ID>KAP140_Frame_AltPreselect</NODE_ID>
				</DefaultTemplateParameters>
				<Component ID="#NODE_ID#" Node="#NODE_ID#">
					<UseTemplate Name="ASOBO_GT_Anim_Code">
						<ANIM_NAME>#NODE_ID#</ANIM_NAME>
						<ANIM_CODE>
							(L:C310_TAB_TDS,bool) 100 *
						</ANIM_CODE> 
					</UseTemplate>
				</Component>
			</Component>

		</Component>

	<!-- DIRT ####################################### -->

		<Component ID="Internal_WindowDirt_01" Node="DIRT_GlassInner_Helper_lvl_1">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_01,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

		<Component ID="Internal_WindowDirt_02" Node="DIRT_GlassInner_Helper_lvl_2">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_02,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

		<Component ID="Internal_WindowDirt_03" Node="DIRT_GlassInner_Helper_lvl_3">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_03,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

		<Component ID="Internal_WindowDirt_01b" Node="DIRT_GlassInner_Door_lvl_1">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_01,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

		<Component ID="Internal_WindowDirt_02b" Node="DIRT_GlassInner_Door_lvl_2">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_02,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

		<Component ID="Internal_WindowDirt_03b" Node="DIRT_GlassInner_Door_lvl_3">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_03,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

		<Component ID="Internal_WindowDirt_01c" Node="DIRT_GlassInner_DoorOutside_lvl_1">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_01,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

		<Component ID="Internal_WindowDirt_02c" Node="DIRT_GlassInner_DoorOutside_lvl_1">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_02,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

		<Component ID="Internal_WindowDirt_03c" Node="DIRT_GlassInner_DoorOutside_lvl_1">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_03,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

		<!-- Not really internal - this controls the level of dirt on the outside of the cabin door and the baggage door -->

		<Component ID="Internal_Dirt_01" Node="Dirt_Level_1_Helper_1">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_01,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

		<Component ID="Internal_Dirt_02" Node="Dirt_Level_2_Helper_1">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_02,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

		<Component ID="Internal_Dirt_03" Node="Dirt_Level_3_Helper_1">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:C310_DIRTLEVEL_03,bool)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>

	<!-- PASSENGERS ################################# -->

		<!-- station_load.2 / payload station weight:3 (middle-left) -->
			<!-- below 165 lbs -->
			<Component ID="PassengerSeat_1_Visibility_1" Node="Pos_01_Fig_04_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 1 164 (A:PAYLOAD STATION WEIGHT:3, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>	
			<!-- range 165 lbs to 179 lbs -->
			<Component ID="PassengerSeat_1_Visibility_2" Node="Pos_01_Fig_03_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 165 179 (A:PAYLOAD STATION WEIGHT:3, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<!-- range 180 lbs to 194 lbs -->
			<Component ID="PassengerSeat_1_Visibility_3" Node="Pos_01_Fig_02_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 180 194 (A:PAYLOAD STATION WEIGHT:3, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<!-- range 195 lbs to 209 lbs -->
			<Component ID="PassengerSeat_1_Visibility_4" Node="Pos_01_Fig_01_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 195 209 (A:PAYLOAD STATION WEIGHT:3, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<!-- above 210 lbs -->
			<Component ID="PassengerSeat_1_Visibility_5" Node="Pos_01_Fig_05_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! (A:PAYLOAD STATION WEIGHT:3, pounds) 209 &gt; and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>

		<!-- station_load.3 / payload station weight:4 (middle-right) -->
			<!-- below 165 lbs -->
			<Component ID="PassengerSeat_2_Visibility_1" Node="Pos_02_Fig_04_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 1 164 (A:PAYLOAD STATION WEIGHT:4, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>	
			<!-- range 165 lbs to 179 lbs -->
			<Component ID="PassengerSeat_2_Visibility_2" Node="Pos_02_Fig_03_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 165 179 (A:PAYLOAD STATION WEIGHT:4, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<!-- range 180 lbs to 194 lbs -->
			<Component ID="PassengerSeat_2_Visibility_3" Node="Pos_02_Fig_05_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 180 194 (A:PAYLOAD STATION WEIGHT:4, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<!-- range 195 lbs to 209 lbs -->
			<Component ID="PassengerSeat_2_Visibility_4" Node="Pos_02_Fig_01_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 195 209 (A:PAYLOAD STATION WEIGHT:4, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<!-- above 209 lbs -->
			<Component ID="PassengerSeat_2_Visibility_5" Node="Pos_02_Fig_02_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! (A:PAYLOAD STATION WEIGHT:4, pounds) 209 &gt; and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>

		<!-- station_load.4 / payload station weight:5 (rear-left) -->
			<!-- below 135 lbs -->
			<Component ID="PassengerSeat_3_Visibility_1" Node="Pos_03_Fig_03_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 1 134 (A:PAYLOAD STATION WEIGHT:5, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>	
			<!-- range 135 lbs to 164 lbs -->
			<Component ID="PassengerSeat_3_Visibility_2" Node="Pos_03_Fig_02_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 135 164 (A:PAYLOAD STATION WEIGHT:5, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<!-- above 164 lbs -->
			<Component ID="PassengerSeat_3_Visibility_3" Node="Pos_03_Fig_01_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! (A:PAYLOAD STATION WEIGHT:5, pounds) 164 &gt; and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>

		<!-- station_load.5 / payload station weight:6 (rear-right) -->
			<!-- below 135 lbs -->
			<Component ID="PassengerSeat_4_Visibility_1" Node="Pos_04_Fig_03_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 1 134 (A:PAYLOAD STATION WEIGHT:6, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>	
			<!-- range 135 lbs to 164 lbs -->
			<Component ID="PassengerSeat_4_Visibility_2" Node="Pos_04_Fig_02_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! 135 164 (A:PAYLOAD STATION WEIGHT:6, pounds) rng and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<!-- above 164 lbs -->
			<Component ID="PassengerSeat_4_Visibility_3" Node="Pos_04_Fig_01_Helper">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:C310_TAB_HIDE_COPILOT) ! (A:PAYLOAD STATION WEIGHT:6, pounds) 164 &gt; and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>

	<!-- LUGGAGE #################################### -->
	
		<!-- station_load.8 /  payload station weight:9 -->
			<Component ID="LuggageRear_Visibility_1" Node="Luggage_Inside_01">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(A:PAYLOAD STATION WEIGHT:9, pounds) 0 &gt;</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="LuggageRear_Visibility_2" Node="Luggage_Inside_02">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(A:PAYLOAD STATION WEIGHT:9, pounds) 35 &gt;</VISIBILITY_CODE>
				</UseTemplate>
			</Component>

	</Behaviors>
</ModelInfo>